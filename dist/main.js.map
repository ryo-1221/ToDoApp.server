{"version":3,"file":"main.js","mappings":"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","sources":["webpack://server/./db/config.js","webpack://server/./node_modules/@vendia/serverless-express/src/configure.js","webpack://server/./node_modules/@vendia/serverless-express/src/constants.js","webpack://server/./node_modules/@vendia/serverless-express/src/current-invoke.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/alb.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/api-gateway-v1.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/api-gateway-v2.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/dynamodb.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/eventbridge.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/kinesis.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/lambda-edge.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/sns.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/aws/sqs.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/azure/http-function-runtime-v3.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/azure/http-function-runtime-v4.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/index.js","webpack://server/./node_modules/@vendia/serverless-express/src/event-sources/utils.js","webpack://server/./node_modules/@vendia/serverless-express/src/frameworks/express.js","webpack://server/./node_modules/@vendia/serverless-express/src/frameworks/hapi.js","webpack://server/./node_modules/@vendia/serverless-express/src/frameworks/index.js","webpack://server/./node_modules/@vendia/serverless-express/src/frameworks/koa.js","webpack://server/./node_modules/@vendia/serverless-express/src/index.js","webpack://server/./node_modules/@vendia/serverless-express/src/is-binary.js","webpack://server/./node_modules/@vendia/serverless-express/src/logger.js","webpack://server/./node_modules/@vendia/serverless-express/src/make-resolver.js","webpack://server/./node_modules/@vendia/serverless-express/src/request.js","webpack://server/./node_modules/@vendia/serverless-express/src/response.js","webpack://server/./node_modules/@vendia/serverless-express/src/transport.js","webpack://server/./node_modules/accepts/index.js","webpack://server/./node_modules/array-flatten/array-flatten.js","webpack://server/./node_modules/assert-options/dist/src/index.js","webpack://server/./node_modules/basic-auth/index.js","webpack://server/./node_modules/body-parser/index.js","webpack://server/./node_modules/body-parser/lib/read.js","webpack://server/./node_modules/body-parser/lib/types/json.js","webpack://server/./node_modules/body-parser/lib/types/raw.js","webpack://server/./node_modules/body-parser/lib/types/text.js","webpack://server/./node_modules/body-parser/lib/types/urlencoded.js","webpack://server/./node_modules/buffer-from/index.js","webpack://server/./node_modules/bytes/index.js","webpack://server/./node_modules/content-disposition/index.js","webpack://server/./node_modules/content-type/index.js","webpack://server/./node_modules/cookie-parser/index.js","webpack://server/./node_modules/cookie-signature/index.js","webpack://server/./node_modules/cookie/index.js","webpack://server/./node_modules/debug/src/browser.js","webpack://server/./node_modules/debug/src/debug.js","webpack://server/./node_modules/debug/src/index.js","webpack://server/./node_modules/debug/src/node.js","webpack://server/./node_modules/depd/index.js","webpack://server/./node_modules/depd/lib/compat/callsite-tostring.js","webpack://server/./node_modules/depd/lib/compat/event-listener-count.js","webpack://server/./node_modules/depd/lib/compat/index.js","webpack://server/./node_modules/destroy/index.js","webpack://server/./node_modules/dotenv/lib/main.js","webpack://server/./node_modules/ee-first/index.js","webpack://server/./node_modules/encodeurl/index.js","webpack://server/./node_modules/escape-html/index.js","webpack://server/./node_modules/etag/index.js","webpack://server/./node_modules/express/index.js","webpack://server/./node_modules/express/lib/application.js","webpack://server/./node_modules/express/lib/express.js","webpack://server/./node_modules/express/lib/middleware/init.js","webpack://server/./node_modules/express/lib/middleware/query.js","webpack://server/./node_modules/express/lib/request.js","webpack://server/./node_modules/express/lib/response.js","webpack://server/./node_modules/express/lib/router/index.js","webpack://server/./node_modules/express/lib/router/layer.js","webpack://server/./node_modules/express/lib/router/route.js","webpack://server/./node_modules/express/lib/utils.js","webpack://server/./node_modules/express/lib/view.js","webpack://server/./node_modules/express/lib/ sync","webpack://server/./node_modules/express/node_modules/cookie/index.js","webpack://server/./node_modules/finalhandler/index.js","webpack://server/./node_modules/forwarded/index.js","webpack://server/./node_modules/fresh/index.js","webpack://server/./node_modules/http-errors/index.js","webpack://server/./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack://server/./node_modules/iconv-lite/encodings/dbcs-data.js","webpack://server/./node_modules/iconv-lite/encodings/index.js","webpack://server/./node_modules/iconv-lite/encodings/internal.js","webpack://server/./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack://server/./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack://server/./node_modules/iconv-lite/encodings/sbcs-data.js","webpack://server/./node_modules/iconv-lite/encodings/utf16.js","webpack://server/./node_modules/iconv-lite/encodings/utf7.js","webpack://server/./node_modules/iconv-lite/lib/bom-handling.js","webpack://server/./node_modules/iconv-lite/lib/extend-node.js","webpack://server/./node_modules/iconv-lite/lib/index.js","webpack://server/./node_modules/iconv-lite/lib/streams.js","webpack://server/./node_modules/inherits/inherits.js","webpack://server/./node_modules/inherits/inherits_browser.js","webpack://server/./node_modules/ipaddr.js/lib/ipaddr.js","webpack://server/./node_modules/js-yaml/index.js","webpack://server/./node_modules/js-yaml/lib/common.js","webpack://server/./node_modules/js-yaml/lib/dumper.js","webpack://server/./node_modules/js-yaml/lib/exception.js","webpack://server/./node_modules/js-yaml/lib/loader.js","webpack://server/./node_modules/js-yaml/lib/schema.js","webpack://server/./node_modules/js-yaml/lib/schema/core.js","webpack://server/./node_modules/js-yaml/lib/schema/default.js","webpack://server/./node_modules/js-yaml/lib/schema/failsafe.js","webpack://server/./node_modules/js-yaml/lib/schema/json.js","webpack://server/./node_modules/js-yaml/lib/snippet.js","webpack://server/./node_modules/js-yaml/lib/type.js","webpack://server/./node_modules/js-yaml/lib/type/binary.js","webpack://server/./node_modules/js-yaml/lib/type/bool.js","webpack://server/./node_modules/js-yaml/lib/type/float.js","webpack://server/./node_modules/js-yaml/lib/type/int.js","webpack://server/./node_modules/js-yaml/lib/type/map.js","webpack://server/./node_modules/js-yaml/lib/type/merge.js","webpack://server/./node_modules/js-yaml/lib/type/null.js","webpack://server/./node_modules/js-yaml/lib/type/omap.js","webpack://server/./node_modules/js-yaml/lib/type/pairs.js","webpack://server/./node_modules/js-yaml/lib/type/seq.js","webpack://server/./node_modules/js-yaml/lib/type/set.js","webpack://server/./node_modules/js-yaml/lib/type/str.js","webpack://server/./node_modules/js-yaml/lib/type/timestamp.js","webpack://server/./node_modules/media-typer/index.js","webpack://server/./node_modules/merge-descriptors/index.js","webpack://server/./node_modules/methods/index.js","webpack://server/./node_modules/mime-db/index.js","webpack://server/./node_modules/mime-types/index.js","webpack://server/./node_modules/mime/mime.js","webpack://server/./node_modules/morgan/index.js","webpack://server/./node_modules/ms/index.js","webpack://server/./node_modules/negotiator/index.js","webpack://server/./node_modules/negotiator/lib/charset.js","webpack://server/./node_modules/negotiator/lib/encoding.js","webpack://server/./node_modules/negotiator/lib/language.js","webpack://server/./node_modules/negotiator/lib/mediaType.js","webpack://server/./node_modules/on-finished/index.js","webpack://server/./node_modules/on-headers/index.js","webpack://server/./node_modules/parseurl/index.js","webpack://server/./node_modules/path-to-regexp/index.js","webpack://server/./node_modules/pg-connection-string/index.js","webpack://server/./node_modules/pg-int8/index.js","webpack://server/./node_modules/pg-minify/lib/error.js","webpack://server/./node_modules/pg-minify/lib/index.js","webpack://server/./node_modules/pg-minify/lib/parser.js","webpack://server/./node_modules/pg-minify/lib/utils.js","webpack://server/./node_modules/pg-pool/index.js","webpack://server/./node_modules/pg-promise/lib/connect.js","webpack://server/./node_modules/pg-promise/lib/context.js","webpack://server/./node_modules/pg-promise/lib/database-pool.js","webpack://server/./node_modules/pg-promise/lib/database.js","webpack://server/./node_modules/pg-promise/lib/errors/index.js","webpack://server/./node_modules/pg-promise/lib/errors/parameterized-query-error.js","webpack://server/./node_modules/pg-promise/lib/errors/prepared-statement-error.js","webpack://server/./node_modules/pg-promise/lib/errors/query-file-error.js","webpack://server/./node_modules/pg-promise/lib/errors/query-result-error.js","webpack://server/./node_modules/pg-promise/lib/events.js","webpack://server/./node_modules/pg-promise/lib/formatting.js","webpack://server/./node_modules/pg-promise/lib/helpers/column-set.js","webpack://server/./node_modules/pg-promise/lib/helpers/column.js","webpack://server/./node_modules/pg-promise/lib/helpers/index.js","webpack://server/./node_modules/pg-promise/lib/helpers/methods/concat.js","webpack://server/./node_modules/pg-promise/lib/helpers/methods/index.js","webpack://server/./node_modules/pg-promise/lib/helpers/methods/insert.js","webpack://server/./node_modules/pg-promise/lib/helpers/methods/sets.js","webpack://server/./node_modules/pg-promise/lib/helpers/methods/update.js","webpack://server/./node_modules/pg-promise/lib/helpers/methods/values.js","webpack://server/./node_modules/pg-promise/lib/helpers/table-name.js","webpack://server/./node_modules/pg-promise/lib/index.js","webpack://server/./node_modules/pg-promise/lib/inner-state.js","webpack://server/./node_modules/pg-promise/lib/main.js","webpack://server/./node_modules/pg-promise/lib/patterns.js","webpack://server/./node_modules/pg-promise/lib/promise-adapter.js","webpack://server/./node_modules/pg-promise/lib/promise-parser.js","webpack://server/./node_modules/pg-promise/lib/query-file.js","webpack://server/./node_modules/pg-promise/lib/query-result.js","webpack://server/./node_modules/pg-promise/lib/query.js","webpack://server/./node_modules/pg-promise/lib/special-query.js","webpack://server/./node_modules/pg-promise/lib/stream.js","webpack://server/./node_modules/pg-promise/lib/task.js","webpack://server/./node_modules/pg-promise/lib/text.js","webpack://server/./node_modules/pg-promise/lib/tx-mode.js","webpack://server/./node_modules/pg-promise/lib/types/index.js","webpack://server/./node_modules/pg-promise/lib/types/parameterized-query.js","webpack://server/./node_modules/pg-promise/lib/types/prepared-statement.js","webpack://server/./node_modules/pg-promise/lib/types/server-formatting.js","webpack://server/./node_modules/pg-promise/lib/utils/color.js","webpack://server/./node_modules/pg-promise/lib/utils/index.js","webpack://server/./node_modules/pg-promise/lib/utils/public.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/client.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/connection-parameters.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/connection.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/defaults.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/index.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/native/client.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/native/index.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/native/query.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/query.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/result.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/sasl.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/type-overrides.js","webpack://server/./node_modules/pg-promise/node_modules/pg/lib/utils.js","webpack://server/./node_modules/pg-protocol/dist/buffer-reader.js","webpack://server/./node_modules/pg-protocol/dist/buffer-writer.js","webpack://server/./node_modules/pg-protocol/dist/index.js","webpack://server/./node_modules/pg-protocol/dist/messages.js","webpack://server/./node_modules/pg-protocol/dist/parser.js","webpack://server/./node_modules/pg-protocol/dist/serializer.js","webpack://server/./node_modules/pg-types/index.js","webpack://server/./node_modules/pg-types/lib/arrayParser.js","webpack://server/./node_modules/pg-types/lib/binaryParsers.js","webpack://server/./node_modules/pg-types/lib/builtins.js","webpack://server/./node_modules/pg-types/lib/textParsers.js","webpack://server/./node_modules/pg/lib/client.js","webpack://server/./node_modules/pg/lib/connection-parameters.js","webpack://server/./node_modules/pg/lib/connection.js","webpack://server/./node_modules/pg/lib/defaults.js","webpack://server/./node_modules/pg/lib/index.js","webpack://server/./node_modules/pg/lib/native/client.js","webpack://server/./node_modules/pg/lib/native/index.js","webpack://server/./node_modules/pg/lib/native/query.js","webpack://server/./node_modules/pg/lib/query.js","webpack://server/./node_modules/pg/lib/result.js","webpack://server/./node_modules/pg/lib/sasl.js","webpack://server/./node_modules/pg/lib/type-overrides.js","webpack://server/./node_modules/pg/lib/utils.js","webpack://server/./node_modules/pgpass/lib/helper.js","webpack://server/./node_modules/pgpass/lib/index.js","webpack://server/./node_modules/postgres-array/index.js","webpack://server/./node_modules/postgres-bytea/index.js","webpack://server/./node_modules/postgres-date/index.js","webpack://server/./node_modules/postgres-interval/index.js","webpack://server/./node_modules/proxy-addr/index.js","webpack://server/./node_modules/qs/lib/formats.js","webpack://server/./node_modules/qs/lib/index.js","webpack://server/./node_modules/qs/lib/parse.js","webpack://server/./node_modules/qs/lib/stringify.js","webpack://server/./node_modules/qs/lib/utils.js","webpack://server/./node_modules/range-parser/index.js","webpack://server/./node_modules/raw-body/index.js","webpack://server/./node_modules/safe-buffer/index.js","webpack://server/./node_modules/safer-buffer/safer.js","webpack://server/./node_modules/send/index.js","webpack://server/./node_modules/serve-static/index.js","webpack://server/./node_modules/setprototypeof/index.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/array-set.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/base64.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/binary-search.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/source-node.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/lib/util.js","webpack://server/./node_modules/source-map-support/node_modules/source-map/source-map.js","webpack://server/./node_modules/source-map-support/register.js","webpack://server/./node_modules/source-map-support/source-map-support.js","webpack://server/./node_modules/spex/lib/adapter.js","webpack://server/./node_modules/spex/lib/errors/batch.js","webpack://server/./node_modules/spex/lib/errors/index.js","webpack://server/./node_modules/spex/lib/errors/page.js","webpack://server/./node_modules/spex/lib/errors/sequence.js","webpack://server/./node_modules/spex/lib/ext/batch.js","webpack://server/./node_modules/spex/lib/ext/page.js","webpack://server/./node_modules/spex/lib/ext/sequence.js","webpack://server/./node_modules/spex/lib/ext/stream/index.js","webpack://server/./node_modules/spex/lib/ext/stream/read.js","webpack://server/./node_modules/spex/lib/index.js","webpack://server/./node_modules/spex/lib/utils/index.js","webpack://server/./node_modules/spex/lib/utils/static.js","webpack://server/./node_modules/split2/index.js","webpack://server/./node_modules/statuses/index.js","webpack://server/./node_modules/type-is/index.js","webpack://server/./node_modules/unpipe/index.js","webpack://server/./node_modules/utils-merge/index.js","webpack://server/./node_modules/uuid/dist/esm-node/rng.js","webpack://server/./node_modules/uuid/dist/esm-node/regex.js","webpack://server/./node_modules/uuid/dist/esm-node/validate.js","webpack://server/./node_modules/uuid/dist/esm-node/stringify.js","webpack://server/./node_modules/uuid/dist/esm-node/v1.js","webpack://server/./node_modules/uuid/dist/esm-node/parse.js","webpack://server/./node_modules/uuid/dist/esm-node/v35.js","webpack://server/./node_modules/uuid/dist/esm-node/md5.js","webpack://server/./node_modules/uuid/dist/esm-node/v3.js","webpack://server/./node_modules/uuid/dist/esm-node/v4.js","webpack://server/./node_modules/uuid/dist/esm-node/v5.js","webpack://server/./node_modules/uuid/dist/esm-node/sha1.js","webpack://server/./node_modules/uuid/dist/esm-node/nil.js","webpack://server/./node_modules/uuid/dist/esm-node/version.js","webpack://server/./node_modules/vary/index.js","webpack://server/./node_modules/xtend/mutable.js","webpack://server/./routes/index.js","webpack://server/./routes/todo.js","webpack://server/./src/app.js","webpack://server/external node-commonjs \"assert\"","webpack://server/external node-commonjs \"buffer\"","webpack://server/external node-commonjs \"crypto\"","webpack://server/external node-commonjs \"dns\"","webpack://server/external node-commonjs \"events\"","webpack://server/external node-commonjs \"fs\"","webpack://server/external node-commonjs \"http\"","webpack://server/external node-commonjs \"net\"","webpack://server/external node-commonjs \"os\"","webpack://server/external node-commonjs \"path\"","webpack://server/external node-commonjs \"querystring\"","webpack://server/external node-commonjs \"stream\"","webpack://server/external node-commonjs \"string_decoder\"","webpack://server/external node-commonjs \"tls\"","webpack://server/external node-commonjs \"tty\"","webpack://server/external node-commonjs \"url\"","webpack://server/external node-commonjs \"util\"","webpack://server/external node-commonjs \"zlib\"","webpack://server/webpack/bootstrap","webpack://server/webpack/runtime/compat get default export","webpack://server/webpack/runtime/define property getters","webpack://server/webpack/runtime/hasOwnProperty shorthand","webpack://server/webpack/runtime/make namespace object","webpack://server/webpack/runtime/node module decorator","webpack://server/./src/lambda.js"],"sourcesContent":["require('dotenv').config();\r\nconst { join: joinPath } = require('path');\r\n\r\n// ＤB接続情報\r\nconst pgp = require('pg-promise')();\r\nconst cn = {\r\n  host: process.env.DB_HOST, // 'localhost' is the default;\r\n  port: process.env.DB_PORT, // 5432 is the default;\r\n  database: process.env.DB_DATABASE,\r\n  user: process.env.DB_USER,\r\n  password: process.env.DB_PASSWORD,\r\n\r\n  // to auto-exit on idle, without having to shut-down the pool;\r\n  // see https://github.com/vitaly-t/pg-promise#library-de-initialization\r\n  allowExitOnIdle: true,\r\n};\r\nconsole.log(cn);\r\nconst db = pgp(cn); // database instance;\r\n// console.log(db.connect());\r\nmodule.exports.db = db;\r\n\r\n// sqlディレクトリのyamlファイル内のSQLをsqlidで紐づけ\r\nconst sql = (filename, sqlid) => {\r\n  const fullPath = joinPath('sql/', filename + '.yaml'); // generating full path;\r\n  const fs = require('fs');\r\n  const yaml = require('js-yaml');\r\n  const yamlText = fs.readFileSync(fullPath, 'utf8');\r\n\r\n  const sql = yaml.load(yamlText)[sqlid][0];\r\n  return sql;\r\n};\r\nmodule.exports.sql = sql;\r\n\r\n// DBへのクエリ実行\r\nconst execute = async (db, sql, param) => {\r\n  console.log('クエリ実行');\r\n  console.log('param:', param);\r\n  const results = await db.any(sql, param);\r\n  return JSON.parse(JSON.stringify(results));\r\n};\r\nmodule.exports.execute = execute;\r\n","const util = require('util')\nconst logger = require('./logger')\nconst { setCurrentInvoke } = require('./current-invoke')\nconst { getEventSource } = require('./event-sources')\nconst { getEventSourceNameBasedOnEvent } = require('./event-sources/utils')\nconst { getFramework } = require('./frameworks')\nconst makeResolver = require('./make-resolver')\nconst { forwardRequestToNodeServer, respondToEventSourceWithError } = require('./transport')\nconst { DEFAULT_BINARY_ENCODINGS, DEFAULT_BINARY_CONTENT_TYPES } = require('./constants')\n\nfunction getDefaultBinarySettings (deprecatedBinaryMimeTypes) {\n  return {\n    contentTypes: deprecatedBinaryMimeTypes || DEFAULT_BINARY_CONTENT_TYPES,\n    contentEncodings: DEFAULT_BINARY_ENCODINGS\n  }\n}\n\nfunction configure ({\n  app: configureApp,\n  logSettings,\n  log: configureLog = logger(logSettings),\n  framework: configureFramework = getFramework({ app: configureApp, log: configureLog }),\n  binaryMimeTypes: configureBinaryMimeTypes,\n  binarySettings: configureBinarySettings,\n  resolutionMode: configureResolutionMode = 'PROMISE',\n  eventSourceName: configureEventSourceName,\n  eventSource: configureEventFns,\n  eventSourceRoutes: configureEventSourceRoutes,\n  respondWithErrors: configureRespondWithErrors = process.env.NODE_ENV === 'development'\n} = {}) {\n  function proxy ({\n    app = configureApp,\n    framework = configureFramework,\n    event = {},\n    context = {},\n    callback = null,\n    resolutionMode = configureResolutionMode,\n    eventSourceName = configureEventSourceName || getEventSourceNameBasedOnEvent({ event }),\n    binaryMimeTypes = configureBinaryMimeTypes,\n    binarySettings = configureBinarySettings || getDefaultBinarySettings(binaryMimeTypes),\n    eventSource = configureEventFns || getEventSource({ eventSourceName }),\n    eventSourceRoutes = configureEventSourceRoutes || {},\n    log = configureLog,\n    respondWithErrors = configureRespondWithErrors\n  }) {\n    log.debug('SERVERLESS_EXPRESS:PROXY', {\n      event: util.inspect(event, { depth: null }),\n      context: util.inspect(context, { depth: null }),\n      resolutionMode,\n      eventSourceName,\n      binarySettings,\n      respondWithErrors\n    })\n\n    if (binaryMimeTypes) {\n      console.warn('[DEPRECATION NOTICE] { binaryMimeTypes: [] } is deprecated. base64 encoding is now automatically determined based on response content-type and content-encoding. If you need to manually set binary content types, instead, use { binarySettings: { contentTypes: [] } }')\n    }\n\n    setCurrentInvoke({ event, context })\n    return new Promise((resolve, reject) => {\n      const promise = {\n        resolve,\n        reject\n      }\n      const resolver = makeResolver({\n        context,\n        callback,\n        promise,\n        resolutionMode\n      })\n\n      try {\n        forwardRequestToNodeServer({\n          app,\n          framework,\n          event,\n          context,\n          resolver,\n          eventSourceName,\n          binarySettings,\n          eventSource,\n          eventSourceRoutes,\n          log\n        })\n      } catch (error) {\n        respondToEventSourceWithError({\n          error,\n          resolver,\n          log,\n          respondWithErrors,\n          eventSourceName,\n          eventSource\n        })\n      }\n    })\n  }\n\n  function handler (event, context, callback) {\n    return proxy({\n      event,\n      context,\n      callback\n    })\n  }\n\n  handler.handler = (...params) => {\n    console.warn('[DEPRECATION NOTICE] You\\'re using the deprecated `serverlessExpress({...}).handler({...})` method. This will be removed in a future version of @vendia/serverless-express. Instead, simply return `serverlessExpress({...})` as your handler.')\n    return handler(...params)\n  }\n\n  handler.proxy = (...params) => {\n    console.warn('[DEPRECATION NOTICE] You\\'re using the deprecated `serverlessExpress({...}).proxy({...})` method. This will be removed in a future version of @vendia/serverless-express. Instead, simply return `serverlessExpress({...})` as your handler.')\n    return proxy(...params)\n  }\n\n  handler.log = configureLog\n\n  return handler\n}\n\nmodule.exports = configure\n","module.exports.DEFAULT_BINARY_ENCODINGS = ['gzip', 'deflate', 'br']\nmodule.exports.DEFAULT_BINARY_CONTENT_TYPES = ['image/*']\n","const currentInvoke = {}\n\nfunction getCurrentInvoke () {\n  return currentInvoke\n}\n\nfunction setCurrentInvoke ({ event, context }) {\n  currentInvoke.event = event\n  currentInvoke.context = context\n}\n\nmodule.exports = {\n  getCurrentInvoke,\n  setCurrentInvoke\n}\n","const url = require('url')\nconst { getRequestValuesFromEvent, getMultiValueHeaders } = require('../utils')\n\nfunction getPathWithQueryStringUseUnescapeParams ({\n  event,\n  // NOTE: Use `event.pathParameters.proxy` if available ({proxy+}); fall back to `event.path`\n  path = (event.pathParameters && event.pathParameters.proxy && `/${event.pathParameters.proxy}`) || event.path,\n  // NOTE: Strip base path for custom domains\n  stripBasePath = '',\n  replaceRegex = new RegExp(`^${stripBasePath}`)\n}) {\n  const query = {}\n  // decode everything back into utf-8 text.\n  if (event.multiValueQueryStringParameters) {\n    for (const key in event.multiValueQueryStringParameters) {\n      const formattedKey = decodeURIComponent(key)\n      query[formattedKey] = event.multiValueQueryStringParameters[key].map(value => decodeURIComponent(value))\n    }\n  } else {\n    for (const key in event.queryStringParameters) {\n      const formattedKey = decodeURIComponent(key)\n      query[formattedKey] = decodeURIComponent(event.queryStringParameters[key])\n    }\n  }\n\n  return url.format({\n    pathname: path.replace(replaceRegex, ''),\n    query\n  })\n}\n\nconst getRequestValuesFromAlbEvent = ({ event }) => {\n  const values = getRequestValuesFromEvent({\n    event,\n    path: getPathWithQueryStringUseUnescapeParams({ event })\n  })\n  return values\n}\n\nconst getResponseToAlb = ({\n  event,\n  statusCode,\n  body,\n  headers: responseHeaders,\n  isBase64Encoded\n}) => {\n  const multiValueHeaders = !event.headers ? getMultiValueHeaders({ headers: responseHeaders }) : undefined\n  const headers = event.headers\n    ? Object.entries(responseHeaders).reduce((acc, [k, v]) => {\n      acc[k] = Array.isArray(v) ? v[0] : v\n      return acc\n    }, {})\n    : undefined\n\n  return {\n    statusCode,\n    body,\n    headers,\n    multiValueHeaders,\n    isBase64Encoded\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromAlbEvent,\n  getResponse: getResponseToAlb\n}\n","const { getRequestValuesFromEvent, getMultiValueHeaders } = require('../utils')\n\nconst getRequestValuesFromApiGatewayEvent = ({ event }) => getRequestValuesFromEvent({ event })\n\nfunction getResponseToApiGateway ({\n  statusCode,\n  body,\n  headers,\n  isBase64Encoded\n}) {\n  const multiValueHeaders = getMultiValueHeaders({ headers })\n  const transferEncodingHeader = multiValueHeaders['transfer-encoding']\n\n  // chunked transfer not currently supported by API Gateway\n  if (transferEncodingHeader && transferEncodingHeader.includes('chunked')) {\n    multiValueHeaders['transfer-encoding'] = transferEncodingHeader.filter(headerValue => headerValue !== 'chunked')\n  }\n\n  return {\n    statusCode,\n    body,\n    multiValueHeaders,\n    isBase64Encoded\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromApiGatewayEvent,\n  getResponse: getResponseToApiGateway\n}\n","const url = require('url')\nconst { getEventBody, getCommaDelimitedHeaders } = require('../utils')\n\nfunction getRequestValuesFromApiGatewayEvent ({ event }) {\n  const {\n    requestContext,\n    requestPath,\n    rawPath,\n    rawQueryString,\n    cookies\n  } = event\n  const method = requestContext.http.method\n  const requestPathOrRawPath = requestPath || rawPath\n  const basePath = '' // TODO: Test with custom domain\n  const stripBasePathRegex = new RegExp(`^${basePath}`)\n  const path = url.format({\n    pathname: requestPathOrRawPath.replace(stripBasePathRegex, ''),\n    search: rawQueryString\n  })\n\n  const headers = {}\n\n  if (cookies) {\n    headers.cookie = cookies.join('; ')\n  }\n\n  Object.entries(event.headers).forEach(([headerKey, headerValue]) => {\n    headers[headerKey.toLowerCase()] = headerValue\n  })\n\n  let body\n\n  if (event.body) {\n    body = getEventBody({ event })\n    const isBase64Encoded = event.isBase64Encoded\n    headers['content-length'] = Buffer.byteLength(body, isBase64Encoded ? 'base64' : 'utf8')\n  }\n\n  return {\n    method,\n    headers,\n    body,\n    remoteAddress: requestContext.http.sourceIp,\n    path\n  }\n}\n\nfunction getResponseToApiGateway ({\n  statusCode,\n  body,\n  headers = {},\n  isBase64Encoded = false,\n  response = {}\n}) {\n  if (headers['transfer-encoding'] === 'chunked' || response.chunkedEncoding) {\n    throw new Error('chunked encoding is not supported by API Gateway')\n  }\n\n  const responseToApiGateway = {\n    statusCode,\n    body,\n    isBase64Encoded\n  }\n\n  const cookies = headers['set-cookie']\n  if (cookies) {\n    responseToApiGateway.cookies = Array.isArray(cookies) ? cookies : [cookies]\n    delete headers['set-cookie']\n  }\n\n  responseToApiGateway.headers = getCommaDelimitedHeaders({ headersMap: headers })\n\n  return responseToApiGateway\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromApiGatewayEvent,\n  getResponse: getResponseToApiGateway\n}\n","const { emptyResponseMapper } = require('../utils')\n\nconst getRequestValuesFromDynamoDB = ({ event }) => {\n  const method = 'POST'\n  const headers = { host: 'dynamodb.amazonaws.com' }\n  const body = event\n\n  return {\n    method,\n    headers,\n    body\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromDynamoDB,\n  getResponse: emptyResponseMapper\n}\n","const { emptyResponseMapper } = require('../utils')\n\nconst getRequestValuesFromEventBridge = ({ event }) => {\n  const method = 'POST'\n  const headers = { host: 'events.amazonaws.com' }\n  const body = event\n\n  return {\n    method,\n    headers,\n    body\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromEventBridge,\n  getResponse: emptyResponseMapper\n}\n","const { emptyResponseMapper } = require('../utils')\n\nconst getRequestValuesFromKinesis = ({ event }) => {\n  const method = 'POST'\n  const headers = { host: 'kinesis.amazonaws.com' }\n  const body = event\n\n  return {\n    method,\n    headers,\n    body\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromKinesis,\n  getResponse: emptyResponseMapper\n}\n","const url = require('url')\nconst { getEventBody } = require('../utils')\n\n// Lambda@Edge fails if certain headers are returned\nconst RESPONSE_HEADERS_DENY_LIST = ['content-length']\n\nfunction getRequestValuesFromLambdaEdgeEvent ({ event }) {\n  const cloudFrontRequest = event.Records[0].cf.request\n  const {\n    headers: headersMap,\n    uri,\n    method,\n    querystring,\n    body: requestBodyObject = {},\n    clientIp\n  } = cloudFrontRequest\n  let body = null\n\n  const headers = {}\n\n  Object.entries(headersMap).forEach(([headerKey, headerValue]) => {\n    headers[headerKey] = headerValue.map(header => header.value).join(',')\n  })\n\n  if (requestBodyObject.data) {\n    const isBase64Encoded = requestBodyObject.encoding === 'base64'\n    body = getEventBody({\n      body: requestBodyObject.data,\n      isBase64Encoded\n    })\n    headers['content-length'] = Buffer.byteLength(body, isBase64Encoded ? 'base64' : 'utf8')\n  }\n\n  const path = url.format({\n    pathname: uri,\n    search: querystring\n  })\n\n  const { host } = headers\n  return {\n    method,\n    path,\n    headers,\n    body,\n    remoteAddress: clientIp,\n    host,\n    hostname: host // Alias for host\n    // protocol: `${headers['X-Forwarded-Proto']}:`,\n    // port: headers['X-Forwarded-Port']\n  }\n}\nfunction getResponseToLambdaEdge ({\n  statusCode,\n  body,\n  headers,\n  isBase64Encoded\n}) {\n  const headersMap = {}\n  Object.entries(headers).forEach(([headerKey, headerValue]) => {\n    const headerKeyLowerCase = headerKey.toLowerCase()\n    if (RESPONSE_HEADERS_DENY_LIST.includes(headerKeyLowerCase)) return\n    if (!headersMap[headerKeyLowerCase]) headersMap[headerKeyLowerCase] = []\n\n    if (!Array.isArray(headerValue)) {\n      headersMap[headerKeyLowerCase].push({\n        key: headerKeyLowerCase,\n        value: headerValue\n      })\n      return\n    }\n\n    const headersArray = headerValue.map(v => ({\n      key: headerKeyLowerCase,\n      value: v\n    }))\n    headersMap[headerKeyLowerCase].push(...headersArray)\n  })\n  const bodyEncoding = isBase64Encoded ? 'base64' : 'text'\n  const responseToService = {\n    status: statusCode,\n    body,\n    headers: headersMap,\n    bodyEncoding\n  }\n\n  // TODO: Handle if responseToServiceBytes exceeds Lambda@Edge limits\n  // const responseToServiceBytes = (new TextEncoder().encode(JSON.stringify(responseToService))).length\n\n  return responseToService\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromLambdaEdgeEvent,\n  getResponse: getResponseToLambdaEdge\n}\n","const { emptyResponseMapper } = require('../utils')\n\nconst getRequestValuesFromSns = ({ event }) => {\n  const method = 'POST'\n  const headers = { host: 'sns.amazonaws.com' }\n  const body = event\n\n  return {\n    method,\n    headers,\n    body\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromSns,\n  getResponse: emptyResponseMapper\n}\n","const { emptyResponseMapper } = require('../utils')\n\nconst getRequestValuesFromSqs = ({ event }) => {\n  const method = 'POST'\n  const headers = { host: 'sqs.amazonaws.com' }\n  const body = event\n\n  return {\n    method,\n    headers,\n    body\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromSqs,\n  getResponse: emptyResponseMapper\n}\n","const url = require('url')\nconst { getCommaDelimitedHeaders, parseCookie } = require('../utils')\n\nfunction getRequestValuesFromHttpFunctionEvent ({ event }) {\n  const context = event.req\n\n  const method = context.method\n  const urlObject = new url.URL(context.url)\n  const path = urlObject.pathname + urlObject.search\n  const headers = { cookies: context.headers.cookie }\n\n  Object.entries(context.headers).forEach(([headerKey, headerValue]) => {\n    headers[headerKey.toLowerCase()] = headerValue\n  })\n\n  const remoteAddress = headers['x-forwarded-for']\n\n  const body = context.rawBody\n  if (body) {\n    headers['content-length'] = Buffer.byteLength(body, 'utf8')\n  }\n\n  return {\n    method,\n    headers,\n    body,\n    remoteAddress,\n    path\n  }\n}\n\nfunction getResponseToHttpFunction ({ statusCode, body, headers = {}, isBase64Encoded = false, response = {} }) {\n  const responseToHttpFunction = {\n    statusCode,\n    body,\n    isBase64Encoded\n  }\n\n  if (isBase64Encoded) {\n    responseToHttpFunction.body = Buffer.from(body, 'base64')\n    responseToHttpFunction.isBase64Encoded = false\n  }\n\n  const cookies = []\n  // headers['set-cookie'] can be a string of one cookie, or an array of cookies\n  // headerCookies should always be an array\n  const headerCookies = [].concat(headers['set-cookie'] || [])\n\n  // Convert 'set-cookie' to Azure Function 3.x cookie object array\n  // https://github.com/Azure/azure-functions-nodejs-worker/blob/v3.x/types/index.d.ts#L150\n  if (headerCookies.length > 0) {\n    for (const headerCookie of headerCookies) {\n      const parsedCookie = parseCookie(headerCookie)\n      const nameValueTuple = headerCookie.split(';')[0].split('=')\n\n      const cookie = { name: nameValueTuple[0], value: nameValueTuple[1] }\n\n      if (headerCookie.toLowerCase().includes('httponly')) {\n        cookie.httpOnly = true\n      }\n\n      if (headerCookie.toLowerCase().includes('secure')) {\n        cookie.secure = true\n      }\n\n      if (parsedCookie['max-age']) {\n        cookie.maxAge = +parsedCookie['max-age']\n      }\n\n      if (parsedCookie.samesite) {\n        cookie.sameSite = parsedCookie.samesite\n      }\n\n      if (parsedCookie.expires && typeof parsedCookie.expires === 'string') {\n        cookie.expires = new Date(parsedCookie.expires)\n      } else if (parsedCookie.expires && typeof parsedCookie.expires === 'number') {\n        cookie.expires = parsedCookie.expires\n      }\n\n      if (parsedCookie.path) {\n        cookie.path = parsedCookie.path\n      }\n\n      if (parsedCookie.domain) {\n        cookie.domain = parsedCookie.domain\n      }\n\n      cookies.push(cookie)\n    }\n\n    responseToHttpFunction.cookies = cookies\n    delete headers['set-cookie']\n  }\n\n  responseToHttpFunction.headers = getCommaDelimitedHeaders({ headersMap: headers })\n\n  return responseToHttpFunction\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromHttpFunctionEvent,\n  getResponse: getResponseToHttpFunction\n}\n","const { getRequest, getResponse } = require('./http-function-runtime-v3')\n\nmodule.exports = {\n  getRequest: getRequest,\n  getResponse: getResponse\n}\n","const awsApiGatewayV1EventSource = require('./aws/api-gateway-v1')\nconst awsApiGatewayV2EventSource = require('./aws/api-gateway-v2')\nconst awsAlbEventSource = require('./aws/alb')\nconst awsLambdaEdgeEventSource = require('./aws/lambda-edge')\nconst awsSnsEventSource = require('./aws/sns')\nconst awsSqsEventSource = require('./aws/sqs')\nconst awsDynamoDbEventSource = require('./aws/dynamodb')\nconst azureHttpFunctionV3EventSource = require('./azure/http-function-runtime-v3')\nconst azureHttpFunctionV4EventSource = require('./azure/http-function-runtime-v4')\nconst awsEventBridgeEventSource = require('./aws/eventbridge')\nconst awsKinesisEventSource = require('./aws/kinesis')\n\nfunction getEventSource ({ eventSourceName }) {\n  switch (eventSourceName) {\n    case 'AWS_API_GATEWAY_V1':\n      return awsApiGatewayV1EventSource\n    case 'AWS_API_GATEWAY_V2':\n      return awsApiGatewayV2EventSource\n    case 'AWS_ALB':\n      return awsAlbEventSource\n    case 'AWS_LAMBDA_EDGE':\n      return awsLambdaEdgeEventSource\n    case 'AWS_DYNAMODB':\n      return awsDynamoDbEventSource\n    case 'AWS_SNS':\n      return awsSnsEventSource\n    case 'AZURE_HTTP_FUNCTION_V3':\n      return azureHttpFunctionV3EventSource\n    case 'AZURE_HTTP_FUNCTION_V4':\n      return azureHttpFunctionV4EventSource\n    case 'AWS_SQS':\n      return awsSqsEventSource\n    case 'AWS_EVENTBRIDGE':\n      return awsEventBridgeEventSource\n    case 'AWS_KINESIS_DATA_STREAM':\n      return awsKinesisEventSource\n    default:\n      throw new Error('Couldn\\'t detect valid event source.')\n  }\n}\n\nmodule.exports = {\n  getEventSource\n}\n","const url = require('url')\n\nfunction getPathWithQueryStringParams ({\n  event,\n  query = event.multiValueQueryStringParameters,\n  // NOTE: Use `event.pathParameters.proxy` if available ({proxy+}); fall back to `event.path`\n  path = (event.pathParameters && event.pathParameters.proxy && `/${event.pathParameters.proxy}`) || event.path,\n  // NOTE: Strip base path for custom domains\n  stripBasePath = '',\n  replaceRegex = new RegExp(`^${stripBasePath}`)\n}) {\n  return url.format({\n    pathname: path.replace(replaceRegex, ''),\n    query\n  })\n}\n\nfunction getEventBody ({\n  event,\n  body = event.body,\n  isBase64Encoded = event.isBase64Encoded\n}) {\n  return Buffer.from(body, isBase64Encoded ? 'base64' : 'utf8')\n}\n\nfunction getRequestValuesFromEvent ({\n  event,\n  method = event.httpMethod,\n  path = getPathWithQueryStringParams({ event })\n}) {\n  let headers = {}\n\n  if (event.multiValueHeaders) {\n    headers = getCommaDelimitedHeaders({ headersMap: event.multiValueHeaders, lowerCaseKey: true })\n  } else if (event.headers) {\n    headers = event.headers\n  }\n\n  let body\n\n  if (event.body) {\n    body = getEventBody({ event })\n    const { isBase64Encoded } = event\n    headers['content-length'] = Buffer.byteLength(body, isBase64Encoded ? 'base64' : 'utf8')\n  }\n\n  const remoteAddress = (event && event.requestContext && event.requestContext.identity && event.requestContext.identity.sourceIp) || ''\n\n  return {\n    method,\n    headers,\n    body,\n    remoteAddress,\n    path\n  }\n}\n\nfunction getMultiValueHeaders ({ headers }) {\n  const multiValueHeaders = {}\n\n  Object.entries(headers).forEach(([headerKey, headerValue]) => {\n    const headerArray = Array.isArray(headerValue) ? headerValue.map(String) : [String(headerValue)]\n\n    multiValueHeaders[headerKey.toLowerCase()] = headerArray\n  })\n\n  return multiValueHeaders\n}\n\nfunction getEventSourceNameBasedOnEvent ({\n  event\n}) {\n  if (event.requestContext && event.requestContext.elb) return 'AWS_ALB'\n  if (event.Records) {\n    const eventSource = event.Records[0] ? event.Records[0].EventSource || event.Records[0].eventSource : undefined\n    if (eventSource === 'aws:sns') {\n      return 'AWS_SNS'\n    }\n    if (eventSource === 'aws:dynamodb') {\n      return 'AWS_DYNAMODB'\n    }\n    if (eventSource === 'aws:sqs') {\n      return 'AWS_SQS'\n    }\n    if (eventSource === 'aws:kinesis') {\n      return 'AWS_KINESIS_DATA_STREAM'\n    }\n    return 'AWS_LAMBDA_EDGE'\n  }\n  if (event.requestContext) {\n    return event.version === '2.0' ? 'AWS_API_GATEWAY_V2' : 'AWS_API_GATEWAY_V1'\n  }\n  if (event.traceContext) {\n    const functionsExtensionVersion = process.env.FUNCTIONS_EXTENSION_VERSION\n\n    if (!functionsExtensionVersion) {\n      console.warn('The environment variable \\'FUNCTIONS_EXTENSION_VERSION\\' is not set. Only the function runtime \\'~3\\' is supported.')\n    } else if (functionsExtensionVersion === '~3') {\n      return 'AZURE_HTTP_FUNCTION_V3'\n    } else if (functionsExtensionVersion === '~4') {\n      return 'AZURE_HTTP_FUNCTION_V4'\n    } else {\n      console.warn('The function runtime \\'' + functionsExtensionVersion + '\\' is not supported. Only \\'~3\\' and \\'~4\\' are supported.')\n    }\n  }\n  if (\n    event.version &&\n    event.version === '0' &&\n    event.id &&\n    event['detail-type'] &&\n    event.source &&\n    event.source.startsWith('aws.') && // Might need to adjust this for \"Partner Sources\", e.g. Auth0, Datadog, etc\n    event.account &&\n    event.time &&\n    event.region &&\n    event.resources &&\n    Array.isArray(event.resources) &&\n    event.detail &&\n    typeof event.detail === 'object' &&\n    !Array.isArray(event.detail)\n  ) {\n    // AWS doesn't have a defining Event Source here, so we're being incredibly selective on the structure\n    // Ref: https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents.html\n    return 'AWS_EVENTBRIDGE'\n  }\n\n  throw new Error('Unable to determine event source based on event.')\n}\n\nfunction getCommaDelimitedHeaders ({ headersMap, separator = ',', lowerCaseKey = false }) {\n  const commaDelimitedHeaders = {}\n\n  Object.entries(headersMap)\n    .forEach(([headerKey, headerValue]) => {\n      const newKey = lowerCaseKey ? headerKey.toLowerCase() : headerKey\n      if (Array.isArray(headerValue)) {\n        commaDelimitedHeaders[newKey] = headerValue.join(separator)\n      } else {\n        commaDelimitedHeaders[newKey] = headerValue\n      }\n    })\n\n  return commaDelimitedHeaders\n}\n\nconst emptyResponseMapper = () => {}\n\nconst parseCookie = (str) =>\n  str.split(';')\n    .map((v) => v.split('='))\n    .reduce((acc, v) => {\n      if (!v[1]) {\n        return acc\n      }\n      acc[decodeURIComponent(v[0].trim().toLowerCase())] = decodeURIComponent(v[1].trim())\n      return acc\n    }, {})\n\nmodule.exports = {\n  getPathWithQueryStringParams,\n  getRequestValuesFromEvent,\n  getMultiValueHeaders,\n  getEventSourceNameBasedOnEvent,\n  getEventBody,\n  getCommaDelimitedHeaders,\n  emptyResponseMapper,\n  parseCookie\n}\n","async function sendExpressRequest ({ app, request, response }) {\n  app.handle(request, response)\n}\n\nmodule.exports = {\n  sendRequest: sendExpressRequest\n}\n","async function sendHapiRequest ({ app, request, response }) {\n  app(request, response)\n}\n\nmodule.exports = {\n  sendRequest: sendHapiRequest\n}\n","// ATTRIBUTION: https://github.com/dougmoscrop/serverless-http\nconst express = require('./express')\nconst koa = require('./koa')\nconst hapi = require('./hapi')\n\nfunction getFramework ({ app, log }) {\n  if (typeof app.callback === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:KOA')\n    return koa\n  }\n\n  if (typeof app.handle === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:EXPRESS')\n    return express\n  }\n\n  // Framework: ??\n  if (typeof app.handler === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:APP_HANDLER_FUNCTION')\n    return {\n      sendRequest: ({ request, response }) => {\n        app.handler(request, response)\n      }\n    }\n  }\n\n  // Framework: ??\n  if (typeof app._onRequest === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:APP_ON_REQUEST_FUNCTION')\n    return {\n      sendRequest: ({ request, response }) => {\n        app._onRequest(request, response)\n      }\n    }\n  }\n\n  if (typeof app === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:HAPI')\n    return hapi\n  }\n\n  if (app.router && typeof app.router.route === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:APP_ROUTER_ROUTE_FUNCTION')\n    return {\n      sendRequest: ({ request, response }) => {\n        const { url, method, headers, body } = request\n        app.router.route({ url, method, headers, body }, response)\n      }\n    }\n  }\n\n  if (app._core && typeof app._core._dispatch === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:APP_CORE_DISPATCH_FUNCTION')\n    return {\n      sendRequest: ({ request, response }) => {\n        return app._core._dispatch({\n          app\n        })(request, response)\n      }\n    }\n  }\n\n  if (typeof app.main === 'function') {\n    log.debug('SERVERLESS_EXPRESS:GET_FRAMEWORK:APP_MAIN_FUNCTION')\n    return {\n      sendRequest: ({ request, response }) => {\n        return app.main(request, response)\n      }\n    }\n  }\n\n  throw new Error('Invalid app supplied. Valid frameworks include: Express, Koa, Hapi')\n}\n\nmodule.exports.getFramework = getFramework\n","async function sendKoaRequest ({ app, request, response }) {\n  app.callback()(request, response)\n}\n\nmodule.exports = {\n  sendRequest: sendKoaRequest\n}\n","const configure = require('./configure')\nconst { getCurrentInvoke } = require('./current-invoke')\n\nmodule.exports = configure\nmodule.exports.getCurrentInvoke = getCurrentInvoke\nmodule.exports.configure = configure\n\n// Legacy/deprecated:\n\nfunction createServer (app, serverListenCallback, binaryMimeTypes) {\n  console.warn('[DEPRECATION NOTICE] You\\'re using the deprecated createServer method that will be removed in the next major version. See https://github.com/vendia/serverless-express/blob/mainline/UPGRADE.md to upgrade.')\n\n  if (serverListenCallback) {\n    throw new Error('serverListenCallback is no longer supported.')\n  }\n\n  const configureOptions = {\n    app,\n    binarySettings: {\n      contentTypes: binaryMimeTypes\n    }\n  }\n\n  return configureOptions\n}\n\nfunction proxy (configureOptions, event, context, resolutionMode, callback) {\n  console.warn('[DEPRECATION NOTICE] You\\'re using the deprecated proxy method that will be removed in the next major version. See https://github.com/vendia/serverless-express/blob/mainline/UPGRADE.md to upgrade.')\n\n  const se = configure({\n    ...configureOptions,\n    resolutionMode\n  })\n  return se(event, context, callback)\n}\n\nmodule.exports.createServer = createServer\nmodule.exports.proxy = proxy\n","// ATTRIBUTION: https://github.com/dougmoscrop/serverless-http\nconst { DEFAULT_BINARY_ENCODINGS, DEFAULT_BINARY_CONTENT_TYPES } = require('./constants')\n\nfunction isContentEncodingBinary ({ headers, binaryEncodingTypes }) {\n  const contentEncoding = headers['content-encoding']\n\n  if (typeof contentEncoding !== 'string') return false\n\n  return contentEncoding\n    .split(',')\n    .some(value => binaryEncodingTypes.some(binaryEncoding => value.includes(binaryEncoding)))\n}\n\nfunction getContentType ({ headers }) {\n  const contentTypeHeader = headers['content-type'] || ''\n\n  // only compare mime type; ignore encoding part\n  return contentTypeHeader.split(';')[0]\n}\n\nfunction isContentTypeBinary ({ headers, binaryContentTypes }) {\n  if (!binaryContentTypes || !Array.isArray(binaryContentTypes)) return false\n\n  const binaryContentTypesRegexes = binaryContentTypes.map(binaryContentType => new RegExp(`^${binaryContentType.replace(/\\*/g, '.*')}$`))\n  const contentType = getContentType({ headers })\n\n  if (!contentType) return false\n\n  return binaryContentTypesRegexes.some(binaryContentType => binaryContentType.test(contentType))\n}\n\nmodule.exports = function isBinary ({ headers, binarySettings }) {\n  if (binarySettings.isBinary === false) {\n    return false\n  }\n\n  if (typeof binarySettings.isBinary === 'function') {\n    return binarySettings.isBinary({ headers })\n  }\n\n  const binaryEncodingTypes = binarySettings.contentEncodings || DEFAULT_BINARY_ENCODINGS\n  const binaryContentTypes = binarySettings.contentTypes || DEFAULT_BINARY_CONTENT_TYPES\n\n  return isContentEncodingBinary({ headers, binaryEncodingTypes }) ||\n    isContentTypeBinary({ headers, binaryContentTypes })\n}\n","function logger ({\n  level = 'error'\n} = {}) {\n  return {\n    error (message, additional) {\n      if (!level.includes('debug', 'verbose', 'info', 'warn', 'error')) return\n      console.error({\n        message,\n        ...additional\n      })\n    },\n    warn (message, additional) {\n      if (!level.includes('debug', 'verbose', 'info', 'warn')) return\n      console.warn({\n        message,\n        ...additional\n      })\n    },\n    info (message, additional) {\n      if (!level.includes('debug', 'verbose', 'info')) return\n      console.info({\n        message,\n        ...additional\n      })\n    },\n    verbose (message, additional) {\n      if (!level.includes('debug', 'verbose')) return\n      console.debug({\n        message,\n        ...additional\n      })\n    },\n    debug (message, additional) {\n      if (level !== 'debug') return\n      console.debug({\n        message,\n        ...additional\n      })\n    }\n  }\n}\n\nmodule.exports = logger\n","function makeResolver ({\n  context,\n  callback,\n  promise,\n  resolutionMode\n}) {\n  return {\n    succeed: ({ response }) => {\n      if (resolutionMode === 'CONTEXT') return context.succeed(response)\n      if (resolutionMode === 'CALLBACK') return callback(null, response)\n      if (resolutionMode === 'PROMISE') return promise.resolve(response)\n    },\n    fail: ({ error }) => {\n      if (resolutionMode === 'CONTEXT') return context.fail(error)\n      if (resolutionMode === 'CALLBACK') return callback(error, null)\n      if (resolutionMode === 'PROMISE') return promise.reject(error)\n    }\n  }\n}\n\nmodule.exports = makeResolver\n","// ATTRIBUTION: https://github.com/dougmoscrop/serverless-http\n\nconst http = require('http')\n\nconst HTTPS_PORT = 443\n\nmodule.exports = class ServerlessRequest extends http.IncomingMessage {\n  constructor ({ method, url, headers, body, remoteAddress }) {\n    super({\n      encrypted: true,\n      readable: false,\n      remoteAddress,\n      address: () => ({ port: HTTPS_PORT }),\n      end: Function.prototype,\n      destroy: Function.prototype\n    })\n\n    Object.assign(this, {\n      ip: remoteAddress,\n      complete: true,\n      httpVersion: '1.1',\n      httpVersionMajor: '1',\n      httpVersionMinor: '1',\n      method,\n      headers,\n      body,\n      url\n    })\n\n    this._read = () => {\n      this.push(body)\n      this.push(null)\n    }\n  }\n}\n","// ATTRIBUTION: https://github.com/dougmoscrop/serverless-http\n\nconst http = require('http')\n\nconst headerEnd = '\\r\\n\\r\\n'\n\nconst BODY = Symbol('Response body')\nconst HEADERS = Symbol('Response headers')\n\nfunction getString (data) {\n  if (Buffer.isBuffer(data)) {\n    return data.toString('utf8')\n  } else if (typeof data === 'string') {\n    return data\n  } else if (data instanceof Uint8Array) {\n    return new TextDecoder().decode(data)\n  } else {\n    throw new Error(`response.write() of unexpected type: ${typeof data}`)\n  }\n}\n\nfunction addData (stream, data) {\n  if (Buffer.isBuffer(data) || typeof data === 'string' || data instanceof Uint8Array) {\n    stream[BODY].push(Buffer.from(data))\n  } else {\n    throw new Error(`response.write() of unexpected type: ${typeof data}`)\n  }\n}\n\nmodule.exports = class ServerlessResponse extends http.ServerResponse {\n  static from (res) {\n    const response = new ServerlessResponse(res)\n\n    response.statusCode = res.statusCode\n    response[HEADERS] = res.headers\n    response[BODY] = [Buffer.from(res.body)]\n    response.end()\n\n    return response\n  }\n\n  static body (res) {\n    return Buffer.concat(res[BODY])\n  }\n\n  static headers (res) {\n    const headers = typeof res.getHeaders === 'function'\n      ? res.getHeaders()\n      : res._headers\n\n    return Object.assign(headers, res[HEADERS])\n  }\n\n  get headers () {\n    return this[HEADERS]\n  }\n\n  setHeader (key, value) {\n    if (this._wroteHeader) {\n      this[HEADERS][key] = value\n    } else {\n      super.setHeader(key, value)\n    }\n  }\n\n  writeHead (statusCode, reason, obj) {\n    const headers = typeof reason === 'string'\n      ? obj\n      : reason\n\n    for (const name in headers) {\n      this.setHeader(name, headers[name])\n\n      if (!this._wroteHeader) {\n        // we only need to initiate super.headers once\n        // writeHead will add the other headers itself\n        break\n      }\n    }\n\n    super.writeHead(statusCode, reason, obj)\n  }\n\n  constructor ({ method }) {\n    super({ method })\n\n    this[BODY] = []\n    this[HEADERS] = {}\n\n    this.useChunkedEncodingByDefault = false\n    this.chunkedEncoding = false\n    this._header = ''\n\n    this.assignSocket({\n      _writableState: {},\n      writable: true,\n      on: Function.prototype,\n      removeListener: Function.prototype,\n      destroy: Function.prototype,\n      cork: Function.prototype,\n      uncork: Function.prototype,\n      write: (data, encoding, cb) => {\n        if (typeof encoding === 'function') {\n          cb = encoding\n          encoding = null\n        }\n\n        if (this._header === '' || this._wroteHeader) {\n          addData(this, data)\n        } else {\n          const string = getString(data)\n          const index = string.indexOf(headerEnd)\n\n          if (index !== -1) {\n            const remainder = string.slice(index + headerEnd.length)\n\n            if (remainder) {\n              addData(this, remainder)\n            }\n\n            this._wroteHeader = true\n          }\n        }\n\n        if (typeof cb === 'function') {\n          cb()\n        }\n      }\n    })\n  }\n}\n","const util = require('util')\nconst ServerlessRequest = require('./request')\nconst ServerlessResponse = require('./response')\nconst { getEventSource } = require('./event-sources')\nconst Response = require('./response')\nconst isBinary = require('./is-binary')\n\nfunction forwardResponse ({\n  binarySettings,\n  response,\n  resolver,\n  eventSource,\n  event,\n  log\n}) {\n  const statusCode = response.statusCode\n  const headers = Response.headers(response)\n  const isBase64Encoded = isBinary({\n    headers,\n    binarySettings\n  })\n  const encoding = isBase64Encoded ? 'base64' : 'utf8'\n  const body = Response.body(response).toString(encoding)\n  const logBody = isBase64Encoded ? '[BASE64_ENCODED]' : body\n\n  log.debug('SERVERLESS_EXPRESS:FORWARD_RESPONSE:EVENT_SOURCE_RESPONSE_PARAMS', {\n    statusCode,\n    body: logBody,\n    headers,\n    isBase64Encoded\n  })\n\n  const successResponse = eventSource.getResponse({\n    event,\n    statusCode,\n    body,\n    headers,\n    isBase64Encoded,\n    response\n  })\n\n  log.debug('SERVERLESS_EXPRESS:FORWARD_RESPONSE:EVENT_SOURCE_RESPONSE', {\n    successResponse: util.inspect(successResponse, { depth: null }),\n    body: logBody\n  })\n\n  resolver.succeed({\n    response: successResponse\n  })\n}\n\nfunction respondToEventSourceWithError ({\n  error,\n  resolver,\n  log,\n  respondWithErrors,\n  eventSourceName,\n  eventSource\n}) {\n  log.error('SERVERLESS_EXPRESS:RESPOND_TO_EVENT_SOURCE_WITH_ERROR', error)\n\n  if (\n    eventSourceName !== 'AWS_ALB' &&\n    eventSourceName !== 'AWS_LAMBDA_EDGE' &&\n    eventSourceName !== 'AWS_API_GATEWAY_V1' &&\n    eventSourceName !== 'AWS_API_GATEWAY_V2' &&\n    eventSourceName !== 'AZURE_HTTP_FUNCTION_V3' &&\n    eventSourceName !== 'AZURE_HTTP_FUNCTION_V4'\n  ) {\n    resolver.fail({ error })\n    return\n  }\n\n  const body = respondWithErrors ? error.stack : ''\n  const errorResponse = eventSource.getResponse({\n    statusCode: 500,\n    body,\n    headers: {},\n    isBase64Encoded: false\n  })\n\n  resolver.succeed({ response: errorResponse })\n}\n\nasync function getRequestResponse ({\n  method,\n  headers,\n  body,\n  remoteAddress,\n  path\n}) {\n  const request = new ServerlessRequest({\n    method,\n    headers,\n    body,\n    remoteAddress,\n    url: path\n  })\n  await waitForStreamComplete(request)\n\n  const response = new ServerlessResponse(request)\n\n  return { request, response }\n}\n\nfunction waitForStreamComplete (stream) {\n  if (stream.complete || stream.writableEnded) {\n    return stream\n  }\n\n  return new Promise((resolve, reject) => {\n    stream.once('error', complete)\n    stream.once('end', complete)\n    stream.once('finish', complete)\n\n    let isComplete = false\n\n    function complete (err) {\n      if (isComplete) {\n        return\n      }\n\n      isComplete = true\n\n      stream.removeListener('error', complete)\n      stream.removeListener('end', complete)\n      stream.removeListener('finish', complete)\n\n      if (err) {\n        reject(err)\n      } else {\n        resolve(stream)\n      }\n    }\n  })\n}\nasync function forwardRequestToNodeServer ({\n  app,\n  framework,\n  event,\n  context,\n  resolver,\n  eventSourceName,\n  binarySettings,\n  eventSource = getEventSource({ eventSourceName }),\n  eventSourceRoutes,\n  log\n}) {\n  const requestValues = eventSource.getRequest({ event, context, log })\n\n  if (!requestValues.path && eventSourceRoutes[eventSourceName]) {\n    requestValues.path = eventSourceRoutes[eventSourceName]\n  }\n\n  log.debug('SERVERLESS_EXPRESS:FORWARD_REQUEST_TO_NODE_SERVER:REQUEST_VALUES', { requestValues })\n  const { request, response } = await getRequestResponse(requestValues)\n  await framework.sendRequest({ app, request, response })\n  await waitForStreamComplete(response)\n  log.debug('SERVERLESS_EXPRESS:FORWARD_REQUEST_TO_NODE_SERVER:RESPONSE', { response })\n  forwardResponse({\n    binarySettings,\n    response,\n    resolver,\n    eventSource,\n    event,\n    log\n  })\n  return response\n}\n\nmodule.exports = {\n  forwardResponse,\n  respondToEventSourceWithError,\n  forwardRequestToNodeServer,\n  getRequestResponse\n}\n","/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.assertOptions = void 0;\r\nfunction assertOptions(options, defaults) {\r\n    if (options !== null && options !== undefined && typeof options !== 'object') {\r\n        throw new TypeError('Invalid \"options\" parameter: ' + JSON.stringify(options));\r\n    }\r\n    var isArray = Array.isArray(defaults);\r\n    if (!isArray && (!defaults || typeof defaults !== 'object')) {\r\n        throw new TypeError('Invalid \"defaults\" parameter: ' + JSON.stringify(defaults));\r\n    }\r\n    if (options) {\r\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\r\n            var a = _a[_i];\r\n            if ((isArray && defaults.indexOf(a) === -1) || (!isArray && !(a in defaults))) {\r\n                throw new Error('Option \"' + a + '\" is not recognized.');\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        options = {};\r\n    }\r\n    if (!isArray) {\r\n        var defs = defaults;\r\n        for (var _b = 0, _c = Object.keys(defs); _b < _c.length; _b++) {\r\n            var d = _c[_b];\r\n            if (options[d] === undefined && defs[d] !== undefined) {\r\n                options[d] = defs[d];\r\n            }\r\n        }\r\n    }\r\n    return options;\r\n}\r\nexports.assertOptions = assertOptions;\r\n","/*!\n * basic-auth\n * Copyright(c) 2013 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = auth\nmodule.exports.parse = parse\n\n/**\n * RegExp for basic auth credentials\n *\n * credentials = auth-scheme 1*SP token68\n * auth-scheme = \"Basic\" ; case insensitive\n * token68     = 1*( ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"\n * @private\n */\n\nvar CREDENTIALS_REGEXP = /^ *(?:[Bb][Aa][Ss][Ii][Cc]) +([A-Za-z0-9._~+/-]+=*) *$/\n\n/**\n * RegExp for basic auth user/pass\n *\n * user-pass   = userid \":\" password\n * userid      = *<TEXT excluding \":\">\n * password    = *TEXT\n * @private\n */\n\nvar USER_PASS_REGEXP = /^([^:]*):(.*)$/\n\n/**\n * Parse the Authorization header field of a request.\n *\n * @param {object} req\n * @return {object} with .name and .pass\n * @public\n */\n\nfunction auth (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  if (typeof req !== 'object') {\n    throw new TypeError('argument req is required to be an object')\n  }\n\n  // get header\n  var header = getAuthorization(req)\n\n  // parse header\n  return parse(header)\n}\n\n/**\n * Decode base64 string.\n * @private\n */\n\nfunction decodeBase64 (str) {\n  return Buffer.from(str, 'base64').toString()\n}\n\n/**\n * Get the Authorization header from request object.\n * @private\n */\n\nfunction getAuthorization (req) {\n  if (!req.headers || typeof req.headers !== 'object') {\n    throw new TypeError('argument req is required to have headers property')\n  }\n\n  return req.headers.authorization\n}\n\n/**\n * Parse basic auth to object.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (typeof string !== 'string') {\n    return undefined\n  }\n\n  // parse header\n  var match = CREDENTIALS_REGEXP.exec(string)\n\n  if (!match) {\n    return undefined\n  }\n\n  // decode user pass\n  var userPass = USER_PASS_REGEXP.exec(decodeBase64(match[1]))\n\n  if (!userPass) {\n    return undefined\n  }\n\n  // return credentials object\n  return new Credentials(userPass[1], userPass[2])\n}\n\n/**\n * Object to represent user credentials.\n * @private\n */\n\nfunction Credentials (name, pass) {\n  this.name = name\n  this.pass = pass\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // read off entire request\n      stream.resume()\n      onFinished(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.substr(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = str.substring(0, index) + '#'\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  return FIRST_CHAR_REGEXP.exec(str)[1]\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, {maxKeys: parameterLimit})\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\n\nvar toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer !== 'undefined' &&\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: ((1 << 30) * 1024)\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","/*!\n * content-disposition\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n */\n\nvar basename = require('path').basename\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @api public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @api private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @api private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 6987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @api private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = new Buffer(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @api private\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @api private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @api private\n */\n\nfunction pencode (char) {\n  var hex = String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n  return hex.length === 1\n    ? '%0' + hex\n    : '%' + hex\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","/*!\n * cookie-parser\n * Copyright(c) 2014 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar cookie = require('cookie')\nvar signature = require('cookie-signature')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = cookieParser\nmodule.exports.JSONCookie = JSONCookie\nmodule.exports.JSONCookies = JSONCookies\nmodule.exports.signedCookie = signedCookie\nmodule.exports.signedCookies = signedCookies\n\n/**\n * Parse Cookie header and populate `req.cookies`\n * with an object keyed by the cookie names.\n *\n * @param {string|array} [secret] A string (or array of strings) representing cookie signing secret(s).\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction cookieParser (secret, options) {\n  var secrets = !secret || Array.isArray(secret)\n    ? (secret || [])\n    : [secret]\n\n  return function cookieParser (req, res, next) {\n    if (req.cookies) {\n      return next()\n    }\n\n    var cookies = req.headers.cookie\n\n    req.secret = secrets[0]\n    req.cookies = Object.create(null)\n    req.signedCookies = Object.create(null)\n\n    // no cookies\n    if (!cookies) {\n      return next()\n    }\n\n    req.cookies = cookie.parse(cookies, options)\n\n    // parse signed cookies\n    if (secrets.length !== 0) {\n      req.signedCookies = signedCookies(req.cookies, secrets)\n      req.signedCookies = JSONCookies(req.signedCookies)\n    }\n\n    // parse JSON cookies\n    req.cookies = JSONCookies(req.cookies)\n\n    next()\n  }\n}\n\n/**\n * Parse JSON cookie string.\n *\n * @param {String} str\n * @return {Object} Parsed object or undefined if not json cookie\n * @public\n */\n\nfunction JSONCookie (str) {\n  if (typeof str !== 'string' || str.substr(0, 2) !== 'j:') {\n    return undefined\n  }\n\n  try {\n    return JSON.parse(str.slice(2))\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * Parse JSON cookies.\n *\n * @param {Object} obj\n * @return {Object}\n * @public\n */\n\nfunction JSONCookies (obj) {\n  var cookies = Object.keys(obj)\n  var key\n  var val\n\n  for (var i = 0; i < cookies.length; i++) {\n    key = cookies[i]\n    val = JSONCookie(obj[key])\n\n    if (val) {\n      obj[key] = val\n    }\n  }\n\n  return obj\n}\n\n/**\n * Parse a signed cookie string, return the decoded value.\n *\n * @param {String} str signed cookie string\n * @param {string|array} secret\n * @return {String} decoded value\n * @public\n */\n\nfunction signedCookie (str, secret) {\n  if (typeof str !== 'string') {\n    return undefined\n  }\n\n  if (str.substr(0, 2) !== 's:') {\n    return str\n  }\n\n  var secrets = !secret || Array.isArray(secret)\n    ? (secret || [])\n    : [secret]\n\n  for (var i = 0; i < secrets.length; i++) {\n    var val = signature.unsign(str.slice(2), secrets[i])\n\n    if (val !== false) {\n      return val\n    }\n  }\n\n  return false\n}\n\n/**\n * Parse signed cookies, returning an object containing the decoded key/value\n * pairs, while removing the signed key from obj.\n *\n * @param {Object} obj\n * @param {string|array} secret\n * @return {Object}\n * @public\n */\n\nfunction signedCookies (obj, secret) {\n  var cookies = Object.keys(obj)\n  var dec\n  var key\n  var ret = Object.create(null)\n  var val\n\n  for (var i = 0; i < cookies.length; i++) {\n    key = cookies[i]\n    val = obj[key]\n    dec = signedCookie(val, secret)\n\n    if (val !== dec) {\n      ret[key] = dec\n      delete obj[key]\n    }\n  }\n\n  return ret\n}\n","/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/*!\n * depd\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar callSiteToString = require('./lib/compat').callSiteToString\nvar eventListenerCount = require('./lib/compat').eventListenerCount\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + callSiteToString(stack[i])\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eventListenerCount(process, 'deprecation') !== 0\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + callSiteToString(stack[i])\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var deprecate = this // eslint-disable-line no-unused-vars\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n   // eslint-disable-next-line no-eval\n  var deprecatedfn = eval('(function (' + args + ') {\\n' +\n    '\"use strict\"\\n' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '})')\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n","/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString\n\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation (callSite) {\n  var fileName\n  var fileLocation = ''\n\n  if (callSite.isNative()) {\n    fileLocation = 'native'\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL()\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin()\n    }\n  } else {\n    fileName = callSite.getFileName()\n  }\n\n  if (fileName) {\n    fileLocation += fileName\n\n    var lineNumber = callSite.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber\n\n      var columnNumber = callSite.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source'\n}\n\n/**\n * Format a CallSite to a string.\n */\n\nfunction callSiteToString (callSite) {\n  var addSuffix = true\n  var fileLocation = callSiteFileLocation(callSite)\n  var functionName = callSite.getFunctionName()\n  var isConstructor = callSite.isConstructor()\n  var isMethodCall = !(callSite.isToplevel() || isConstructor)\n  var line = ''\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName()\n    var typeName = getConstructorName(callSite)\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.'\n      }\n\n      line += functionName\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']'\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>')\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>')\n  } else if (functionName) {\n    line += functionName\n  } else {\n    addSuffix = false\n    line += fileLocation\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')'\n  }\n\n  return line\n}\n\n/**\n * Get constructor name of reviver.\n */\n\nfunction getConstructorName (obj) {\n  var receiver = obj.receiver\n  return (receiver.constructor && receiver.constructor.name) || null\n}\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = eventListenerCount\n\n/**\n * Get the count of listeners on an event emitter of a specific type.\n */\n\nfunction eventListenerCount (emitter, type) {\n  return emitter.listeners(type).length\n}\n","/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace (obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty (obj, prop, getter) {\n  function get () {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString (obj) {\n  return obj.toString()\n}\n","/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy a stream.\n *\n * @param {object} stream\n * @public\n */\n\nfunction destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream)\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream\n  }\n\n  if (typeof stream.destroy === 'function') {\n    stream.destroy()\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream(stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n\n  return stream\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose() {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you dont need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    return this.settings[setting];\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.static = require('serve-static');\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the give mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    // replace chars not allowed in JavaScript that are in JSON\n    body = body\n      .replace(/\\u2028/g, '\\\\u2028')\n      .replace(/\\u2029/g, '\\\\u2029');\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = resolve(path);\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function(o){ return o.value });\n    next(err);\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n      : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // save as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.substr(1)) + ', fn) instead');\n    name = name.substr(1);\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.substr(1);\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.substr(protohost.length);\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n        continue;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        return next(layerError || err);\n      }\n\n      if (route) {\n        return layer.handle_request(req, res, next);\n      }\n\n      trim_prefix(layer, layerError, layerPath, path);\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.substr(protohost.length + removed.length);\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.substr(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.substr(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8967;\nmodule.exports = webpackEmptyContext;","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","/*!\n * finalhandler\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses[status]\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n\n/**\n * Convert a string of words to a JavaScript identifier.\n * @private\n */\n\nfunction toIdentifier (str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1)\n  }).join('').replace(/[^ _0-9a-z]/gi, '')\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = new Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = new Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n","/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n","/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = morgan\nmodule.exports.compile = compile\nmodule.exports.format = format\nmodule.exports.token = token\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar auth = require('basic-auth')\nvar debug = require('debug')('morgan')\nvar deprecate = require('depd')('morgan')\nvar onFinished = require('on-finished')\nvar onHeaders = require('on-headers')\n\n/**\n * Array of CLF month names.\n * @private\n */\n\nvar CLF_MONTH = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\n/**\n * Default log buffer duration.\n * @private\n */\n\nvar DEFAULT_BUFFER_DURATION = 1000\n\n/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */\n\nfunction morgan (format, options) {\n  var fmt = format\n  var opts = options || {}\n\n  if (format && typeof format === 'object') {\n    opts = format\n    fmt = opts.format || 'default'\n\n    // smart deprecation message\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead')\n  }\n\n  if (fmt === undefined) {\n    deprecate('undefined format: specify a format')\n  }\n\n  // output on request instead of response\n  var immediate = opts.immediate\n\n  // check if log entry should be skipped\n  var skip = opts.skip || false\n\n  // format function\n  var formatLine = typeof fmt !== 'function'\n    ? getFormatFunction(fmt)\n    : fmt\n\n  // stream\n  var buffer = opts.buffer\n  var stream = opts.stream || process.stdout\n\n  // buffering support\n  if (buffer) {\n    deprecate('buffer option')\n\n    // flush interval\n    var interval = typeof buffer !== 'number'\n      ? DEFAULT_BUFFER_DURATION\n      : buffer\n\n    // swap the stream\n    stream = createBufferStream(stream, interval)\n  }\n\n  return function logger (req, res, next) {\n    // request data\n    req._startAt = undefined\n    req._startTime = undefined\n    req._remoteAddress = getip(req)\n\n    // response data\n    res._startAt = undefined\n    res._startTime = undefined\n\n    // record request start\n    recordStartTime.call(req)\n\n    function logRequest () {\n      if (skip !== false && skip(req, res)) {\n        debug('skip request')\n        return\n      }\n\n      var line = formatLine(morgan, req, res)\n\n      if (line == null) {\n        debug('skip line')\n        return\n      }\n\n      debug('log request')\n      stream.write(line + '\\n')\n    };\n\n    if (immediate) {\n      // immediate log\n      logRequest()\n    } else {\n      // record response start\n      onHeaders(res, recordStartTime)\n\n      // log when response finished\n      onFinished(res, logRequest)\n    }\n\n    next()\n  }\n}\n\n/**\n * Apache combined log format.\n */\n\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\n\n/**\n * Apache common log format.\n */\n\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]')\n\n/**\n * Default format.\n */\n\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\ndeprecate.property(morgan, 'default', 'default format: use combined format')\n\n/**\n * Short format.\n */\n\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms')\n\n/**\n * Tiny format.\n */\n\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms')\n\n/**\n * dev (colored)\n */\n\nmorgan.format('dev', function developmentFormatLine (tokens, req, res) {\n  // get the status code if response written\n  var status = headersSent(res)\n    ? res.statusCode\n    : undefined\n\n  // get status color\n  var color = status >= 500 ? 31 // red\n    : status >= 400 ? 33 // yellow\n      : status >= 300 ? 36 // cyan\n        : status >= 200 ? 32 // green\n          : 0 // no color\n\n  // get colored function\n  var fn = developmentFormatLine[color]\n\n  if (!fn) {\n    // compile\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' +\n      color + 'm:status \\x1b[0m:response-time ms - :res[content-length]\\x1b[0m')\n  }\n\n  return fn(tokens, req, res)\n})\n\n/**\n * request url\n */\n\nmorgan.token('url', function getUrlToken (req) {\n  return req.originalUrl || req.url\n})\n\n/**\n * request method\n */\n\nmorgan.token('method', function getMethodToken (req) {\n  return req.method\n})\n\n/**\n * response time in milliseconds\n */\n\nmorgan.token('response-time', function getResponseTimeToken (req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return\n  }\n\n  // calculate diff\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 +\n    (res._startAt[1] - req._startAt[1]) * 1e-6\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits)\n})\n\n/**\n * current date\n */\n\nmorgan.token('date', function getDateToken (req, res, format) {\n  var date = new Date()\n\n  switch (format || 'web') {\n    case 'clf':\n      return clfdate(date)\n    case 'iso':\n      return date.toISOString()\n    case 'web':\n      return date.toUTCString()\n  }\n})\n\n/**\n * response status code\n */\n\nmorgan.token('status', function getStatusToken (req, res) {\n  return headersSent(res)\n    ? String(res.statusCode)\n    : undefined\n})\n\n/**\n * normalized referrer\n */\n\nmorgan.token('referrer', function getReferrerToken (req) {\n  return req.headers['referer'] || req.headers['referrer']\n})\n\n/**\n * remote address\n */\n\nmorgan.token('remote-addr', getip)\n\n/**\n * remote user\n */\n\nmorgan.token('remote-user', function getRemoteUserToken (req) {\n  // parse basic credentials\n  var credentials = auth(req)\n\n  // return username\n  return credentials\n    ? credentials.name\n    : undefined\n})\n\n/**\n * HTTP version\n */\n\nmorgan.token('http-version', function getHttpVersionToken (req) {\n  return req.httpVersionMajor + '.' + req.httpVersionMinor\n})\n\n/**\n * UA string\n */\n\nmorgan.token('user-agent', function getUserAgentToken (req) {\n  return req.headers['user-agent']\n})\n\n/**\n * request header\n */\n\nmorgan.token('req', function getRequestToken (req, res, field) {\n  // get header\n  var header = req.headers[field.toLowerCase()]\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * response header\n */\n\nmorgan.token('res', function getResponseHeader (req, res, field) {\n  if (!headersSent(res)) {\n    return undefined\n  }\n\n  // get header\n  var header = res.getHeader(field)\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */\n\nfunction clfdate (dateTime) {\n  var date = dateTime.getUTCDate()\n  var hour = dateTime.getUTCHours()\n  var mins = dateTime.getUTCMinutes()\n  var secs = dateTime.getUTCSeconds()\n  var year = dateTime.getUTCFullYear()\n\n  var month = CLF_MONTH[dateTime.getUTCMonth()]\n\n  return pad2(date) + '/' + month + '/' + year +\n    ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) +\n    ' +0000'\n}\n\n/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */\n\nfunction compile (format) {\n  if (typeof format !== 'string') {\n    throw new TypeError('argument format must be a string')\n  }\n\n  var fmt = String(JSON.stringify(format))\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\n    var tokenArguments = 'req, res'\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']'\n\n    if (arg !== undefined) {\n      tokenArguments += ', ' + String(JSON.stringify(arg))\n    }\n\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"'\n  })\n\n  // eslint-disable-next-line no-new-func\n  return new Function('tokens, req, res', js)\n}\n\n/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */\n\nfunction createBufferStream (stream, interval) {\n  var buf = []\n  var timer = null\n\n  // flush function\n  function flush () {\n    timer = null\n    stream.write(buf.join(''))\n    buf.length = 0\n  }\n\n  // write function\n  function write (str) {\n    if (timer === null) {\n      timer = setTimeout(flush, interval)\n    }\n\n    buf.push(str)\n  }\n\n  // return a minimal \"stream\"\n  return { write: write }\n}\n\n/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */\n\nfunction format (name, fmt) {\n  morgan[name] = fmt\n  return this\n}\n\n/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */\n\nfunction getFormatFunction (name) {\n  // lookup format\n  var fmt = morgan[name] || name || morgan.default\n\n  // return compiled format\n  return typeof fmt !== 'function'\n    ? compile(fmt)\n    : fmt\n}\n\n/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */\n\nfunction getip (req) {\n  return req.ip ||\n    req._remoteAddress ||\n    (req.connection && req.connection.remoteAddress) ||\n    undefined\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */\n\nfunction pad2 (num) {\n  var str = String(num)\n\n  return (str.length === 1 ? '0' : '') + str\n}\n\n/**\n * Record the start time.\n * @private\n */\n\nfunction recordStartTime () {\n  this._startAt = process.hrtime()\n  this._startTime = new Date()\n}\n\n/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */\n\nfunction token (name, fn) {\n  morgan[name] = fn\n  return this\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished(msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n","/*!\n * on-headers\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onHeaders\n\n/**\n * Create a replacement writeHead method.\n *\n * @param {function} prevWriteHead\n * @param {function} listener\n * @private\n */\n\nfunction createWriteHead (prevWriteHead, listener) {\n  var fired = false\n\n  // return function with core name and argument list\n  return function writeHead (statusCode) {\n    // set headers from arguments\n    var args = setWriteHeadHeaders.apply(this, arguments)\n\n    // fire listener\n    if (!fired) {\n      fired = true\n      listener.call(this)\n\n      // pass-along an updated status code\n      if (typeof args[0] === 'number' && this.statusCode !== args[0]) {\n        args[0] = this.statusCode\n        args.length = 1\n      }\n    }\n\n    return prevWriteHead.apply(this, args)\n  }\n}\n\n/**\n * Execute a listener when a response is about to write headers.\n *\n * @param {object} res\n * @return {function} listener\n * @public\n */\n\nfunction onHeaders (res, listener) {\n  if (!res) {\n    throw new TypeError('argument res is required')\n  }\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('argument listener must be a function')\n  }\n\n  res.writeHead = createWriteHead(res.writeHead, listener)\n}\n\n/**\n * Set headers contained in array on the response object.\n *\n * @param {object} res\n * @param {array} headers\n * @private\n */\n\nfunction setHeadersFromArray (res, headers) {\n  for (var i = 0; i < headers.length; i++) {\n    res.setHeader(headers[i][0], headers[i][1])\n  }\n}\n\n/**\n * Set headers contained in object on the response object.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeadersFromObject (res, headers) {\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i]\n    if (k) res.setHeader(k, headers[k])\n  }\n}\n\n/**\n * Set headers and other properties on the response object.\n *\n * @param {number} statusCode\n * @private\n */\n\nfunction setWriteHeadHeaders (statusCode) {\n  var length = arguments.length\n  var headerIndex = length > 1 && typeof arguments[1] === 'string'\n    ? 2\n    : 1\n\n  var headers = length >= headerIndex + 1\n    ? arguments[headerIndex]\n    : undefined\n\n  this.statusCode = statusCode\n\n  if (Array.isArray(headers)) {\n    // handle array case\n    setHeadersFromArray(this, headers)\n  } else if (headers) {\n    // handle object case\n    setHeadersFromObject(this, headers)\n  }\n\n  // copy leading arguments\n  var args = new Array(Math.min(length, headerIndex))\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i]\n  }\n\n  return args\n}\n","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n","/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n","'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n","'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n","const {EOL} = require('os');\r\nconst {addInspection, messageGap} = require('./utils');\r\n\r\nconst parsingErrorCode = {\r\n    unclosedMLC: 0, // Unclosed multi-line comment.\r\n    unclosedText: 1, // Unclosed text block.\r\n    unclosedQI: 2, // Unclosed quoted identifier.\r\n    multiLineQI: 3 // Multi-line quoted identifiers are not supported.\r\n};\r\n\r\nObject.freeze(parsingErrorCode);\r\n\r\nconst errorMessages = [\r\n    {name: 'unclosedMLC', message: 'Unclosed multi-line comment.'},\r\n    {name: 'unclosedText', message: 'Unclosed text block.'},\r\n    {name: 'unclosedQI', message: 'Unclosed quoted identifier.'},\r\n    {name: 'multiLineQI', message: 'Multi-line quoted identifiers are not supported.'}\r\n];\r\n\r\nclass SQLParsingError extends Error {\r\n    constructor(code, position) {\r\n        const err = errorMessages[code].message;\r\n        const message = `Error parsing SQL at {line:${position.line},col:${position.column}}: ${err}`;\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n        this.error = err;\r\n        this.code = code;\r\n        this.position = position;\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\nSQLParsingError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap = messageGap(level + 1);\r\n    const lines = [\r\n        `SQLParsingError {`,\r\n        `${gap}code: parsingErrorCode.${errorMessages[this.code].name}`,\r\n        `${gap}error: \"${this.error}\"`,\r\n        `${gap}position: {line: ${this.position.line}, col: ${this.position.column}}`,\r\n        `${messageGap(level)}}`\r\n    ];\r\n    return lines.join(EOL);\r\n};\r\n\r\naddInspection(SQLParsingError.prototype, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {\r\n    SQLParsingError,\r\n    parsingErrorCode\r\n};\r\n","const parser = require('./parser');\r\nconst error = require('./error');\r\n\r\nparser.SQLParsingError = error.SQLParsingError;\r\nparser.parsingErrorCode = error.parsingErrorCode;\r\n\r\nmodule.exports = parser;\r\n","const {parsingErrorCode, SQLParsingError} = require('./error');\r\nconst {getIndexPos} = require('./utils');\r\n\r\n// symbols that need no spaces around them:\r\nconst compressors = '.,;:()[]=<>+-*/|!?@#';\r\n\r\n////////////////////////////////////////////\r\n// Parses and minimizes a PostgreSQL script.\r\nfunction minify(sql, options) {\r\n\r\n    if (typeof sql !== 'string') {\r\n        throw new TypeError('Input SQL must be a text string.');\r\n    }\r\n\r\n    if (!sql.length) {\r\n        return '';\r\n    }\r\n\r\n    sql = sql.replace(/\\r\\n/g, '\\n');\r\n\r\n    options = options || {};\r\n\r\n    let idx = 0, // current index\r\n        result = '', // resulting sql\r\n        space = false; // add a space on the next step\r\n\r\n    const len = sql.length;\r\n\r\n    do {\r\n        const s = sql[idx], // current symbol;\r\n            s1 = sql[idx + 1]; // next symbol;\r\n\r\n        if (isGap(s)) {\r\n            while (++idx < len && isGap(sql[idx])) ;\r\n            if (idx < len) {\r\n                space = true;\r\n            }\r\n            idx--;\r\n            continue;\r\n        }\r\n\r\n        if (s === '-' && s1 === '-') {\r\n            const lb = sql.indexOf('\\n', idx + 2);\r\n            if (lb < 0) {\r\n                break;\r\n            }\r\n            idx = lb - 1;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (s === '/' && s1 === '*') {\r\n            let c = idx + 1, open = 0, close = 0, lastOpen, lastClose;\r\n            while (++c < len - 1 && close <= open) {\r\n                if (sql[c] === '/' && sql[c + 1] === '*') {\r\n                    lastOpen = c;\r\n                    open++;\r\n                    c++;\r\n                } else {\r\n                    if (sql[c] === '*' && sql[c + 1] === '/') {\r\n                        lastClose = c;\r\n                        close++;\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n            if (close <= open) {\r\n                idx = lastOpen;\r\n                throwError(parsingErrorCode.unclosedMLC);\r\n            }\r\n            if (sql[idx + 2] === '!' && !options.removeAll) {\r\n                if (options.compress) {\r\n                    space = false;\r\n                }\r\n                addSpace();\r\n                result += sql.substring(idx, lastClose + 2)\r\n                    .replace(/\\n/g, '\\r\\n');\r\n            }\r\n            idx = lastClose + 1;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        let closeIdx, text;\r\n\r\n        if (s === '\"') {\r\n            closeIdx = sql.indexOf('\"', idx + 1);\r\n            if (closeIdx < 0) {\r\n                throwError(parsingErrorCode.unclosedQI);\r\n            }\r\n            text = sql.substring(idx, closeIdx + 1);\r\n            if (text.indexOf('\\n') > 0) {\r\n                throwError(parsingErrorCode.multiLineQI);\r\n            }\r\n            if (options.compress) {\r\n                space = false;\r\n            }\r\n            addSpace();\r\n            result += text;\r\n            idx = closeIdx;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (s === `'`) {\r\n            closeIdx = idx;\r\n            do {\r\n                closeIdx = sql.indexOf(`'`, closeIdx + 1);\r\n                if (closeIdx > 0) {\r\n                    let i = closeIdx;\r\n                    while (sql[--i] === '\\\\') ;\r\n                    if ((closeIdx - i) % 2) {\r\n                        let step = closeIdx;\r\n                        while (++step < len && sql[step] === `'`) ;\r\n                        if ((step - closeIdx) % 2) {\r\n                            closeIdx = step - 1;\r\n                            break;\r\n                        }\r\n                        closeIdx = step === len ? -1 : step;\r\n                    }\r\n                }\r\n            } while (closeIdx > 0);\r\n            if (closeIdx < 0) {\r\n                throwError(parsingErrorCode.unclosedText);\r\n            }\r\n            if (options.compress) {\r\n                space = false;\r\n            }\r\n            addSpace();\r\n            text = sql.substring(idx, closeIdx + 1);\r\n            const hasLB = text.indexOf('\\n') > 0;\r\n            if (hasLB) {\r\n                text = text.split('\\n').map(m => {\r\n                    return m.replace(/^\\s+|\\s+$/g, '');\r\n                }).join('\\\\n');\r\n            }\r\n            const hasTabs = text.indexOf('\\t') > 0;\r\n            if (hasLB || hasTabs) {\r\n                const prev = idx ? sql[idx - 1] : '';\r\n                if (prev !== 'E' && prev !== 'e') {\r\n                    const r = result ? result[result.length - 1] : '';\r\n                    if (r && r !== ' ' && compressors.indexOf(r) < 0) {\r\n                        result += ' ';\r\n                    }\r\n                    result += 'E';\r\n                }\r\n                if (hasTabs) {\r\n                    text = text.replace(/\\t/g, '\\\\t');\r\n                }\r\n            }\r\n            result += text;\r\n            idx = closeIdx;\r\n            skipGaps();\r\n            continue;\r\n        }\r\n\r\n        if (options.compress && compressors.indexOf(s) >= 0) {\r\n            space = false;\r\n            skipGaps();\r\n        }\r\n\r\n        addSpace();\r\n        result += s;\r\n\r\n    } while (++idx < len);\r\n\r\n    return result;\r\n\r\n    function skipGaps() {\r\n        if (options.compress) {\r\n            while (idx < len - 1 && isGap(sql[idx + 1]) && idx++) ;\r\n        }\r\n    }\r\n\r\n    function addSpace() {\r\n        if (space) {\r\n            if (result.length) {\r\n                result += ' ';\r\n            }\r\n            space = false;\r\n        }\r\n    }\r\n\r\n    function throwError(code) {\r\n        const position = getIndexPos(sql, idx);\r\n        throw new SQLParsingError(code, position);\r\n    }\r\n}\r\n\r\n////////////////////////////////////\r\n// Identifies a gap / empty symbol.\r\nfunction isGap(s) {\r\n    return s === ' ' || s === '\\t' || s === '\\r' || s === '\\n';\r\n}\r\n\r\nmodule.exports = minify;\r\n","const {inspect} = require('util');\r\n\r\n/////////////////////////////////////////////////////////////\r\n// Returns {line, column} of an index within multi-line text.\r\nfunction getIndexPos(text, index) {\r\n    let lineIdx = 0, colIdx = index, pos = 0;\r\n    do {\r\n        pos = text.indexOf('\\n', pos);\r\n        if (pos === -1 || index < pos + 1) {\r\n            break;\r\n        }\r\n        lineIdx++;\r\n        pos++;\r\n        colIdx = index - pos;\r\n    } while (pos < index);\r\n    return {\r\n        line: lineIdx + 1,\r\n        column: colIdx + 1\r\n    };\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output.\r\nfunction messageGap(level) {\r\n    return ' '.repeat(level * 4);\r\n}\r\n\r\n////////////////////////////////////////////////////\r\n// Type inspection\r\nfunction addInspection(type, cb) {\r\n    type[inspect.custom] = cb;\r\n}\r\n\r\nmodule.exports = {\r\n    getIndexPos,\r\n    messageGap,\r\n    addInspection\r\n};\r\n","'use strict'\nconst EventEmitter = require('events').EventEmitter\n\nconst NOOP = function () {}\n\nconst removeWhere = (list, predicate) => {\n  const i = list.findIndex(predicate)\n\n  return i === -1 ? undefined : list.splice(i, 1)[0]\n}\n\nclass IdleItem {\n  constructor(client, idleListener, timeoutId) {\n    this.client = client\n    this.idleListener = idleListener\n    this.timeoutId = timeoutId\n  }\n}\n\nclass PendingItem {\n  constructor(callback) {\n    this.callback = callback\n  }\n}\n\nfunction throwOnDoubleRelease() {\n  throw new Error('Release called on client which has already been released to the pool.')\n}\n\nfunction promisify(Promise, callback) {\n  if (callback) {\n    return { callback: callback, result: undefined }\n  }\n  let rej\n  let res\n  const cb = function (err, client) {\n    err ? rej(err) : res(client)\n  }\n  const result = new Promise(function (resolve, reject) {\n    res = resolve\n    rej = reject\n  })\n  return { callback: cb, result: result }\n}\n\nfunction makeIdleListener(pool, client) {\n  return function idleListener(err) {\n    err.client = client\n\n    client.removeListener('error', idleListener)\n    client.on('error', () => {\n      pool.log('additional client error after disconnection due to error', err)\n    })\n    pool._remove(client)\n    // TODO - document that once the pool emits an error\n    // the client has already been closed & purged and is unusable\n    pool.emit('error', err, client)\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options, Client) {\n    super()\n    this.options = Object.assign({}, options)\n\n    if (options != null && 'password' in options) {\n      // \"hiding\" the password so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options, 'password', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: options.password,\n      })\n    }\n    if (options != null && options.ssl && options.ssl.key) {\n      // \"hiding\" the ssl->key so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.options.max = this.options.max || this.options.poolSize || 10\n    this.options.maxUses = this.options.maxUses || Infinity\n    this.options.allowExitOnIdle = this.options.allowExitOnIdle || false\n    this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0\n    this.log = this.options.log || function () {}\n    this.Client = this.options.Client || Client || require('pg').Client\n    this.Promise = this.options.Promise || global.Promise\n\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\n      this.options.idleTimeoutMillis = 10000\n    }\n\n    this._clients = []\n    this._idle = []\n    this._expired = new WeakSet()\n    this._pendingQueue = []\n    this._endCallback = undefined\n    this.ending = false\n    this.ended = false\n  }\n\n  _isFull() {\n    return this._clients.length >= this.options.max\n  }\n\n  _pulseQueue() {\n    this.log('pulse queue')\n    if (this.ended) {\n      this.log('pulse queue ended')\n      return\n    }\n    if (this.ending) {\n      this.log('pulse queue on ending')\n      if (this._idle.length) {\n        this._idle.slice().map((item) => {\n          this._remove(item.client)\n        })\n      }\n      if (!this._clients.length) {\n        this.ended = true\n        this._endCallback()\n      }\n      return\n    }\n\n    // if we don't have any waiting, do nothing\n    if (!this._pendingQueue.length) {\n      this.log('no queued requests')\n      return\n    }\n    // if we don't have any idle clients and we have no more room do nothing\n    if (!this._idle.length && this._isFull()) {\n      return\n    }\n    const pendingItem = this._pendingQueue.shift()\n    if (this._idle.length) {\n      const idleItem = this._idle.pop()\n      clearTimeout(idleItem.timeoutId)\n      const client = idleItem.client\n      client.ref && client.ref()\n      const idleListener = idleItem.idleListener\n\n      return this._acquireClient(client, pendingItem, idleListener, false)\n    }\n    if (!this._isFull()) {\n      return this.newClient(pendingItem)\n    }\n    throw new Error('unexpected condition')\n  }\n\n  _remove(client) {\n    const removed = removeWhere(this._idle, (item) => item.client === client)\n\n    if (removed !== undefined) {\n      clearTimeout(removed.timeoutId)\n    }\n\n    this._clients = this._clients.filter((c) => c !== client)\n    client.end()\n    this.emit('remove', client)\n  }\n\n  connect(cb) {\n    if (this.ending) {\n      const err = new Error('Cannot use a pool after calling end on the pool')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n\n    const response = promisify(this.Promise, cb)\n    const result = response.result\n\n    // if we don't have to connect a new client, don't do so\n    if (this._isFull() || this._idle.length) {\n      // if we have idle clients schedule a pulse immediately\n      if (this._idle.length) {\n        process.nextTick(() => this._pulseQueue())\n      }\n\n      if (!this.options.connectionTimeoutMillis) {\n        this._pendingQueue.push(new PendingItem(response.callback))\n        return result\n      }\n\n      const queueCallback = (err, res, done) => {\n        clearTimeout(tid)\n        response.callback(err, res, done)\n      }\n\n      const pendingItem = new PendingItem(queueCallback)\n\n      // set connection timeout on checking out an existing client\n      const tid = setTimeout(() => {\n        // remove the callback from pending waiters because\n        // we're going to call it with a timeout error\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\n        pendingItem.timedOut = true\n        response.callback(new Error('timeout exceeded when trying to connect'))\n      }, this.options.connectionTimeoutMillis)\n\n      this._pendingQueue.push(pendingItem)\n      return result\n    }\n\n    this.newClient(new PendingItem(response.callback))\n\n    return result\n  }\n\n  newClient(pendingItem) {\n    const client = new this.Client(this.options)\n    this._clients.push(client)\n    const idleListener = makeIdleListener(this, client)\n\n    this.log('checking client timeout')\n\n    // connection timeout logic\n    let tid\n    let timeoutHit = false\n    if (this.options.connectionTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('ending client due to timeout')\n        timeoutHit = true\n        // force kill the node driver, and let libpq do its teardown\n        client.connection ? client.connection.stream.destroy() : client.end()\n      }, this.options.connectionTimeoutMillis)\n    }\n\n    this.log('connecting new client')\n    client.connect((err) => {\n      if (tid) {\n        clearTimeout(tid)\n      }\n      client.on('error', idleListener)\n      if (err) {\n        this.log('client failed to connect', err)\n        // remove the dead client from our list of clients\n        this._clients = this._clients.filter((c) => c !== client)\n        if (timeoutHit) {\n          err.message = 'Connection terminated due to connection timeout'\n        }\n\n        // this client won’t be released, so move on immediately\n        this._pulseQueue()\n\n        if (!pendingItem.timedOut) {\n          pendingItem.callback(err, undefined, NOOP)\n        }\n      } else {\n        this.log('new client connected')\n\n        if (this.options.maxLifetimeSeconds !== 0) {\n          setTimeout(() => {\n            this.log('ending client due to expired lifetime')\n            this._expired.add(client)\n            const idleIndex = this._idle.findIndex((idleItem) => idleItem.client === client)\n            if (idleIndex !== -1) {\n              this._acquireClient(\n                client,\n                new PendingItem((err, client, clientRelease) => clientRelease()),\n                idleListener,\n                false\n              )\n            }\n          }, this.options.maxLifetimeSeconds * 1000)\n        }\n\n        return this._acquireClient(client, pendingItem, idleListener, true)\n      }\n    })\n  }\n\n  // acquire a client for a pending work item\n  _acquireClient(client, pendingItem, idleListener, isNew) {\n    if (isNew) {\n      this.emit('connect', client)\n    }\n\n    this.emit('acquire', client)\n\n    client.release = this._releaseOnce(client, idleListener)\n\n    client.removeListener('error', idleListener)\n\n    if (!pendingItem.timedOut) {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, (err) => {\n          if (err) {\n            client.release(err)\n            return pendingItem.callback(err, undefined, NOOP)\n          }\n\n          pendingItem.callback(undefined, client, client.release)\n        })\n      } else {\n        pendingItem.callback(undefined, client, client.release)\n      }\n    } else {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, client.release)\n      } else {\n        client.release()\n      }\n    }\n  }\n\n  // returns a function that wraps _release and throws if called more than once\n  _releaseOnce(client, idleListener) {\n    let released = false\n\n    return (err) => {\n      if (released) {\n        throwOnDoubleRelease()\n      }\n\n      released = true\n      this._release(client, idleListener, err)\n    }\n  }\n\n  // release a client back to the poll, include an error\n  // to remove it from the pool\n  _release(client, idleListener, err) {\n    client.on('error', idleListener)\n\n    client._poolUseCount = (client._poolUseCount || 0) + 1\n\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\n      if (client._poolUseCount >= this.options.maxUses) {\n        this.log('remove expended client')\n      }\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    const isExpired = this._expired.has(client)\n    if (isExpired) {\n      this.log('remove expired client')\n      this._expired.delete(client)\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    // idle timeout\n    let tid\n    if (this.options.idleTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('remove idle client')\n        this._remove(client)\n      }, this.options.idleTimeoutMillis)\n\n      if (this.options.allowExitOnIdle) {\n        // allow Node to exit if this is all that's left\n        tid.unref()\n      }\n    }\n\n    if (this.options.allowExitOnIdle) {\n      client.unref()\n    }\n\n    this._idle.push(new IdleItem(client, idleListener, tid))\n    this._pulseQueue()\n  }\n\n  query(text, values, cb) {\n    // guard clause against passing a function as the first parameter\n    if (typeof text === 'function') {\n      const response = promisify(this.Promise, text)\n      setImmediate(function () {\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\n      })\n      return response.result\n    }\n\n    // allow plain text query without values\n    if (typeof values === 'function') {\n      cb = values\n      values = undefined\n    }\n    const response = promisify(this.Promise, cb)\n    cb = response.callback\n\n    this.connect((err, client) => {\n      if (err) {\n        return cb(err)\n      }\n\n      let clientReleased = false\n      const onError = (err) => {\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        cb(err)\n      }\n\n      client.once('error', onError)\n      this.log('dispatching query')\n      client.query(text, values, (err, res) => {\n        this.log('query dispatched')\n        client.removeListener('error', onError)\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        if (err) {\n          return cb(err)\n        } else {\n          return cb(undefined, res)\n        }\n      })\n    })\n    return response.result\n  }\n\n  end(cb) {\n    this.log('ending')\n    if (this.ending) {\n      const err = new Error('Called end on pool more than once')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n    this.ending = true\n    const promised = promisify(this.Promise, cb)\n    this._endCallback = promised.callback\n    this._pulseQueue()\n    return promised.result\n  }\n\n  get waitingCount() {\n    return this._pendingQueue.length\n  }\n\n  get idleCount() {\n    return this._idle.length\n  }\n\n  get expiredCount() {\n    return this._clients.reduce((acc, client) => acc + (this._expired.has(client) ? 1 : 0), 0)\n  }\n\n  get totalCount() {\n    return this._clients.length\n  }\n}\nmodule.exports = Pool\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Events} = require(`./events`);\r\nconst {ColorConsole} = require(`./utils/color`);\r\n\r\nconst npm = {\r\n    utils: require(`./utils`),\r\n    text: require(`./text`),\r\n    formatting: require(`./formatting`)\r\n};\r\n\r\nfunction poolConnect(ctx, db, config) {\r\n    return config.promise((resolve, reject) => {\r\n        const p = db.$pool;\r\n        if (p.ending) {\r\n            db.$destroy();\r\n            const err = new Error(npm.text.poolDestroyed);\r\n            Events.error(ctx.options, err, {\r\n                dc: ctx.dc\r\n            });\r\n            reject(err);\r\n            return;\r\n        }\r\n        p.connect((err, client) => {\r\n            if (err) {\r\n                Events.error(ctx.options, err, {\r\n                    cn: npm.utils.getSafeConnection(ctx.cn),\r\n                    dc: ctx.dc\r\n                });\r\n                reject(err);\r\n            } else {\r\n                if (`$useCount` in client) {\r\n                    // Make sure useCount drops to 1, if it ever reaches maximum integer number;\r\n                    // We do not drop it to zero, to avoid rerun of initialization queries that\r\n                    // usually check for useCount === 0;\r\n                    // istanbul ignore if\r\n                    if (client.$useCount >= Number.MAX_SAFE_INTEGER) {\r\n                        client.$useCount = 1; // resetting; cannot auto-test this\r\n                    } else {\r\n                        client.$useCount = ++client.$useCount;\r\n                    }\r\n                } else {\r\n                    Object.defineProperty(client, `$useCount`, {\r\n                        value: 0,\r\n                        configurable: false,\r\n                        enumerable: false,\r\n                        writable: true\r\n                    });\r\n                    setSchema(client, ctx);\r\n                }\r\n                setCtx(client, ctx);\r\n                const end = lockClientEnd(client);\r\n                client.on(`error`, onError);\r\n                resolve({\r\n                    client,\r\n                    useCount: client.$useCount,\r\n                    release(kill) {\r\n                        client.end = end;\r\n                        client.release(kill || client.$connectionError);\r\n                        Events.disconnect(ctx, client);\r\n                        client.removeListener(`error`, onError);\r\n                    }\r\n                });\r\n                Events.connect(ctx, client, client.$useCount);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction directConnect(ctx, config) {\r\n    return config.promise((resolve, reject) => {\r\n        const client = new config.pgp.pg.Client(ctx.cn);\r\n        client.connect(err => {\r\n            if (err) {\r\n                Events.error(ctx.options, err, {\r\n                    cn: npm.utils.getSafeConnection(ctx.cn),\r\n                    dc: ctx.dc\r\n                });\r\n                reject(err);\r\n            } else {\r\n                setSchema(client, ctx);\r\n                setCtx(client, ctx);\r\n                const end = lockClientEnd(client);\r\n                client.on(`error`, onError);\r\n                resolve({\r\n                    client,\r\n                    useCount: 0,\r\n                    release() {\r\n                        client.end = end;\r\n                        const p = config.promise((res, rej) => client.end().then(res).catch(rej));\r\n                        Events.disconnect(ctx, client);\r\n                        client.removeListener(`error`, onError);\r\n                        return p;\r\n                    }\r\n                });\r\n                Events.connect(ctx, client, 0);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// this event only happens when the connection is lost physically,\r\n// which cannot be tested automatically; removing from coverage:\r\n// istanbul ignore next\r\nfunction onError(err) {\r\n    const ctx = this.$ctx;\r\n    const cn = npm.utils.getSafeConnection(ctx.cn);\r\n    Events.error(ctx.options, err, {cn, dc: ctx.dc});\r\n    if (ctx.cnOptions && typeof ctx.cnOptions.onLost === `function` && !ctx.notified) {\r\n        try {\r\n            ctx.cnOptions.onLost.call(this, err, {\r\n                cn,\r\n                dc: ctx.dc,\r\n                start: ctx.start,\r\n                client: this\r\n            });\r\n        } catch (e) {\r\n            ColorConsole.error(e && e.stack || e);\r\n        }\r\n        ctx.notified = true;\r\n    }\r\n}\r\n\r\nfunction lockClientEnd(client) {\r\n    const end = client.end;\r\n    client.end = doNotCall => {\r\n        // This call can happen only in the following two cases:\r\n        // 1. the client made the call directly, against the library's documentation (invalid code)\r\n        // 2. connection with the server broke, and the pool is terminating all clients forcefully.\r\n        ColorConsole.error(`${npm.text.clientEnd}\\n${npm.utils.getLocalStack(1, 3)}\\n`);\r\n        if (!doNotCall) {\r\n            end.call(client);\r\n        }\r\n    };\r\n    return end;\r\n}\r\n\r\nfunction setCtx(client, ctx) {\r\n    Object.defineProperty(client, `$ctx`, {\r\n        value: ctx,\r\n        writable: true\r\n    });\r\n}\r\n\r\nfunction setSchema(client, ctx) {\r\n    let s = ctx.options.schema;\r\n    if (!s) {\r\n        return;\r\n    }\r\n    if (typeof s === `function`) {\r\n        s = s.call(ctx.dc, ctx.dc);\r\n    }\r\n    if (Array.isArray(s)) {\r\n        s = s.filter(a => a && typeof a === `string`);\r\n    }\r\n    if (typeof s === `string` || (Array.isArray(s) && s.length)) {\r\n        client.query(npm.formatting.as.format(`SET search_path TO $1:name`, [s]), err => {\r\n            // istanbul ignore if;\r\n            if (err) {\r\n                // This is unlikely to ever happen, unless the connection is created faulty,\r\n                // and fails on the very first query, which is impossible to test automatically.\r\n                throw err;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = config => ({\r\n    pool: (ctx, db) => poolConnect(ctx, db, config),\r\n    direct: ctx => directConnect(ctx, config)\r\n});\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\n/**\r\n * @class ConnectionContext\r\n * @private\r\n * @summary Internal connection context.\r\n *\r\n * @param {object} cc\r\n * Connection Context.\r\n *\r\n * @param {object} cc.cn\r\n * Connection details\r\n *\r\n * @param {*} cc.dc\r\n * Database Context\r\n *\r\n * @param {object} cc.options\r\n * Library's Initialization Options\r\n *\r\n * @param {object} cc.db\r\n * Database Session we're attached to, if any.\r\n *\r\n * @param {number} cc.level\r\n * Task Level\r\n *\r\n * @param {number} cc.txLevel\r\n * Transaction Level\r\n *\r\n * @param {object} cc.parentCtx\r\n * Connection Context of the parent operation, if any.\r\n *\r\n */\r\nclass ConnectionContext {\r\n\r\n    constructor(cc) {\r\n        this.cn = cc.cn; // connection details;\r\n        this.dc = cc.dc; // database context;\r\n        this.options = cc.options; // library options;\r\n        this.db = cc.db; // database session;\r\n        this.level = cc.level; // task level;\r\n        this.txLevel = cc.txLevel; // transaction level;\r\n        this.parentCtx = null; // parent context\r\n        this.taskCtx = null; // task context\r\n        this.start = null; // Date/Time when connected\r\n        this.txCount = 0;\r\n    }\r\n\r\n    connect(db) {\r\n        this.db = db;\r\n        this.start = new Date();\r\n    }\r\n\r\n    disconnect(kill) {\r\n        if (this.db) {\r\n            const p = this.db.release(kill);\r\n            this.db = null;\r\n            return p;\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        const obj = new ConnectionContext(this);\r\n        obj.parent = this;\r\n        obj.parentCtx = this.taskCtx;\r\n        return obj;\r\n    }\r\n\r\n    get nextTxCount() {\r\n        let txCurrent = this, txTop = this;\r\n        while (txCurrent.parent) {\r\n            txCurrent = txCurrent.parent;\r\n            if (txCurrent.taskCtx && txCurrent.taskCtx.isTX) {\r\n                txTop = txCurrent;\r\n            }\r\n        }\r\n        return txTop.txCount++;\r\n    }\r\n}\r\n\r\n/**\r\n * Connection Context\r\n * @module context\r\n * @author Vitaly Tomilov\r\n * @private\r\n */\r\nmodule.exports = {ConnectionContext};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ColorConsole} = require(`./utils/color`);\r\n\r\nconst npm = {\r\n    utils: require(`./utils`)\r\n};\r\n\r\n/**\r\n * @class DatabasePool\r\n * @static\r\n * @private\r\n */\r\nclass DatabasePool {\r\n\r\n    /**\r\n     * Global instance of the database pool repository.\r\n     *\r\n     * @returns {{dbMap: {}, dbs: Array}}\r\n     */\r\n    static get instance() {\r\n        const s = Symbol.for(`pgPromiseDatabasePool`);\r\n        let scope = global[s];\r\n        if (!scope) {\r\n            scope = {\r\n                dbMap: {}, // map of used database context keys (connection + dc)\r\n                dbs: [] // all database objects\r\n            };\r\n            global[s] = scope;\r\n        }\r\n        return scope;\r\n    }\r\n\r\n    /**\r\n     * @method DatabasePool.register\r\n     * @static\r\n     * @description\r\n     *  - Registers each database object, to make sure no duplicates connections are used,\r\n     *    and if they are, produce a warning;\r\n     *  - Registers each Pool object, to be able to release them all when requested.\r\n     *\r\n     * @param {Database} db - The new Database object being registered.\r\n     */\r\n    static register(db) {\r\n        const cnKey = DatabasePool.createContextKey(db);\r\n        npm.utils.addReadProp(db, `$cnKey`, cnKey, true);\r\n        const {dbMap, dbs} = DatabasePool.instance;\r\n        if (cnKey in dbMap) {\r\n            dbMap[cnKey]++;\r\n            /* istanbul ignore if */\r\n            if (!db.$config.options.noWarnings) {\r\n                ColorConsole.warn(`WARNING: Creating a duplicate database object for the same connection.\\n${npm.utils.getLocalStack(4, 3)}\\n`);\r\n            }\r\n        } else {\r\n            dbMap[cnKey] = 1;\r\n        }\r\n        dbs.push(db);\r\n    }\r\n\r\n    /**\r\n     * @method DatabasePool.unregister\r\n     * @static\r\n     * @param db\r\n     */\r\n    static unregister(db) {\r\n        const cnKey = db.$cnKey;\r\n        const {dbMap} = DatabasePool.instance;\r\n        if (!--dbMap[cnKey]) {\r\n            delete dbMap[cnKey];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method DatabasePool.shutDown\r\n     * @static\r\n     */\r\n    static shutDown() {\r\n        const {instance} = DatabasePool;\r\n        instance.dbs.forEach(db => {\r\n            db.$destroy();\r\n        });\r\n        instance.dbs.length = 0;\r\n        instance.dbMap = {};\r\n    }\r\n\r\n    /**\r\n     * @method DatabasePool.createContextKey\r\n     * @static\r\n     * @description\r\n     * For connections that are objects it reorders the keys alphabetically,\r\n     * and then serializes the result into a JSON string.\r\n     *\r\n     * @param {Database} db - Database instance.\r\n     */\r\n    static createContextKey(db) {\r\n        let cn = db.$cn;\r\n        if (typeof cn === `object`) {\r\n            const obj = {}, keys = Object.keys(cn).sort();\r\n            keys.forEach(name => {\r\n                obj[name] = cn[name];\r\n            });\r\n            cn = obj;\r\n        }\r\n        return npm.utils.toJson(npm.utils.getSafeConnection(cn)) + npm.utils.toJson(db.$dc);\r\n    }\r\n}\r\n\r\nmodule.exports = {DatabasePool};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Events} = require(`./events`);\r\nconst {assertOptions} = require(`assert-options`);\r\nconst {resultQuery, multiResultQuery, streamQuery} = require(`./special-query`);\r\nconst {ConnectionContext} = require(`./context`);\r\nconst {DatabasePool} = require(`./database-pool`);\r\nconst {queryResult} = require(`./query-result`);\r\n\r\nconst npm = {\r\n    utils: require(`./utils`),\r\n    pubUtils: require(`./utils/public`),\r\n    connect: require(`./connect`),\r\n    query: require(`./query`),\r\n    task: require(`./task`),\r\n    text: require(`./text`)\r\n};\r\n\r\n/**\r\n * @class Database\r\n * @description\r\n *\r\n * Represents the database protocol, extensible via event {@link event:extend extend}.\r\n * This type is not available directly, it can only be created via the library's base call.\r\n *\r\n * **IMPORTANT:**\r\n *\r\n * For any given connection, you should only create a single {@link Database} object in a separate module,\r\n * to be shared in your application (see the code example below). If instead you keep creating the {@link Database}\r\n * object dynamically, your application will suffer from loss in performance, and will be getting a warning in a\r\n * development environment (when `NODE_ENV` = `development`):\r\n *\r\n * `WARNING: Creating a duplicate database object for the same connection.`\r\n *\r\n * If you ever see this warning, rectify your {@link Database} object initialization, so there is only one object\r\n * per connection details. See the example provided below.\r\n *\r\n * See also: property `noWarnings` in {@link module:pg-promise Initialization Options}.\r\n *\r\n * Note however, that in special cases you may need to re-create the database object, if its connection pool has been\r\n * shut-down externally. And in this case the library won't be showing any warning.\r\n *\r\n * @param {string|object} cn\r\n * Database connection details, which can be:\r\n *\r\n * - a configuration object\r\n * - a connection string\r\n *\r\n * For details see {@link https://github.com/vitaly-t/pg-promise/wiki/Connection-Syntax Connection Syntax}.\r\n *\r\n * The value can be accessed from the database object via property {@link Database.$cn $cn}.\r\n *\r\n * @param {*} [dc]\r\n * Database Context.\r\n *\r\n * Any object or value to be propagated through the protocol, to allow implementations and event handling\r\n * that depend on the database context.\r\n *\r\n * This is mainly to facilitate the use of multiple databases which may need separate protocol extensions,\r\n * or different implementations within a single task / transaction callback, depending on the database context.\r\n *\r\n * This parameter also adds uniqueness to the connection context that's used in combination with the connection\r\n * parameters, i.e. use of unique database context will prevent getting the warning about creating a duplicate\r\n * Database object.\r\n *\r\n * The value can be accessed from the database object via property {@link Database#$dc $dc}.\r\n *\r\n * @returns {Database}\r\n *\r\n * @see\r\n *\r\n * {@link Database#query query},\r\n * {@link Database#none none},\r\n * {@link Database#one one},\r\n * {@link Database#oneOrNone oneOrNone},\r\n * {@link Database#many many},\r\n * {@link Database#manyOrNone manyOrNone},\r\n * {@link Database#any any},\r\n * {@link Database#func func},\r\n * {@link Database#proc proc},\r\n * {@link Database#result result},\r\n * {@link Database#multiResult multiResult},\r\n * {@link Database#multi multi},\r\n * {@link Database#map map},\r\n * {@link Database#each each},\r\n * {@link Database#stream stream},\r\n * {@link Database#task task},\r\n * {@link Database#taskIf taskIf},\r\n * {@link Database#tx tx},\r\n * {@link Database#txIf txIf},\r\n * {@link Database#connect connect},\r\n * {@link Database#$config $config},\r\n * {@link Database#$cn $cn},\r\n * {@link Database#$dc $dc},\r\n * {@link Database#$pool $pool},\r\n * {@link event:extend extend}\r\n *\r\n * @example\r\n * // Proper way to initialize and share the Database object\r\n *\r\n * // Loading and initializing the library:\r\n * const pgp = require('pg-promise')({\r\n *     // Initialization Options\r\n * });\r\n *\r\n * // Preparing the connection details:\r\n * const cn = 'postgres://username:password@host:port/database';\r\n *\r\n * // Creating a new database instance from the connection details:\r\n * const db = pgp(cn);\r\n *\r\n * // Exporting the database object for shared use:\r\n * module.exports = db;\r\n */\r\nfunction Database(cn, dc, config) {\r\n\r\n    const dbThis = this,\r\n        $p = config.promise,\r\n        poolConnection = typeof cn === `string` ? {connectionString: cn} : cn,\r\n        pool = new config.pgp.pg.Pool(poolConnection),\r\n        endMethod = pool.end;\r\n\r\n    let destroyed;\r\n\r\n    pool.end = cb => {\r\n        const res = endMethod.call(pool, cb);\r\n        dbThis.$destroy();\r\n        return res;\r\n    };\r\n\r\n    pool.on(`error`, onError);\r\n\r\n    /**\r\n     * @method Database#connect\r\n     *\r\n     * @description\r\n     * Acquires a new or existing connection, depending on the current state of the connection pool, and parameter `direct`.\r\n     *\r\n     * This method creates a shared connection for executing a chain of queries against it. The connection must be released\r\n     * in the end of the chain by calling `done()` on the connection object.\r\n     *\r\n     * Method `done` takes one optional parameter - boolean `kill` flag, to signal the connection pool that you want it to kill\r\n     * the physical connection. This flag is ignored for direct connections, as they always close when released.\r\n     *\r\n     * It should not be used just for chaining queries on the same connection, methods {@link Database#task task} and\r\n     * {@link Database#tx tx} (for transactions) are to be used for that. This method is primarily for special cases, like\r\n     * `LISTEN` notifications.\r\n     *\r\n     * **NOTE:** Even though this method exposes a {@link external:Client Client} object via property `client`,\r\n     * you cannot call `client.end()` directly, or it will print an error into the console:\r\n     * `Abnormal client.end() call, due to invalid code or failed server connection.`\r\n     * You should only call method `done()` to release the connection.\r\n     *\r\n     * @param {object} [options]\r\n     * Connection Options.\r\n     *\r\n     * @param {boolean} [options.direct=false]\r\n     * Creates a new connection directly, as a stand-alone {@link external:Client Client} object, bypassing the connection pool.\r\n     *\r\n     * By default, all connections are acquired from the connection pool. But if you set this option, the library will instead\r\n     * create a new {@link external:Client Client} object directly (separately from the pool), and then call its `connect` method.\r\n     *\r\n     * Note that specifically for direct connections, method `done` returns a {@link external:Promise Promise}, because those connections\r\n     * are closed physically, which may take time.\r\n     *\r\n     * **WARNING:**\r\n     *\r\n     * Do not use this option for regular query execution, because it exclusively occupies one physical channel, and it cannot scale.\r\n     * This option is only suitable for global connection usage, such as event listeners.\r\n     *\r\n     * @param {function} [options.onLost]\r\n     * Notification callback of the lost/broken connection, called with the following parameters:\r\n     *  - `err` - the original connectivity error\r\n     *  - `e` - error context object, which contains:\r\n     *    - `cn` - safe connection string/config (with the password hashed);\r\n     *    - `dc` - Database Context, as was used during {@link Database} construction;\r\n     *    - `start` - Date/Time (`Date` type) when the connection was established;\r\n     *    - `client` - {@link external:Client Client} object that has lost the connection.\r\n     *\r\n     * The notification is mostly valuable with `direct: true`, to be able to re-connect direct/permanent connections by calling\r\n     * method {@link Database#connect connect} again.\r\n     *\r\n     * You do not need to call `done` on lost connections, as it happens automatically. However, if you had event listeners\r\n     * set up on the connection's `client` object, you should remove them to avoid leaks:\r\n     *\r\n     * ```js\r\n     * function onLostConnection(err, e) {\r\n     *     e.client.removeListener('my-event', myHandler);\r\n     * }\r\n     * ```\r\n     *\r\n     * For a complete example see $[Robust Listeners].\r\n     *\r\n     * @returns {external:Promise}\r\n     * A promise object that represents the connection result:\r\n     *  - resolves with the complete {@link Database} protocol, extended with:\r\n     *    - property `client` of type {@link external:Client Client} that represents the open connection\r\n     *    - method `done` that must be called in the end, in order to release the connection (returns a {@link external:Promise Promise}\r\n     *      in case of direct connections)\r\n     *    - methods `batch`, `page` and `sequence`, same as inside a {@link Task}\r\n     *  - rejects with a connection-related error when it fails to connect.\r\n     *\r\n     * @see\r\n     * {@link Database#task Database.task},\r\n     * {@link Database#taskIf Database.taskIf},\r\n     * {@link Database#tx Database.tx},\r\n     * {@link Database#txIf Database.txIf}\r\n     *\r\n     * @example\r\n     *\r\n     * let sco; // shared connection object;\r\n     *\r\n     * db.connect()\r\n     *     .then(obj => {\r\n     *         // obj.client = new connected Client object;\r\n     *\r\n     *         sco = obj; // save the connection object;\r\n     *\r\n     *         // execute all the queries you need:\r\n     *         return sco.any('SELECT * FROM Users');\r\n     *     })\r\n     *     .then(data => {\r\n     *         // success\r\n     *     })\r\n     *     .catch(error => {\r\n     *         // error\r\n     *     })\r\n     *     .finally(() => {\r\n     *         // release the connection, if it was successful:\r\n     *         if (sco) {\r\n     *             // if you pass `true` into method done, i.e. done(true),\r\n     *             // it will make the pool kill the physical connection.\r\n     *             sco.done();\r\n     *         }\r\n     *     });\r\n     *\r\n     */\r\n    this.connect = function (options) {\r\n        options = options || {};\r\n        const ctx = createContext();\r\n        ctx.cnOptions = options;\r\n        const self = {\r\n            query(query, values, qrm) {\r\n                if (!ctx.db) {\r\n                    return $p.reject(new Error(npm.text.queryDisconnected));\r\n                }\r\n                return config.$npm.query.call(this, ctx, query, values, qrm);\r\n            },\r\n            done(kill) {\r\n                if (!ctx.db) {\r\n                    throw new Error(npm.text.looseQuery);\r\n                }\r\n                return ctx.disconnect(kill);\r\n            },\r\n            batch(values, opt) {\r\n                return config.$npm.spex.batch.call(this, values, opt);\r\n            },\r\n            page(source, opt) {\r\n                return config.$npm.spex.page.call(this, source, opt);\r\n            },\r\n            sequence(source, opt) {\r\n                return config.$npm.spex.sequence.call(this, source, opt);\r\n            }\r\n        };\r\n        const connection = options.direct ? config.$npm.connect.direct(ctx) : config.$npm.connect.pool(ctx, dbThis);\r\n        return connection\r\n            .then(db => {\r\n                ctx.connect(db);\r\n                self.client = db.client;\r\n                extend(ctx, self);\r\n                return self;\r\n            });\r\n    };\r\n\r\n    /**\r\n     * @method Database#query\r\n     *\r\n     * @description\r\n     * Base query method that executes a generic query, expecting the return data according to parameter `qrm`.\r\n     *\r\n     * It performs the following steps:\r\n     *\r\n     *  1. Validates and formats the query via {@link formatting.format as.format}, according to the `query` and `values` passed in;\r\n     *  2. For a root-level query (against the {@link Database} object), it requests a new connection from the pool;\r\n     *  3. Executes the query;\r\n     *  4. For a root-level query (against the {@link Database} object), it releases the connection back to the pool;\r\n     *  5. Resolves/rejects, according to the data returned from the query and the value of `qrm`.\r\n     *\r\n     * Direct use of this method is not suitable for chaining queries, for performance reasons. It should be done\r\n     * through either task or transaction context, see $[Chaining Queries].\r\n     *\r\n     * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n     *\r\n     * @param {string|function|object} query\r\n     * Query to be executed, which can be any of the following types:\r\n     * - A non-empty query string\r\n     * - A function that returns a query string or another function, i.e. recursive resolution\r\n     *   is supported, passing in `values` as `this`, and as the first parameter.\r\n     * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n     * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n     * - {@link QueryFile} object\r\n     *\r\n     * @param {array|value|function} [values]\r\n     * Query formatting parameter(s), or a function that returns it.\r\n     *\r\n     * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n     * - a single value - to replace all `$1` occurrences\r\n     * - an array of values - to replace all `$1`, `$2`, ... variables\r\n     * - an object - to apply $[Named Parameters] formatting\r\n     *\r\n     * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n     * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n     * as an override for its internal `values`.\r\n     *\r\n     * @param {queryResult} [qrm=queryResult.any]\r\n     * {@link queryResult Query Result Mask}\r\n     *\r\n     * @returns {external:Promise}\r\n     * A promise object that represents the query result according to `qrm`.\r\n     */\r\n    this.query = function (query, values, qrm) {\r\n        const self = this, ctx = createContext();\r\n        return config.$npm.connect.pool(ctx, dbThis)\r\n            .then(db => {\r\n                ctx.connect(db);\r\n                return config.$npm.query.call(self, ctx, query, values, qrm);\r\n            })\r\n            .then(data => {\r\n                ctx.disconnect();\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                ctx.disconnect();\r\n                return $p.reject(error);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * @member {object} Database#$config\r\n     * @readonly\r\n     * @description\r\n     * This is a hidden property, to help integrating type {@link Database} directly with third-party libraries.\r\n     *\r\n     * Properties available in the object:\r\n     * - `pgp` - instance of the entire library after initialization\r\n     * - `options` - the library's {@link module:pg-promise Initialization Options} object\r\n     * - `promiseLib` - instance of the promise library that's used\r\n     * - `promise` - generic promise interface that uses `promiseLib` via 4 basic methods:\r\n     *   - `promise((resolve, reject) => {})` - to create a new promise\r\n     *   - `promise.resolve(value)` - to resolve with a value\r\n     *   - `promise.reject(reason)` - to reject with a reason\r\n     *   - `promise.all(iterable)` - to resolve an iterable list of promises\r\n     * - `version` - this library's version\r\n     * - `$npm` _(hidden property)_ - internal module cache\r\n     *\r\n     * @example\r\n     *\r\n     * // Using the promise protocol as configured by pg-promise:\r\n     *\r\n     * const $p = db.$config.promise;\r\n     *\r\n     * const resolvedPromise = $p.resolve('some data');\r\n     * const rejectedPromise = $p.reject('some reason');\r\n     *\r\n     * const newPromise = $p((resolve, reject) => {\r\n     *     // call either resolve(data) or reject(reason) here\r\n     * });\r\n     */\r\n    npm.utils.addReadProp(this, `$config`, config, true);\r\n\r\n    /**\r\n     * @member {string|object} Database#$cn\r\n     * @readonly\r\n     * @description\r\n     * Database connection, as was passed in during the object's construction.\r\n     *\r\n     * This is a hidden property, to help integrating type {@link Database} directly with third-party libraries.\r\n     *\r\n     * @see Database\r\n     */\r\n    npm.utils.addReadProp(this, `$cn`, cn, true);\r\n\r\n    /**\r\n     * @member {*} Database#$dc\r\n     * @readonly\r\n     * @description\r\n     * Database Context, as was passed in during the object's construction.\r\n     *\r\n     * This is a hidden property, to help integrating type {@link Database} directly with third-party libraries.\r\n     *\r\n     * @see Database\r\n     */\r\n    npm.utils.addReadProp(this, `$dc`, dc, true);\r\n\r\n    /**\r\n     * @member {external:pg-pool} Database#$pool\r\n     * @readonly\r\n     * @description\r\n     * A $[pg-pool] object associated with the database object, as each {@link Database} creates its own $[pg-pool] instance.\r\n     *\r\n     * This is a hidden property, primarily for integrating type {@link Database} with third-party libraries that support\r\n     * $[pg-pool] directly. Note however, that if you pass the pool object into a library that calls `pool.end()`, you will no longer be able\r\n     * to use this {@link Database} object, and each query method will be rejecting with {@link external:Error Error} =\r\n     * `Connection pool of the database object has been destroyed.`\r\n     *\r\n     * You can also use this object to shut down the pool, by calling `$pool.end()`.\r\n     *\r\n     * For more details see $[Library de-initialization].\r\n     *\r\n     * @see\r\n     * {@link Database}\r\n     * {@link module:pg-promise~end pgp.end}\r\n     *\r\n     * @example\r\n     *\r\n     * // Shutting down the connection pool of this database object,\r\n     * // after all queries have finished in a run-though process:\r\n     *\r\n     * .then(() => {}) // processing the data\r\n     * .catch() => {}) // handling the error\r\n     * .finally(db.$pool.end); // shutting down the pool\r\n     *\r\n     */\r\n    npm.utils.addReadProp(this, `$pool`, pool, true);\r\n\r\n    /**\r\n     * @member {function} Database.$destroy\r\n     * @readonly\r\n     * @private\r\n     * @description\r\n     * Permanently shuts down the database object.\r\n     */\r\n    npm.utils.addReadProp(this, `$destroy`, () => {\r\n        if (!destroyed) {\r\n            if (!pool.ending) {\r\n                endMethod.call(pool);\r\n            }\r\n            DatabasePool.unregister(dbThis);\r\n            pool.removeListener(`error`, onError);\r\n            destroyed = true;\r\n        }\r\n    }, true);\r\n\r\n    DatabasePool.register(this);\r\n\r\n    extend(createContext(), this); // extending root protocol;\r\n\r\n    function createContext() {\r\n        return new ConnectionContext({cn, dc, options: config.options});\r\n    }\r\n\r\n    // Optional value-transformation helper:\r\n    function transform(value, cb, thisArg) {\r\n        return typeof cb === `function` ? value.then(data => cb.call(thisArg, data)) : value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////\r\n    // Injects additional methods into an access object,\r\n    // extending the protocol's base method 'query'.\r\n    function extend(ctx, obj) {\r\n\r\n        /**\r\n         * @method Database#none\r\n         * @description\r\n         * Executes a query that expects no data to be returned. If the query returns any data,\r\n         * the method rejects.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise<null>}\r\n         * A promise object that represents the query result:\r\n         * - When no records are returned, it resolves with `null`.\r\n         * - When any data is returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `No return data was expected.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.notEmpty queryResultErrorCode.notEmpty}\r\n         */\r\n        obj.none = function (query, values) {\r\n            return obj.query.call(this, query, values, queryResult.none);\r\n        };\r\n\r\n        /**\r\n         * @method Database#one\r\n         * @description\r\n         * Executes a query that expects exactly 1 row to be returned. When 0 or more than 1 rows are returned,\r\n         * the method rejects.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value-transformation callback, to allow in-line value change.\r\n         * When specified, the returned value replaces the original one.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {*} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When 1 row is returned, it resolves with that row as a single object.\r\n         * - When no rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `No data returned from the query.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.noData queryResultErrorCode.noData}\r\n         * - When multiple rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `Multiple rows were not expected.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.multiple queryResultErrorCode.multiple}\r\n         * - Resolves with the new value, if transformation callback `cb` was specified.\r\n         *\r\n         * @see\r\n         * {@link Database#oneOrNone oneOrNone}\r\n         *\r\n         * @example\r\n         *\r\n         * // a query with in-line value transformation:\r\n         * db.one('INSERT INTO Events VALUES($1) RETURNING id', [123], event => event.id)\r\n         *     .then(data => {\r\n         *         // data = a new event id, rather than an object with it\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // a query with in-line value transformation + conversion:\r\n         * db.one('SELECT count(*) FROM Users', [], c => +c.count)\r\n         *     .then(count => {\r\n         *         // count = a proper integer value, rather than an object with a string\r\n         *     });\r\n         *\r\n         */\r\n        obj.one = function (query, values, cb, thisArg) {\r\n            const v = obj.query.call(this, query, values, queryResult.one);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database#many\r\n         * @description\r\n         * Executes a query that expects one or more rows to be returned. When the query returns no rows, the method rejects.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When 1 or more rows are returned, it resolves with the array of rows.\r\n         * - When no rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `No data returned from the query.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.noData queryResultErrorCode.noData}\r\n         */\r\n        obj.many = function (query, values) {\r\n            return obj.query.call(this, query, values, queryResult.many);\r\n        };\r\n\r\n        /**\r\n         * @method Database#oneOrNone\r\n         * @description\r\n         * Executes a query that expects 0 or 1 rows to be returned. It resolves with the row-object when 1 row is returned,\r\n         * or with `null` when nothing is returned. When the query returns more than 1 row, the method rejects.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value-transformation callback, to allow in-line value change.\r\n         * When specified, the returned value replaces the original one.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {*} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - When no rows are returned, it resolves with `null`.\r\n         * - When 1 row is returned, it resolves with that row as a single object.\r\n         * - When multiple rows are returned, it rejects with {@link errors.QueryResultError QueryResultError}:\r\n         *   - `.message` = `Multiple rows were not expected.`\r\n         *   - `.code` = {@link errors.queryResultErrorCode.multiple queryResultErrorCode.multiple}\r\n         * - Resolves with the new value, if transformation callback `cb` was specified.\r\n         *\r\n         * @see\r\n         * {@link Database#one one},\r\n         * {@link Database#none none},\r\n         * {@link Database#manyOrNone manyOrNone}\r\n         *\r\n         * @example\r\n         *\r\n         * // a query with in-line value transformation:\r\n         * db.oneOrNone('SELECT id FROM Events WHERE type = $1', ['entry'], e => e && e.id)\r\n         *     .then(data => {\r\n         *         // data = the event id or null (rather than object or null)\r\n         *     });\r\n         *\r\n         */\r\n        obj.oneOrNone = function (query, values, cb, thisArg) {\r\n            const v = obj.query.call(this, query, values, queryResult.one | queryResult.none);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database#manyOrNone\r\n         * @description\r\n         * Executes a query that can return any number of rows.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise<Array>}\r\n         * A promise object that represents the query result:\r\n         * - When no rows are returned, it resolves with an empty array.\r\n         * - When 1 or more rows are returned, it resolves with the array of rows.\r\n         *\r\n         * @see\r\n         * {@link Database#any any},\r\n         * {@link Database#many many},\r\n         * {@link Database#none none}\r\n         *\r\n         */\r\n        obj.manyOrNone = function (query, values) {\r\n            return obj.query.call(this, query, values, queryResult.many | queryResult.none);\r\n        };\r\n\r\n        /**\r\n         * @method Database#any\r\n         * @description\r\n         * Executes a query that can return any number of rows.\r\n         * This is simply a shorter alias for method {@link Database#manyOrNone manyOrNone}.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise<Array>}\r\n         * A promise object that represents the query result:\r\n         * - When no rows are returned, it resolves with an empty array.\r\n         * - When 1 or more rows are returned, it resolves with the array of rows.\r\n         *\r\n         * @see\r\n         * {@link Database#manyOrNone manyOrNone},\r\n         * {@link Database#map map},\r\n         * {@link Database#each each}\r\n         *\r\n         */\r\n        obj.any = function (query, values) {\r\n            return obj.query.call(this, query, values, queryResult.any);\r\n        };\r\n\r\n        /**\r\n         * @method Database#result\r\n         * @description\r\n         * Executes a query without any expectation for the return data, and resolves with the\r\n         * original $[Result] object when successful.\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} [cb]\r\n         * Value-transformation callback, to allow in-line value change.\r\n         * When specified, the returned value replaces the original one.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {*} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object that represents the query result:\r\n         * - resolves with the original $[Result] object (by default);\r\n         * - resolves with the new value, if transformation callback `cb` was specified.\r\n         *\r\n         * @example\r\n         *\r\n         * // use of value transformation:\r\n         * // deleting rows and returning the number of rows deleted\r\n         * db.result('DELETE FROM Events WHERE id = $1', [123], r => r.rowCount)\r\n         *     .then(data => {\r\n         *         // data = number of rows that were deleted\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // use of value transformation:\r\n         * // getting only column details from a table\r\n         * db.result('SELECT * FROM Users LIMIT 0', null, r => r.fields)\r\n         *     .then(data => {\r\n         *         // data = array of column descriptors\r\n         *     });\r\n         *\r\n         */\r\n        obj.result = function (query, values, cb, thisArg) {\r\n            const v = obj.query.call(this, query, values, resultQuery);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database#multiResult\r\n         * @description\r\n         * Executes a multi-query string, without any expectation for the return data, and resolves with an array\r\n         * of the original $[Result] objects when successful.\r\n         *\r\n         * The operation is atomic, i.e. all queries are executed in a single transaction, unless there are explicit\r\n         * `BEGIN/COMMIT` commands included in the query string to divide it into multiple transactions.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Multi-query string to be executed, which can be any of the following types:\r\n         * - A non-empty string that can contain any number of queries\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise<external:Result[]>}\r\n         *\r\n         * @see {@link Database#multi multi}\r\n         *\r\n         */\r\n        obj.multiResult = function (query, values) {\r\n            return obj.query.call(this, query, values, multiResultQuery);\r\n        };\r\n\r\n        /**\r\n         * @method Database#multi\r\n         * @description\r\n         * Executes a multi-query string, without any expectation for the return data, and resolves with an array\r\n         * of arrays of rows when successful.\r\n         *\r\n         * The operation is atomic, i.e. all queries are executed in a single transaction, unless there are explicit\r\n         * `BEGIN/COMMIT` commands included in the query string to divide it into multiple transactions.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Multi-query string to be executed, which can be any of the following types:\r\n         * - A non-empty string that can contain any number of queries\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @returns {external:Promise<Array<Array>>}\r\n         *\r\n         * @see {@link Database#multiResult multiResult}\r\n         *\r\n         * @example\r\n         *\r\n         * // Get data from 2 tables in a single request:\r\n         * const [users, products] = await db.multi('SELECT * FROM users;SELECT * FROM products');\r\n         *\r\n         */\r\n        obj.multi = function (query, values) {\r\n            return obj.query.call(this, query, values, multiResultQuery)\r\n                .then(data => data.map(a => a.rows));\r\n        };\r\n\r\n        /**\r\n         * @method Database#stream\r\n         * @description\r\n         * Custom data streaming, with the help of $[pg-query-stream].\r\n         *\r\n         * This method doesn't work with the $[Native Bindings], and if option `pgNative`\r\n         * is set, it will reject with `Streaming doesn't work with Native Bindings.`\r\n         *\r\n         * @param {QueryStream} qs\r\n         * Stream object of type $[QueryStream].\r\n         *\r\n         * @param {Database.streamInitCB} initCB\r\n         * Stream initialization callback.\r\n         *\r\n         * It is invoked with the same `this` context as the calling method.\r\n         *\r\n         * @returns {external:Promise}\r\n         * Result of the streaming operation.\r\n         *\r\n         * Once the streaming has finished successfully, the method resolves with\r\n         * `{processed, duration}`:\r\n         * - `processed` - total number of rows processed;\r\n         * - `duration` - streaming duration, in milliseconds.\r\n         *\r\n         * Possible rejections messages:\r\n         * - `Invalid or missing stream object.`\r\n         * - `Invalid stream state.`\r\n         * - `Invalid or missing stream initialization callback.`\r\n         */\r\n        obj.stream = function (qs, init) {\r\n            return obj.query.call(this, qs, init, streamQuery);\r\n        };\r\n\r\n        /**\r\n         * @method Database#func\r\n         * @description\r\n         * Executes a database function that returns a table, abbreviating the full syntax\r\n         * of `query('SELECT * FROM $1:alias($2:csv)', [funcName, values], qrm)`.\r\n         *\r\n         * @param {string} funcName\r\n         * Name of the function to be executed.\r\n         * When it is not same-case, or contains extended symbols, it is double-quoted, as per the `:alias` filter,\r\n         * which also supports `.`, to auto-split into a composite name.\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Parameters for the function - one value | array of values | function returning value(s).\r\n         *\r\n         * @param {queryResult} [qrm=queryResult.any] - {@link queryResult Query Result Mask}.\r\n         *\r\n         * @returns {external:Promise}\r\n         *\r\n         * A promise object as returned from method {@link Database#query query}, according to parameter `qrm`.\r\n         *\r\n         * @see\r\n         * {@link Database#query query},\r\n         * {@link Database#proc proc}\r\n         */\r\n        obj.func = function (funcName, values, qrm) {\r\n            return obj.query.call(this, {entity: funcName, type: `func`}, values, qrm);\r\n        };\r\n\r\n        /**\r\n         * @method Database#proc\r\n         * @description\r\n         * Executes a stored procedure by name, abbreviating the full syntax of\r\n         * `oneOrNone('CALL $1:alias($2:csv)', [procName, values], cb, thisArg)`.\r\n         *\r\n         * **NOTE:** This method uses the new `CALL` syntax that requires PostgreSQL v11 or later.\r\n         *\r\n         * @param {string} procName\r\n         * Name of the stored procedure to be executed.\r\n         * When it is not same-case, or contains extended symbols, it is double-quoted, as per the `:alias` filter,\r\n         * which also supports `.`, to auto-split into a composite SQL name.\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Parameters for the procedure - one value | array of values | function returning value(s).\r\n         *\r\n         * @param {function} [cb]\r\n         * Value-transformation callback, to allow in-line value change.\r\n         * When specified, the returned value replaces the original one.\r\n         *\r\n         * The function takes only one parameter - value resolved from the query.\r\n         *\r\n         * @param {*} [thisArg]\r\n         * Value to use as `this` when executing the transformation callback.\r\n         *\r\n         * @returns {external:Promise}\r\n         * When the procedure takes output parameters, a single object is returned, with\r\n         * properties for the output values. Otherwise, the method resolves with `null`.\r\n         * And if the value-transformation callback is provided, it overrides the result.\r\n         *\r\n         * @see\r\n         * {@link Database#func func}\r\n         */\r\n        obj.proc = function (procName, values, cb, thisArg) {\r\n            const v = obj.query.call(this, {\r\n                entity: procName,\r\n                type: `proc`\r\n            }, values, queryResult.one | queryResult.none);\r\n            return transform(v, cb, thisArg);\r\n        };\r\n\r\n        /**\r\n         * @method Database#map\r\n         * @description\r\n         * Creates a new array with the results of calling a provided function on every element in the array of rows\r\n         * resolved by method {@link Database#any any}.\r\n         *\r\n         * It is a convenience method, to reduce the following code:\r\n         *\r\n         * ```js\r\n         * db.any(query, values)\r\n         *     .then(data => {\r\n         *         return data.map((row, index, data) => {\r\n         *              // return a new element\r\n         *         });\r\n         *     });\r\n         * ```\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} values\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} cb\r\n         * Function that produces an element of the new array, taking three arguments:\r\n         * - `row` - the current row object being processed in the array\r\n         * - `index` - the index of the current row being processed in the array\r\n         * - `data` - the original array of rows resolved by method {@link Database#any any}\r\n         *\r\n         * @param {*} [thisArg]\r\n         * Value to use as `this` when executing the callback.\r\n         *\r\n         * @returns {external:Promise<Array>}\r\n         * Resolves with the new array of values returned from the callback.\r\n         *\r\n         * @see\r\n         * {@link Database#any any},\r\n         * {@link Database#each each},\r\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map Array.map}\r\n         *\r\n         * @example\r\n         *\r\n         * db.map('SELECT id FROM Users WHERE status = $1', ['active'], row => row.id)\r\n         *     .then(data => {\r\n         *         // data = array of active user id-s\r\n         *     })\r\n         *     .catch(error => {\r\n         *        // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * db.tx(t => {\r\n         *     return t.map('SELECT id FROM Users WHERE status = $1', ['active'], row => {\r\n         *        return t.none('UPDATE Events SET checked = $1 WHERE userId = $2', [true, row.id]);\r\n         *     }).then(t.batch);\r\n         * })\r\n         *     .then(data => {\r\n         *         // success\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // Build a list of active users, each with the list of user events:\r\n         * db.task(t => {\r\n         *     return t.map('SELECT id FROM Users WHERE status = $1', ['active'], user => {\r\n         *         return t.any('SELECT * FROM Events WHERE userId = $1', user.id)\r\n         *             .then(events=> {\r\n         *                 user.events = events;\r\n         *                 return user;\r\n         *             });\r\n         *     }).then(t.batch);\r\n         * })\r\n         *     .then(data => {\r\n         *         // success\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.map = function (query, values, cb, thisArg) {\r\n            return obj.any.call(this, query, values)\r\n                .then(data => data.map(cb, thisArg));\r\n        };\r\n\r\n        /**\r\n         * @method Database#each\r\n         * @description\r\n         * Executes a provided function once per array element, for an array of rows resolved by method {@link Database#any any}.\r\n         *\r\n         * It is a convenience method to reduce the following code:\r\n         *\r\n         * ```js\r\n         * db.any(query, values)\r\n         *     .then(data => {\r\n         *         data.forEach((row, index, data) => {\r\n         *              // process the row\r\n         *         });\r\n         *         return data;\r\n         *     });\r\n         * ```\r\n         *\r\n         * When receiving a multi-query result, only the last result is processed, ignoring the rest.\r\n         *\r\n         * @param {string|function|object} query\r\n         * Query to be executed, which can be any of the following types:\r\n         * - A non-empty query string\r\n         * - A function that returns a query string or another function, i.e. recursive resolution\r\n         *   is supported, passing in `values` as `this`, and as the first parameter.\r\n         * - Prepared Statement `{name, text, values, ...}` or {@link PreparedStatement} object\r\n         * - Parameterized Query `{text, values, ...}` or {@link ParameterizedQuery} object\r\n         * - {@link QueryFile} object\r\n         *\r\n         * @param {array|value|function} [values]\r\n         * Query formatting parameter(s), or a function that returns it.\r\n         *\r\n         * When `query` is of type `string` or a {@link QueryFile} object, the `values` can be:\r\n         * - a single value - to replace all `$1` occurrences\r\n         * - an array of values - to replace all `$1`, `$2`, ... variables\r\n         * - an object - to apply $[Named Parameters] formatting\r\n         *\r\n         * When `query` is a Prepared Statement or a Parameterized Query (or their class types),\r\n         * and `values` is not `null` or `undefined`, it is automatically set within such object,\r\n         * as an override for its internal `values`.\r\n         *\r\n         * @param {function} cb\r\n         * Function to execute for each row, taking three arguments:\r\n         * - `row` - the current row object being processed in the array\r\n         * - `index` - the index of the current row being processed in the array\r\n         * - `data` - the array of rows resolved by method {@link Database#any any}\r\n         *\r\n         * @param {*} [thisArg]\r\n         * Value to use as `this` when executing the callback.\r\n         *\r\n         * @returns {external:Promise<Array<Object>>}\r\n         * Resolves with the original array of rows.\r\n         *\r\n         * @see\r\n         * {@link Database#any any},\r\n         * {@link Database#map map},\r\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach Array.forEach}\r\n         *\r\n         * @example\r\n         *\r\n         * db.each('SELECT id, code, name FROM Events', [], row => {\r\n         *     row.code = parseInt(row.code);\r\n         * })\r\n         *     .then(data => {\r\n         *         // data = array of events, with 'code' converted into integer\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.each = function (query, values, cb, thisArg) {\r\n            return obj.any.call(this, query, values)\r\n                .then(data => {\r\n                    data.forEach(cb, thisArg);\r\n                    return data;\r\n                });\r\n        };\r\n\r\n        /**\r\n         * @method Database#task\r\n         * @description\r\n         * Executes a callback function with automatically managed connection.\r\n         *\r\n         * When invoked on the root {@link Database} object, the method allocates the connection from the pool,\r\n         * executes the callback, and once finished - releases the connection back to the pool.\r\n         * However, when invoked inside another task or transaction, the method reuses the parent connection.\r\n         *\r\n         * This method should be used whenever executing more than one query at once, so the allocated connection\r\n         * is reused between all queries, and released only after the task has finished (see $[Chaining Queries]).\r\n         *\r\n         * The callback function is called with one parameter - database protocol (same as `this`), extended with methods\r\n         * {@link Task#batch batch}, {@link Task#page page}, {@link Task#sequence sequence}, plus property {@link Task#ctx ctx} -\r\n         * the task context object. See class {@link Task} for more details.\r\n         *\r\n         * @param {string|number|Object} [options]\r\n         * This parameter is optional, and presumed skipped when the first parameter is a function (`cb` parameter).\r\n         *\r\n         * When it is of type `string` or `number`, it is assumed to be option `tag` passed in directly. Otherwise,\r\n         * it is expected to be an object with options as listed below.\r\n         *\r\n         * @param {} [options.tag]\r\n         * Traceable context for the task (see $[tags]).\r\n         *\r\n         * @param {function} cb\r\n         * Task callback function, to return the result that will determine either success or failure for the operation.\r\n         *\r\n         * The function can be either the first of the second parameter passed into the method.\r\n         *\r\n         * It also can be an ES7 `async` function.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object with the result from the callback function.\r\n         *\r\n         * @see\r\n         * {@link Task},\r\n         * {@link Database#taskIf taskIf},\r\n         * {@link Database#tx tx},\r\n         * $[tags],\r\n         * $[Chaining Queries]\r\n         *\r\n         * @example\r\n         *\r\n         * db.task('my-task', t => {\r\n         *         // t.ctx = task context object\r\n         *\r\n         *         return t.one('SELECT id FROM Users WHERE name = $1', 'John')\r\n         *             .then(user => {\r\n         *                 return t.any('SELECT * FROM Events WHERE userId = $1', user.id);\r\n         *             });\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the task's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // using an ES7 syntax for the callback:\r\n         * db.task('my-task', async t {\r\n         *         // t.ctx = task context object\r\n         *\r\n         *         const user = await t.one('SELECT id FROM Users WHERE name = $1', 'John');\r\n         *         return t.any('SELECT * FROM Events WHERE userId = $1', user.id);\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the task's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.task = function () {\r\n            const args = npm.pubUtils.taskArgs(arguments);\r\n            assertOptions(args.options, [`tag`]);\r\n            return taskProcessor.call(this, args, false);\r\n        };\r\n\r\n        /**\r\n         * @method Database#taskIf\r\n         * @description\r\n         * Executes a conditional task that results in an actual new {@link Database#task task}, if either condition is met or\r\n         * when it is necessary (on the top level), or else it reuses the current connection context.\r\n         *\r\n         * The default condition is `not in task or transaction`, to start a task only if currently not inside another task or transaction,\r\n         * which is the same as calling the following:\r\n         *\r\n         * ```js\r\n         * db.taskIf({cnd: t => !t.ctx}, cb => {})\r\n         * ```\r\n         *\r\n         * It can be useful, if you want to simplify/reduce the task + log events footprint, by creating new tasks only when necessary.\r\n         *\r\n         * @param {string|number|Object} [options]\r\n         * This parameter is optional, and presumed skipped when the first parameter is a function (`cb` parameter).\r\n         *\r\n         * When it is of type `string` or `number`, it is assumed to be option `tag` passed in directly. Otherwise,\r\n         * it is expected to be an object with options as listed below.\r\n         *\r\n         * @param {} [options.tag]\r\n         * Traceable context for the task/transaction (see $[tags]).\r\n         *\r\n         * @param {boolean|function} [options.cnd]\r\n         * Condition for creating a ({@link Database#task task}), if it is met.\r\n         * It can be either a simple boolean, or a callback function that takes the task context as `this` and as the first parameter.\r\n         *\r\n         * Default condition (when it is not specified):\r\n         *\r\n         * ```js\r\n         * {cnd: t => !t.ctx}\r\n         * ```\r\n         *\r\n         * @param {function} cb\r\n         * Task callback function, to return the result that will determine either success or failure for the operation.\r\n         *\r\n         * The function can be either the first or the second parameter passed into the method.\r\n         *\r\n         * It also can be an ES7 `async` function.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object with the result from the callback function.\r\n         *\r\n         * @see\r\n         * {@link Task},\r\n         * {@link Database#task Database.task},\r\n         * {@link Database#tx Database.tx},\r\n         * {@link Database#txIf Database.txIf},\r\n         * {@link TaskContext}\r\n         *\r\n         */\r\n        obj.taskIf = function () {\r\n            const args = npm.pubUtils.taskArgs(arguments);\r\n            assertOptions(args.options, [`tag`, `cnd`]);\r\n            try {\r\n                let cnd = args.options.cnd;\r\n                if (`cnd` in args.options) {\r\n                    cnd = typeof cnd === `function` ? cnd.call(obj, obj) : !!cnd;\r\n                } else {\r\n                    cnd = !obj.ctx; // create task, if it is the top level\r\n                }\r\n                // reusable only if condition fails, and not top-level:\r\n                args.options.reusable = !cnd && !!obj.ctx;\r\n            } catch (e) {\r\n                return $p.reject(e);\r\n            }\r\n            return taskProcessor.call(this, args, false);\r\n        };\r\n\r\n        /**\r\n         * @method Database#tx\r\n         * @description\r\n         * Executes a callback function as a transaction, with automatically managed connection.\r\n         *\r\n         * When invoked on the root {@link Database} object, the method allocates the connection from the pool,\r\n         * executes the callback, and once finished - releases the connection back to the pool.\r\n         * However, when invoked inside another task or transaction, the method reuses the parent connection.\r\n         *\r\n         * A transaction wraps a regular {@link Database#task task} into additional queries:\r\n         * - it executes `BEGIN` just before invoking the callback function\r\n         * - it executes `COMMIT`, if the callback didn't throw any error or return a rejected promise\r\n         * - it executes `ROLLBACK`, if the callback did throw an error or return a rejected promise\r\n         * - it executes corresponding `SAVEPOINT` commands when the method is called recursively.\r\n         *\r\n         * The callback function is called with one parameter - database protocol (same as `this`), extended with methods\r\n         * {@link Task#batch batch}, {@link Task#page page}, {@link Task#sequence sequence}, plus property {@link Task#ctx ctx} -\r\n         * the transaction context object. See class {@link Task} for more details.\r\n         *\r\n         * Note that transactions should be chosen over tasks only where necessary, because unlike regular tasks,\r\n         * transactions are blocking operations.\r\n         *\r\n         * @param {string|number|Object} [options]\r\n         * This parameter is optional, and presumed skipped when the first parameter is a function (`cb` parameter).\r\n         *\r\n         * When it is of type `string` or `number`, it is assumed to be option `tag` passed in directly. Otherwise,\r\n         * it is expected to be an object with options as listed below.\r\n         *\r\n         * @param {} [options.tag]\r\n         * Traceable context for the transaction (see $[tags]).\r\n         *\r\n         * @param {txMode.TransactionMode} [options.mode]\r\n         * Transaction Configuration Mode - extends the transaction-opening command with additional configuration.\r\n         *\r\n         * @param {function} cb\r\n         * Transaction callback function, to return the result that will determine either success or failure for the operation.\r\n         *\r\n         * The function can be either the first of the second parameter passed into the method.\r\n         *\r\n         * It also can be an ES7 `async` function.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object with the result from the callback function.\r\n         *\r\n         * @see\r\n         * {@link Task},\r\n         * {@link Database#task Database.task},\r\n         * {@link Database#taskIf Database.taskIf},\r\n         * {@link TaskContext},\r\n         * $[tags],\r\n         * $[Chaining Queries]\r\n         *\r\n         * @example\r\n         *\r\n         * db.tx('my-transaction', t => {\r\n         *         // t.ctx = transaction context object\r\n         *\r\n         *         return t.one('INSERT INTO Users(name, age) VALUES($1, $2) RETURNING id', ['Mike', 25])\r\n         *             .then(user => {\r\n         *                 return t.batch([\r\n         *                     t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'created']),\r\n         *                     t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'login'])\r\n         *                 ]);\r\n         *             });\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the transaction's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         * @example\r\n         *\r\n         * // using an ES7 syntax for the callback:\r\n         * db.tx('my-transaction', async t {\r\n         *         // t.ctx = transaction context object\r\n         *\r\n         *         const user = await t.one('INSERT INTO Users(name, age) VALUES($1, $2) RETURNING id', ['Mike', 25]);\r\n         *         return t.none('INSERT INTO Events(userId, name) VALUES($1, $2)', [user.id, 'created']);\r\n         *     })\r\n         *     .then(data => {\r\n         *         // success\r\n         *         // data = as returned from the transaction's callback\r\n         *     })\r\n         *     .catch(error => {\r\n         *         // error\r\n         *     });\r\n         *\r\n         */\r\n        obj.tx = function () {\r\n            const args = npm.pubUtils.taskArgs(arguments);\r\n            assertOptions(args.options, [`tag`, `mode`]);\r\n            return taskProcessor.call(this, args, true);\r\n        };\r\n\r\n        /**\r\n         * @method Database#txIf\r\n         * @description\r\n         * Executes a conditional transaction that results in an actual transaction ({@link Database#tx tx}), if the condition is met,\r\n         * or else it executes a regular {@link Database#task task}.\r\n         *\r\n         * The default condition is `not in transaction`, to start a transaction only if currently not in transaction,\r\n         * or else start a task, which is the same as calling the following:\r\n         *\r\n         * ```js\r\n         * db.txIf({cnd: t => !t.ctx || !t.ctx.inTransaction}, cb => {})\r\n         * ```\r\n         *\r\n         * It is useful when you want to avoid $[Nested Transactions] - savepoints.\r\n         *\r\n         * @param {string|number|Object} [options]\r\n         * This parameter is optional, and presumed skipped when the first parameter is a function (`cb` parameter).\r\n         *\r\n         * When it is of type `string` or `number`, it is assumed to be option `tag` passed in directly. Otherwise,\r\n         * it is expected to be an object with options as listed below.\r\n         *\r\n         * @param {} [options.tag]\r\n         * Traceable context for the task/transaction (see $[tags]).\r\n         *\r\n         * @param {txMode.TransactionMode} [options.mode]\r\n         * Transaction Configuration Mode - extends the transaction-opening command with additional configuration.\r\n         *\r\n         * @param {boolean|function} [options.cnd]\r\n         * Condition for opening a transaction ({@link Database#tx tx}), if it is met, or a {@link Database#task task} when the condition is not met.\r\n         * It can be either a simple boolean, or a callback function that takes the task/tx context as `this` and as the first parameter.\r\n         *\r\n         * Default condition (when it is not specified):\r\n         *\r\n         * ```js\r\n         * {cnd: t => !t.ctx || !t.ctx.inTransaction}\r\n         * ```\r\n         *\r\n         * @param {boolean|function} [options.reusable=false]\r\n         * When `cnd` is/returns false, reuse context of the current task/transaction, if one exists.\r\n         * It can be either a simple boolean, or a callback function that takes the task/tx context as `this`\r\n         * and as the first parameter.\r\n         *\r\n         * By default, when `cnd` is/returns false, the method creates a new task. This option tells\r\n         * the method to reuse the current task/transaction context, and not create a new task.\r\n         *\r\n         * This option is ignored when executing against the top level of the protocol, because on\r\n         * that level, if no transaction is suddenly needed, a new task becomes necessary.\r\n         *\r\n         * @param {function} cb\r\n         * Transaction/task callback function, to return the result that will determine either\r\n         * success or failure for the operation.\r\n         *\r\n         * The function can be either the first or the second parameter passed into the method.\r\n         *\r\n         * It also can be an ES7 `async` function.\r\n         *\r\n         * @returns {external:Promise}\r\n         * A promise object with the result from the callback function.\r\n         *\r\n         * @see\r\n         * {@link Task},\r\n         * {@link Database#task Database.task},\r\n         * {@link Database#taskIf Database.taskIf},\r\n         * {@link Database#tx Database.tx},\r\n         * {@link TaskContext}\r\n         *\r\n         */\r\n        obj.txIf = function () {\r\n            const args = npm.pubUtils.taskArgs(arguments);\r\n            assertOptions(args.options, [`tag`, `mode`, `cnd`, `reusable`]);\r\n            try {\r\n                let cnd;\r\n                if (`cnd` in args.options) {\r\n                    cnd = args.options.cnd;\r\n                    cnd = typeof cnd === `function` ? cnd.call(obj, obj) : !!cnd;\r\n                } else {\r\n                    cnd = !obj.ctx || !obj.ctx.inTransaction;\r\n                }\r\n                args.options.cnd = cnd;\r\n                const reusable = args.options.reusable;\r\n                args.options.reusable = !cnd && obj.ctx && typeof reusable === `function` ? reusable.call(obj, obj) : !!reusable;\r\n            } catch (e) {\r\n                return $p.reject(e);\r\n            }\r\n            return taskProcessor.call(this, args, args.options.cnd);\r\n        };\r\n\r\n        // Task method;\r\n        // Resolves with result from the callback function;\r\n        function taskProcessor(params, isTX) {\r\n\r\n            if (typeof params.cb !== `function`) {\r\n                return $p.reject(new TypeError(`Callback function is required.`));\r\n            }\r\n\r\n            if (params.options.reusable) {\r\n                return config.$npm.task.callback(obj.ctx, obj, params.cb, config);\r\n            }\r\n\r\n            const taskCtx = ctx.clone(); // task context object;\r\n            if (isTX) {\r\n                taskCtx.txLevel = taskCtx.txLevel >= 0 ? (taskCtx.txLevel + 1) : 0;\r\n            }\r\n            taskCtx.inTransaction = taskCtx.txLevel >= 0;\r\n            taskCtx.level = taskCtx.level >= 0 ? (taskCtx.level + 1) : 0;\r\n            taskCtx.cb = params.cb; // callback function;\r\n            taskCtx.mode = params.options.mode; // transaction mode;\r\n            if (this !== obj) {\r\n                taskCtx.context = this; // calling context object;\r\n            }\r\n\r\n            const tsk = new config.$npm.task.Task(taskCtx, params.options.tag, isTX, config);\r\n            taskCtx.taskCtx = tsk.ctx;\r\n            extend(taskCtx, tsk);\r\n\r\n            if (taskCtx.db) {\r\n                // reuse existing connection;\r\n                npm.utils.addReadProp(tsk.ctx, `useCount`, taskCtx.db.useCount);\r\n                addServerVersion(tsk.ctx, taskCtx.db.client);\r\n                return config.$npm.task.execute(taskCtx, tsk, isTX, config);\r\n            }\r\n\r\n            // connection required;\r\n            return config.$npm.connect.pool(taskCtx, dbThis)\r\n                .then(db => {\r\n                    taskCtx.connect(db);\r\n                    npm.utils.addReadProp(tsk.ctx, `useCount`, db.useCount);\r\n                    addServerVersion(tsk.ctx, db.client);\r\n                    return config.$npm.task.execute(taskCtx, tsk, isTX, config);\r\n                })\r\n                .then(data => {\r\n                    taskCtx.disconnect();\r\n                    return data;\r\n                })\r\n                .catch(error => {\r\n                    taskCtx.disconnect();\r\n                    return $p.reject(error);\r\n                });\r\n        }\r\n\r\n        function addServerVersion(target, client) {\r\n            // Exclude else-case from coverage, because it can only occur with Native Bindings.\r\n            // istanbul ignore else\r\n            if (client.serverVersion) {\r\n                npm.utils.addReadProp(target, `serverVersion`, client.serverVersion);\r\n            }\r\n        }\r\n\r\n        // lock all default properties to read-only,\r\n        // to prevent override by the client.\r\n        npm.utils.lock(obj, false, ctx.options);\r\n\r\n        // extend the protocol;\r\n        Events.extend(ctx.options, obj, ctx.dc);\r\n\r\n        // freeze the protocol permanently;\r\n        npm.utils.lock(obj, true, ctx.options);\r\n    }\r\n\r\n}\r\n\r\n// this event only happens when the connection is lost physically,\r\n// which cannot be tested automatically; removing from coverage:\r\n// istanbul ignore next\r\nfunction onError(err) {\r\n    // this client was never seen by pg-promise, which\r\n    // can happen if it failed to initialize\r\n    if (!err.client.$ctx) {\r\n        return;\r\n    }\r\n    const ctx = err.client.$ctx;\r\n    Events.error(ctx.options, err, {\r\n        cn: npm.utils.getSafeConnection(ctx.cn),\r\n        dc: ctx.dc\r\n    });\r\n}\r\n\r\nmodule.exports = config => {\r\n    const npmLocal = config.$npm;\r\n    npmLocal.connect = npmLocal.connect || npm.connect(config);\r\n    npmLocal.query = npmLocal.query || npm.query(config);\r\n    npmLocal.task = npmLocal.task || npm.task(config);\r\n    return Database;\r\n};\r\n\r\n/**\r\n * @callback Database.streamInitCB\r\n * @description\r\n * Stream initialization callback, used by {@link Database#stream Database.stream}.\r\n *\r\n * @param {external:Stream} stream\r\n * Stream object to initialize streaming.\r\n *\r\n * @example\r\n * const QueryStream = require('pg-query-stream');\r\n * const JSONStream = require('JSONStream');\r\n *\r\n * // you can also use pgp.as.format(query, values, options)\r\n * // to format queries properly, via pg-promise;\r\n * const qs = new QueryStream('SELECT * FROM users');\r\n *\r\n * db.stream(qs, stream => {\r\n *         // initiate streaming into the console:\r\n *         stream.pipe(JSONStream.stringify()).pipe(process.stdout);\r\n *     })\r\n *     .then(data => {\r\n *         console.log('Total rows processed:', data.processed,\r\n *           'Duration in milliseconds:', data.duration);\r\n *     })\r\n *     .catch(error => {\r\n *         // error;\r\n *     });\r\n */\r\n\r\n/**\r\n * @external Stream\r\n * @see https://nodejs.org/api/stream.html\r\n */\r\n\r\n/**\r\n * @external pg-pool\r\n * @alias pg-pool\r\n * @see https://github.com/brianc/node-pg-pool\r\n */\r\n\r\n/**\r\n * @external Result\r\n * @see https://node-postgres.com/api/result\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {QueryResultError, queryResultErrorCode} = require(`./query-result-error`);\r\nconst {PreparedStatementError} = require(`./prepared-statement-error`);\r\nconst {ParameterizedQueryError} = require(`./parameterized-query-error`);\r\nconst {QueryFileError} = require(`./query-file-error`);\r\n\r\n/**\r\n * @namespace errors\r\n * @description\r\n * Error types namespace, available as `pgp.errors`, before and after initializing the library.\r\n *\r\n * @property {function} PreparedStatementError\r\n * {@link errors.PreparedStatementError PreparedStatementError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link PreparedStatement}.\r\n *\r\n * @property {function} ParameterizedQueryError\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link ParameterizedQuery}.\r\n *\r\n * @property {function} QueryFileError\r\n * {@link errors.QueryFileError QueryFileError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link QueryFile}.\r\n *\r\n * @property {function} QueryResultError\r\n * {@link errors.QueryResultError QueryResultError} class constructor.\r\n *\r\n * Represents all result-specific errors from query methods.\r\n *\r\n * @property {errors.queryResultErrorCode} queryResultErrorCode\r\n * Error codes `enum` used by class {@link errors.QueryResultError QueryResultError}.\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    QueryResultError,\r\n    queryResultErrorCode,\r\n    PreparedStatementError,\r\n    ParameterizedQueryError,\r\n    QueryFileError\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {QueryFileError} = require(`./query-file-error`);\r\n\r\nconst npm = {\r\n    os: require(`os`),\r\n    utils: require(`../utils`)\r\n};\r\n\r\n/**\r\n * @class errors.ParameterizedQueryError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError} class, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors that can be reported by class {@link ParameterizedQuery}, whether it is used\r\n * explicitly or implicitly (via a simple `{text, values}` object).\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `ParameterizedQueryError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {errors.QueryFileError} error\r\n * Internal {@link errors.QueryFileError} object.\r\n *\r\n * It is set only when the source {@link ParameterizedQuery} used a {@link QueryFile} which threw the error.\r\n *\r\n * @property {object} result\r\n * Resulting Parameterized Query object.\r\n *\r\n * @see ParameterizedQuery\r\n */\r\nclass ParameterizedQueryError extends Error {\r\n    constructor(error, pq) {\r\n        const isQueryFileError = error instanceof QueryFileError;\r\n        const message = isQueryFileError ? `Failed to initialize 'text' from a QueryFile.` : error;\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n        if (isQueryFileError) {\r\n            this.error = error;\r\n        }\r\n        this.result = pq;\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\n/**\r\n * @method errors.ParameterizedQueryError#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nParameterizedQueryError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        gap2 = npm.utils.messageGap(level + 2),\r\n        lines = [\r\n            `ParameterizedQueryError {`,\r\n            gap1 + `message: \"` + this.message + `\"`,\r\n            gap1 + `result: {`,\r\n            gap2 + `text: ` + npm.utils.toJson(this.result.text),\r\n            gap2 + `values: ` + npm.utils.toJson(this.result.values),\r\n            gap1 + `}`\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + `error: ` + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(ParameterizedQueryError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {ParameterizedQueryError};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {QueryFileError} = require(`./query-file-error`);\r\n\r\nconst npm = {\r\n    os: require(`os`),\r\n    utils: require(`../utils`)\r\n};\r\n\r\n/**\r\n * @class errors.PreparedStatementError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.PreparedStatementError PreparedStatementError} class, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors that can be reported by class {@link PreparedStatement}, whether it is used\r\n * explicitly or implicitly (via a simple `{name, text, values}` object).\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `PreparedStatementError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {errors.QueryFileError} error\r\n * Internal {@link errors.QueryFileError} object.\r\n *\r\n * It is set only when the source {@link PreparedStatement} used a {@link QueryFile} which threw the error.\r\n *\r\n * @property {object} result\r\n * Resulting Prepared Statement object.\r\n *\r\n * @see PreparedStatement\r\n */\r\nclass PreparedStatementError extends Error {\r\n    constructor(error, ps) {\r\n        const isQueryFileError = error instanceof QueryFileError;\r\n        const message = isQueryFileError ? `Failed to initialize 'text' from a QueryFile.` : error;\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n        if (isQueryFileError) {\r\n            this.error = error;\r\n        }\r\n        this.result = ps;\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\n/**\r\n * @method errors.PreparedStatementError#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPreparedStatementError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        gap2 = npm.utils.messageGap(level + 2),\r\n        lines = [\r\n            `PreparedStatementError {`,\r\n            gap1 + `message: \"` + this.message + `\"`,\r\n            gap1 + `result: {`,\r\n            gap2 + `name: ` + npm.utils.toJson(this.result.name),\r\n            gap2 + `text: ` + npm.utils.toJson(this.result.text),\r\n            gap2 + `values: ` + npm.utils.toJson(this.result.values),\r\n            gap1 + `}`\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + `error: ` + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(PreparedStatementError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {PreparedStatementError};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst npm = {\r\n    os: require(`os`),\r\n    utils: require(`../utils`),\r\n    minify: require(`pg-minify`)\r\n};\r\n\r\n/**\r\n * @class errors.QueryFileError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.QueryFileError QueryFileError} class, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors related to {@link QueryFile}.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `QueryFileError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {string} file\r\n * File path/name that was passed into the {@link QueryFile} constructor.\r\n *\r\n * @property {object} options\r\n * Set of options that was used by the {@link QueryFile} object.\r\n *\r\n * @property {SQLParsingError} error\r\n * Internal $[SQLParsingError] object.\r\n *\r\n * It is set only when the error was thrown by $[pg-minify] while parsing the SQL file.\r\n *\r\n * @see QueryFile\r\n *\r\n */\r\nclass QueryFileError extends Error {\r\n    constructor(error, qf) {\r\n        const isSqlError = error instanceof npm.minify.SQLParsingError;\r\n        const message = isSqlError ? `Failed to parse the SQL.` : error.message;\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n        if (isSqlError) {\r\n            this.error = error;\r\n        }\r\n        this.file = qf.file;\r\n        this.options = qf.options;\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\n/**\r\n * @method errors.QueryFileError#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryFileError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            `QueryFileError {`,\r\n            gap1 + `message: \"` + this.message + `\"`,\r\n            gap1 + `options: ` + npm.utils.toJson(this.options),\r\n            gap1 + `file: \"` + this.file + `\"`\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + `error: ` + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(QueryFileError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {QueryFileError};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst npm = {\r\n    os: require(`os`),\r\n    utils: require(`../utils`),\r\n    text: require(`../text`)\r\n};\r\n\r\n/**\r\n * @enum {number}\r\n * @alias errors.queryResultErrorCode\r\n * @readonly\r\n * @description\r\n * `queryResultErrorCode` enumerator, available from the {@link errors} namespace.\r\n *\r\n * Represents an integer code for each type of error supported by type {@link errors.QueryResultError}.\r\n *\r\n * @see {@link errors.QueryResultError}\r\n */\r\nconst queryResultErrorCode = {\r\n    /** No data returned from the query. */\r\n    noData: 0,\r\n\r\n    /** No return data was expected. */\r\n    notEmpty: 1,\r\n\r\n    /** Multiple rows were not expected. */\r\n    multiple: 2\r\n};\r\n\r\nconst errorMessages = [\r\n    {name: `noData`, message: npm.text.noData},\r\n    {name: `notEmpty`, message: npm.text.notEmpty},\r\n    {name: `multiple`, message: npm.text.multiple}\r\n];\r\n\r\n/**\r\n * @class errors.QueryResultError\r\n * @augments external:Error\r\n * @description\r\n *\r\n * This error is specified as the rejection reason for all result-specific methods when the result doesn't match\r\n * the expectation, i.e. when a query result doesn't match its Query Result Mask - the value of {@link queryResult}.\r\n *\r\n * The error applies to the result from the following methods: {@link Database#none none},\r\n * {@link Database#one one}, {@link Database#oneOrNone oneOrNone} and {@link Database#many many}.\r\n *\r\n * Supported errors:\r\n *\r\n * - `No return data was expected.`, method {@link Database#none none}\r\n * - `No data returned from the query.`, methods {@link Database#one one} and {@link Database#many many}\r\n * - `Multiple rows were not expected.`, methods {@link Database#one one} and {@link Database#oneOrNone oneOrNone}\r\n *\r\n * Like any other error, this one is notified with through the global event {@link event:error error}.\r\n *\r\n * The type is available from the {@link errors} namespace.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `QueryResultError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {object} result\r\n * The original $[Result] object that was received.\r\n *\r\n * @property {number} received\r\n * Total number of rows received. It is simply the value of `result.rows.length`.\r\n *\r\n * @property {number} code\r\n * Error code - {@link errors.queryResultErrorCode queryResultErrorCode} value.\r\n *\r\n * @property {string} query\r\n * Query that was executed.\r\n *\r\n * Normally, it is the query already formatted with values, if there were any.\r\n * But if you are using initialization option `pgFormatting`, then the query string is before formatting.\r\n *\r\n * @property {*} values\r\n * Values passed in as query parameters. Available only when initialization option `pgFormatting` is used.\r\n * Otherwise, the values are within the pre-formatted `query` string.\r\n *\r\n * @example\r\n *\r\n * const QueryResultError = pgp.errors.QueryResultError;\r\n * const qrec = pgp.errors.queryResultErrorCode;\r\n *\r\n * const initOptions = {\r\n *\r\n *   // pg-promise initialization options...\r\n *\r\n *   error: (err, e) => {\r\n *       if (err instanceof QueryResultError) {\r\n *           // A query returned unexpected number of records, and thus rejected;\r\n *           \r\n *           // we can check the error code, if we want specifics:\r\n *           if(err.code === qrec.noData) {\r\n *               // expected some data, but received none;\r\n *           }\r\n *\r\n *           // If you write QueryResultError into the console,\r\n *           // you will get a nicely formatted output.\r\n *\r\n *           console.log(err);\r\n *           \r\n *           // See also: err, e.query, e.params, etc.\r\n *       }\r\n *   }\r\n * };\r\n *\r\n * @see\r\n * {@link queryResult}, {@link Database#none none}, {@link Database#one one},\r\n * {@link Database#oneOrNone oneOrNone}, {@link Database#many many}\r\n *\r\n */\r\nclass QueryResultError extends Error {\r\n    constructor(code, result, query, values) {\r\n        const message = errorMessages[code].message;\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n        this.code = code;\r\n        this.result = result;\r\n        this.query = query;\r\n        this.values = values;\r\n        this.received = result.rows.length;\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\n/**\r\n * @method errors.QueryResultError#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryResultError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            `QueryResultError {`,\r\n            gap1 + `code: queryResultErrorCode.` + errorMessages[this.code].name,\r\n            gap1 + `message: \"` + this.message + `\"`,\r\n            gap1 + `received: ` + this.received,\r\n            gap1 + `query: ` + (typeof this.query === `string` ? `\"` + this.query + `\"` : npm.utils.toJson(this.query))\r\n        ];\r\n    if (this.values !== undefined) {\r\n        lines.push(gap1 + `values: ` + npm.utils.toJson(this.values));\r\n    }\r\n    lines.push(gap0 + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(QueryResultError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {\r\n    QueryResultError,\r\n    queryResultErrorCode\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ColorConsole} = require(`./utils/color`);\r\n\r\nconst npm = {\r\n    main: require(`./`),\r\n    utils: require(`./utils`)\r\n};\r\n\r\n/////////////////////////////////\r\n// Client notification helpers;\r\nclass Events {\r\n\r\n    /**\r\n     * @event connect\r\n     * @description\r\n     * Global notification of acquiring a new database connection from the connection pool, i.e. a virtual connection.\r\n     *\r\n     * However, for direct calls to method {@link Database#connect Database.connect} with parameter `{direct: true}`,\r\n     * this event represents a physical connection.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {external:Client} client\r\n     * $[pg.Client] object that represents the connection.\r\n     *\r\n     * @param {*} dc\r\n     * Database Context that was used when creating the database object (see {@link Database}).\r\n     *\r\n     * @param {number} useCount\r\n     * Number of times the connection has been previously used, starting with 0 for a freshly\r\n     * allocated physical connection.\r\n     *\r\n     * This parameter is always 0 for direct connections (created by calling {@link Database#connect Database.connect}\r\n     * with parameter `{direct: true}`).\r\n     *\r\n     * @example\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     connect(client, dc, useCount) {\r\n     *         const cp = client.connectionParameters;\r\n     *         console.log('Connected to database:', cp.database);\r\n     *     }\r\n     *\r\n     * };\r\n     */\r\n    static connect(ctx, client, useCount) {\r\n        if (typeof ctx.options.connect === `function`) {\r\n            try {\r\n                ctx.options.connect(client, ctx.dc, useCount);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // cannot allow unhandled errors while connecting to the database,\r\n                // as it will break the connection logic;\r\n                Events.unexpected(`connect`, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event disconnect\r\n     * @description\r\n     * Global notification of releasing a database connection back to the connection pool, i.e. releasing the virtual connection.\r\n     *\r\n     * However, when releasing a direct connection (created by calling {@link Database#connect Database.connect} with parameter\r\n     * `{direct: true}`), this event represents a physical disconnection.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {external:Client} client - $[pg.Client] object that represents connection with the database.\r\n     *\r\n     * @param {*} dc - Database Context that was used when creating the database object (see {@link Database}).\r\n     *\r\n     * @example\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     disconnect(client, dc) {\r\n     *        const cp = client.connectionParameters;\r\n     *        console.log('Disconnecting from database:', cp.database);\r\n     *     }\r\n     *\r\n     * };\r\n     */\r\n    static disconnect(ctx, client) {\r\n        if (typeof ctx.options.disconnect === `function`) {\r\n            try {\r\n                ctx.options.disconnect(client, ctx.dc);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // cannot allow unhandled errors while disconnecting from the database,\r\n                // as it will break the disconnection logic;\r\n                Events.unexpected(`disconnect`, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event query\r\n     * @description\r\n     *\r\n     * Global notification of a query that's about to execute.\r\n     *\r\n     * Notification happens just before the query execution. And if the handler throws an error, the query execution\r\n     * will be rejected with that error.\r\n     *\r\n     * @param {EventContext} e\r\n     * Event Context Object.\r\n     *\r\n     * @example\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     query(e) {\r\n     *         console.log('QUERY:', e.query);\r\n     *     }\r\n     * };\r\n     */\r\n    static query(options, context) {\r\n        if (typeof options.query === `function`) {\r\n            try {\r\n                options.query(context);\r\n            } catch (e) {\r\n                // throwing an error during event 'query'\r\n                // will result in a reject for the request.\r\n                return e instanceof Error ? e : new npm.utils.InternalError(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event receive\r\n     * @description\r\n     * Global notification of any data received from the database, coming from a regular query or from a stream.\r\n     *\r\n     * The event is fired before the data reaches the client, and it serves two purposes:\r\n     *  - Providing selective data logging for debugging;\r\n     *  - Pre-processing data before it reaches the client.\r\n     *\r\n     * **NOTES:**\r\n     * - If you alter the size of `data` directly or through the `result` object, it may affect `QueryResultMask`\r\n     *   validation for regular queries, which is executed right after.\r\n     * - Any data pre-processing needs to be fast here, to avoid performance penalties.\r\n     * - If the event handler throws an error, the original request will be rejected with that error.\r\n     *\r\n     * For methods {@link Database#multi Database.multi} and {@link Database#multiResult Database.multiResult},\r\n     * this event is called for every result that's returned. And for method {@link Database#stream Database.stream},\r\n     * the event occurs for every record.\r\n     *\r\n     * @param {Array<Object>} data\r\n     * Array of received objects/rows.\r\n     *\r\n     * If any of those objects are modified during notification, the client will receive the modified data.\r\n     *\r\n     * @param {external:Result} result\r\n     * - Original $[Result] object, if the data is from a non-stream query, in which case `data = result.rows`.\r\n     *   For single-query requests, $[Result] object is extended with property `duration` - number of milliseconds\r\n     *   it took to send the query, execute it and get the result back.\r\n     * - It is `undefined` when the data comes from a stream (method {@link Database#stream Database.stream}).\r\n     *\r\n     * @param {EventContext} e\r\n     * Event Context Object.\r\n     *\r\n     * @example\r\n     *\r\n     * // Example below shows the fastest way to camelize all column names.\r\n     * // NOTE: The example does not do processing for nested JSON objects.\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     receive(data, result, e) {\r\n     *         camelizeColumns(data);\r\n     *     }\r\n     * };\r\n     *\r\n     * function camelizeColumns(data) {\r\n     *     const tmp = data[0];\r\n     *     for (const prop in tmp) {\r\n     *         const camel = pgp.utils.camelize(prop);\r\n     *         if (!(camel in tmp)) {\r\n     *             for (let i = 0; i < data.length; i++) {\r\n     *                 const d = data[i];\r\n     *                 d[camel] = d[prop];\r\n     *                 delete d[prop];\r\n     *             }\r\n     *         }\r\n     *     }\r\n     * }\r\n     */\r\n    static receive(options, data, result, context) {\r\n        if (typeof options.receive === `function`) {\r\n            try {\r\n                options.receive(data, result, context);\r\n            } catch (e) {\r\n                // throwing an error during event 'receive'\r\n                // will result in a reject for the request.\r\n                return e instanceof Error ? e : new npm.utils.InternalError(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event task\r\n     * @description\r\n     * Global notification of a task start / finish events, as executed via\r\n     * {@link Database#task Database.task} or {@link Database#taskIf Database.taskIf}.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {EventContext} e\r\n     * Event Context Object.\r\n     *\r\n     * @example\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     task(e) {\r\n     *         if (e.ctx.finish) {\r\n     *             // this is a task->finish event;\r\n     *             console.log('Duration:', e.ctx.duration);\r\n     *             if (e.ctx.success) {\r\n     *                 // e.ctx.result = resolved data;\r\n     *             } else {\r\n     *                 // e.ctx.result = error/rejection reason;\r\n     *             }\r\n     *         } else {\r\n     *             // this is a task->start event;\r\n     *             console.log('Start Time:', e.ctx.start);\r\n     *         }\r\n     *     }\r\n     * };\r\n     *\r\n     */\r\n    static task(options, context) {\r\n        if (typeof options.task === `function`) {\r\n            try {\r\n                options.task(context);\r\n            } catch (e) {\r\n                // silencing the error, to avoid breaking the task;\r\n                Events.unexpected(`task`, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event transact\r\n     * @description\r\n     * Global notification of a transaction start / finish events, as executed via {@link Database#tx Database.tx}\r\n     * or {@link Database#txIf Database.txIf}.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {EventContext} e\r\n     * Event Context Object.\r\n     *\r\n     * @example\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     transact(e) {\r\n     *         if (e.ctx.finish) {\r\n     *             // this is a transaction->finish event;\r\n     *             console.log('Duration:', e.ctx.duration);\r\n     *             if (e.ctx.success) {\r\n     *                 // e.ctx.result = resolved data;\r\n     *             } else {\r\n     *                 // e.ctx.result = error/rejection reason;\r\n     *             }\r\n     *         } else {\r\n     *             // this is a transaction->start event;\r\n     *             console.log('Start Time:', e.ctx.start);\r\n     *         }\r\n     *     }\r\n     * };\r\n     *\r\n     */\r\n    static transact(options, context) {\r\n        if (typeof options.transact === `function`) {\r\n            try {\r\n                options.transact(context);\r\n            } catch (e) {\r\n                // silencing the error, to avoid breaking the transaction;\r\n                Events.unexpected(`transact`, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event error\r\n     * @description\r\n     * Global notification of every error encountered by this library.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {*} err\r\n     * The error encountered, of the same value and type as it was reported.\r\n     *\r\n     * @param {EventContext} e\r\n     * Event Context Object.\r\n     *\r\n     * @example\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     error(err, e) {\r\n     *\r\n     *         if (e.cn) {\r\n     *             // this is a connection-related error\r\n     *             // cn = safe connection details passed into the library:\r\n     *             //      if password is present, it is masked by #\r\n     *         }\r\n     *\r\n     *         if (e.query) {\r\n     *             // query string is available\r\n     *             if (e.params) {\r\n     *                 // query parameters are available\r\n     *             }\r\n     *         }\r\n     *\r\n     *         if (e.ctx) {\r\n     *             // occurred inside a task or transaction\r\n     *         }\r\n     *       }\r\n     * };\r\n     *\r\n     */\r\n    static error(options, err, context) {\r\n        if (typeof options.error === `function`) {\r\n            try {\r\n                options.error(err, context);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // throwing unhandled errors while handling an error\r\n                // notification is simply not acceptable.\r\n                Events.unexpected(`error`, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event extend\r\n     * @description\r\n     * Extends {@link Database} protocol with custom methods and properties.\r\n     *\r\n     * Override this event to extend the existing access layer with your own functions and\r\n     * properties best suited for your application.\r\n     *\r\n     * The extension thus becomes available across all access layers:\r\n     *\r\n     * - Within the root/default database protocol;\r\n     * - Inside transactions, including nested ones;\r\n     * - Inside tasks, including nested ones.\r\n     *\r\n     * All pre-defined methods and properties are read-only, so you will get an error,\r\n     * if you try overriding them.\r\n     *\r\n     * The library will suppress any error thrown by the handler and write it into the console.\r\n     *\r\n     * @param {object} obj - Protocol object to be extended.\r\n     *\r\n     * @param {*} dc - Database Context that was used when creating the {@link Database} object.\r\n     *\r\n     * @see $[pg-promise-demo]\r\n     *\r\n     * @example\r\n     *\r\n     * // In the example below we extend the protocol with function `addImage`\r\n     * // that will insert one binary image and resolve with the new record id.\r\n     *\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     extend(obj, dc) {\r\n     *         // dc = database context;\r\n     *         obj.addImage = data => {\r\n     *             // adds a new image and resolves with its record id:\r\n     *             return obj.one('INSERT INTO images(data) VALUES($1) RETURNING id', data, a => a.id);\r\n     *         }\r\n     *     }\r\n     * };\r\n     *\r\n     * @example\r\n     *\r\n     * // It is best to extend the protocol by adding whole entity repositories to it as shown in the following example.\r\n     * // For a comprehensive example see https://github.com/vitaly-t/pg-promise-demo\r\n     *\r\n     * class UsersRepository {\r\n     *     constructor(rep, pgp) {\r\n     *         this.rep = rep;\r\n     *         this.pgp = pgp;\r\n     *     }\r\n     *\r\n     *     add(name) {\r\n     *         return this.rep.one('INSERT INTO users(name) VALUES($1) RETURNING id', name, a => a.id);\r\n     *     }\r\n     *\r\n     *     remove(id) {\r\n     *         return this.rep.none('DELETE FROM users WHERE id = $1', id);\r\n     *     }\r\n     * }\r\n     *\r\n     * // Overriding 'extend' event;\r\n     * const initOptions = {\r\n     *\r\n     *     // pg-promise initialization options...\r\n     *\r\n     *     extend(obj, dc) {\r\n     *         // dc = database context;\r\n     *         obj.users = new UsersRepository(obj, pgp);\r\n     *         // You can set different repositories based on `dc`\r\n     *     }\r\n     * };\r\n     *\r\n     * // Usage example:\r\n     * db.users.add('John', true)\r\n     *     .then(id => {\r\n     *         // user added successfully, id = new user's id\r\n     *     })\r\n     *     .catch(error => {\r\n     *         // failed to add the user;\r\n     *     });\r\n     *\r\n     */\r\n    static extend(options, obj, dc) {\r\n        if (typeof options.extend === `function`) {\r\n            try {\r\n                options.extend.call(obj, obj, dc);\r\n            } catch (e) {\r\n                // have to silence errors here;\r\n                // the result of throwing unhandled errors while\r\n                // extending the protocol would be unpredictable.\r\n                Events.unexpected(`extend`, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @event unexpected\r\n     * @param {string} event - unhandled event name.\r\n     * @param {string|Error} e - unhandled error.\r\n     * @private\r\n     */\r\n    static unexpected(event, e) {\r\n        // If you should ever get here, your app is definitely broken, and you need to fix\r\n        // your event handler to prevent unhandled errors during event notifications.\r\n        //\r\n        // Console output is suppressed when running tests, to avoid polluting test output\r\n        // with error messages that are intentional and of no value to the test.\r\n\r\n        /* istanbul ignore if */\r\n        if (!npm.main.suppressErrors) {\r\n            const stack = e instanceof Error ? e.stack : new Error().stack;\r\n            ColorConsole.error(`Unexpected error in '${event}' event handler.\\n${stack}\\n`);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {Events};\r\n\r\n/**\r\n * @typedef EventContext\r\n * @description\r\n * This common type is used for the following events: {@link event:query query}, {@link event:receive receive},\r\n * {@link event:error error}, {@link event:task task} and {@link event:transact transact}.\r\n *\r\n * @property {string|object} cn\r\n *\r\n * Set only for event {@link event:error error}, and only when the error is connection-related.\r\n *\r\n * It is a safe copy of the connection string/object that was used when initializing `db` - the database instance.\r\n *\r\n * If the original connection contains a password, the safe copy contains it masked with symbol `#`, so the connection\r\n * can be logged safely, without exposing the password.\r\n *\r\n * @property {*} dc\r\n * Database Context that was used when creating the database object (see {@link Database}). It is set for all events.\r\n *\r\n * @property {string|object} query\r\n *\r\n * Query string/object that was passed into the query method. This property is only set during events {@link event:query query},\r\n * {@link event:receive receive} and {@link event:error error} (only when the error is query-related).\r\n *\r\n * @property {external:Client} client\r\n *\r\n * $[pg.Client] object that represents the connection. It is set for all events, except for event {@link event:error error}\r\n * when it is connection-related. Note that sometimes the value may be unset when the connection is lost.\r\n *\r\n * @property {*} params - Formatting parameters for the query.\r\n *\r\n * It is set only for events {@link event:query query}, {@link event:receive receive} and {@link event:error error}, and only\r\n * when it is needed for logging. This library takes an extra step in figuring out when formatting parameters are of any value\r\n * to the event logging:\r\n * - when an error occurs related to the query formatting, event {@link event:error error} is sent with the property set.\r\n * - when initialization parameter `pgFormat` is used, and all query formatting is done within the $[PG] library, events\r\n * {@link event:query query} and {@link event:receive receive} will have this property set also, since this library no longer\r\n * handles the query formatting.\r\n *\r\n * When this parameter is not set, it means one of the two things:\r\n * - there were no parameters passed into the query method;\r\n * - property `query` of this object already contains all the formatting values in it, so logging only the query is sufficient.\r\n *\r\n * @property {TaskContext} ctx\r\n * _Task/Transaction Context_ object.\r\n *\r\n * This property is always set for events {@link event:task task} and {@link event:transact transact}, while for events\r\n * {@link event:query query}, {@link event:receive receive} and {@link event:error error} it is only set when they occur\r\n * inside a task or transaction.\r\n *\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    pgUtils: require(`pg/lib/utils`),\r\n    patterns: require(`./patterns`),\r\n    utils: require(`./utils`)\r\n};\r\n\r\n// Format Modification Flags;\r\nconst fmFlags = {\r\n    raw: 1, // Raw-Text variable\r\n    alias: 2, // SQL Alias\r\n    name: 4, // SQL Name/Identifier\r\n    json: 8, // JSON modifier\r\n    csv: 16, // CSV modifier\r\n    value: 32 // escaped, but without ''\r\n};\r\n\r\n// Format Modification Map;\r\nconst fmMap = {\r\n    '^': fmFlags.raw,\r\n    ':raw': fmFlags.raw,\r\n    ':alias': fmFlags.alias,\r\n    '~': fmFlags.name,\r\n    ':name': fmFlags.name,\r\n    ':json': fmFlags.json,\r\n    ':csv': fmFlags.csv,\r\n    ':list': fmFlags.csv,\r\n    ':value': fmFlags.value,\r\n    '#': fmFlags.value\r\n};\r\n\r\n// Global symbols for Custom Type Formatting:\r\nconst ctfSymbols = {\r\n    toPostgres: Symbol.for(`ctf.toPostgres`),\r\n    rawType: Symbol.for(`ctf.rawType`)\r\n};\r\n\r\nconst maxVariable = 100000; // maximum supported variable is '$100000'\r\n\r\n////////////////////////////////////////////////////\r\n// Converts a single value into its Postgres format.\r\nfunction formatValue({value, fm, cc, options}) {\r\n\r\n    if (typeof value === `function`) {\r\n        return formatValue({value: resolveFunc(value, cc), fm, cc});\r\n    }\r\n\r\n    const ctf = getCTF(value); // Custom Type Formatting\r\n    if (ctf) {\r\n        fm |= ctf.rawType ? fmFlags.raw : 0;\r\n        return formatValue({value: resolveFunc(ctf.toPostgres, value), fm, cc});\r\n    }\r\n\r\n    const isRaw = !!(fm & fmFlags.raw);\r\n    fm &= ~fmFlags.raw;\r\n\r\n    switch (fm) {\r\n        case fmFlags.alias:\r\n            return $as.alias(value);\r\n        case fmFlags.name:\r\n            return $as.name(value);\r\n        case fmFlags.json:\r\n            return $as.json(value, isRaw);\r\n        case fmFlags.csv:\r\n            return $to.csv(value, options);\r\n        case fmFlags.value:\r\n            return $as.value(value);\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (isNull(value)) {\r\n        throwIfRaw(isRaw);\r\n        return `null`;\r\n    }\r\n\r\n    switch (typeof value) {\r\n        case `string`:\r\n            return $to.text(value, isRaw);\r\n        case `boolean`:\r\n            return $to.bool(value);\r\n        case `number`:\r\n        case `bigint`:\r\n            return $to.number(value);\r\n        case `symbol`:\r\n            throw new TypeError(`Type Symbol has no meaning for PostgreSQL: ${value.toString()}`);\r\n        default:\r\n            if (value instanceof Date) {\r\n                return $to.date(value, isRaw);\r\n            }\r\n            if (value instanceof Array) {\r\n                return $to.array(value, options);\r\n            }\r\n            if (value instanceof Buffer) {\r\n                return $to.buffer(value, isRaw);\r\n            }\r\n            return $to.json(value, isRaw);\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Converts array of values into PostgreSQL Array Constructor: array[...], as per PostgreSQL documentation:\r\n// http://www.postgresql.org/docs/9.6/static/arrays.html\r\n//\r\n// Arrays of any depth/dimension are supported.\r\n//\r\n// Top-level empty arrays are formatted as literal '{}' to avoid the necessity of explicit type casting,\r\n// as the server cannot automatically infer type of an empty non-literal array.\r\nfunction formatArray(array, options) {\r\n    const loop = a => `[` + a.map(value => value instanceof Array ? loop(value) : formatValue({\r\n        value,\r\n        options\r\n    })).join() + `]`;\r\n    const prefix = options && options.capSQL ? `ARRAY` : `array`;\r\n    return array.length ? (prefix + loop(array)) : `'{}'`;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////\r\n// Formats array/object/value as a list of comma-separated values.\r\nfunction formatCSV(values, options) {\r\n    if (values instanceof Array) {\r\n        return values.map(value => formatValue({value, options})).join();\r\n    }\r\n    if (typeof values === `object` && values !== null) {\r\n        return Object.keys(values).map(v => formatValue({value: values[v], options})).join();\r\n    }\r\n    return values === undefined ? `` : formatValue({value: values, options});\r\n}\r\n\r\n///////////////////////////////\r\n// Query formatting helpers;\r\nconst formatAs = {\r\n\r\n    object({query, obj, raw, options}) {\r\n        options = options && typeof options === `object` ? options : {};\r\n        return query.replace(npm.patterns.namedParameters, name => {\r\n            const v = formatAs.stripName(name.replace(/^\\$[{(<[/]|[\\s})>\\]/]/g, ``), raw),\r\n                c = npm.utils.getIfHas(obj, v.name);\r\n            if (!c.valid) {\r\n                throw new Error(`Invalid property name '${v.name}'.`);\r\n            }\r\n            if (c.has) {\r\n                return formatValue({value: c.value, fm: v.fm, cc: c.target, options});\r\n            }\r\n            if (v.name === `this`) {\r\n                return formatValue({value: obj, fm: v.fm, options});\r\n            }\r\n            if (`def` in options) {\r\n                const d = options.def, value = typeof d === `function` ? d.call(obj, v.name, obj) : d;\r\n                return formatValue({value, fm: v.fm, cc: obj, options});\r\n            }\r\n            if (options.partial) {\r\n                return name;\r\n            }\r\n            // property must exist as the object's own or inherited;\r\n            throw new Error(`Property '${v.name}' doesn't exist.`);\r\n        });\r\n    },\r\n\r\n    array({query, array, raw, options}) {\r\n        options = options && typeof options === `object` ? options : {};\r\n        return query.replace(npm.patterns.multipleValues, name => {\r\n            const v = formatAs.stripName(name.substr(1), raw);\r\n            const idx = v.name - 1;\r\n            if (idx >= maxVariable) {\r\n                throw new RangeError(`Variable $${v.name} exceeds supported maximum of $${maxVariable}`);\r\n            }\r\n            if (idx < array.length) {\r\n                return formatValue({value: array[idx], fm: v.fm, options});\r\n            }\r\n            if (`def` in options) {\r\n                const d = options.def, value = typeof d === `function` ? d.call(array, idx, array) : d;\r\n                return formatValue({value, fm: v.fm, options});\r\n            }\r\n            if (options.partial) {\r\n                return name;\r\n            }\r\n            throw new RangeError(`Variable $${v.name} out of range. Parameters array length: ${array.length}`);\r\n        });\r\n    },\r\n\r\n    value({query, value, raw, options}) {\r\n        return query.replace(npm.patterns.singleValue, name => {\r\n            const v = formatAs.stripName(name, raw);\r\n            return formatValue({value, fm: v.fm, options});\r\n        });\r\n    },\r\n\r\n    stripName(name, raw) {\r\n        const mod = name.match(npm.patterns.hasValidModifier);\r\n        if (mod) {\r\n            return {\r\n                name: name.substr(0, mod.index),\r\n                fm: fmMap[mod[0]] | (raw ? fmFlags.raw : 0)\r\n            };\r\n        }\r\n        return {\r\n            name,\r\n            fm: raw ? fmFlags.raw : null\r\n        };\r\n    }\r\n};\r\n\r\n////////////////////////////////////////////\r\n// Simpler check for null/undefined;\r\nfunction isNull(value) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////\r\n// Checks if the value supports Custom Type Formatting,\r\n// to return {toPostgres, rawType}, if it does, or null otherwise.\r\nfunction getCTF(value) {\r\n    if (!isNull(value)) {\r\n        let toPostgres = value[ctfSymbols.toPostgres], rawType = !!value[ctfSymbols.rawType];\r\n        if (typeof toPostgres !== `function`) {\r\n            toPostgres = value.toPostgres;\r\n            rawType = !!value.rawType;\r\n        }\r\n        if (typeof toPostgres === `function`) {\r\n            if (toPostgres.constructor.name !== `Function`) {\r\n                throw new Error(`CTF does not support asynchronous toPostgres functions.`);\r\n            }\r\n            return {toPostgres, rawType};\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/////////////////////////////////////////\r\n// Wraps a text string in single quotes;\r\nfunction wrapText(text) {\r\n    return `'${text}'`;\r\n}\r\n\r\n////////////////////////////////////////////////\r\n// Replaces each single-quote symbol ' with two,\r\n// for compliance with PostgreSQL strings.\r\nfunction safeText(text) {\r\n    return text.replace(/'/g, `''`);\r\n}\r\n\r\n/////////////////////////////////////////////\r\n// Throws an exception, if flag 'raw' is set.\r\nfunction throwIfRaw(raw) {\r\n    if (raw) {\r\n        throw new TypeError(`Values null/undefined cannot be used as raw text.`);\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\n// Recursively resolves parameter-function, with an optional Calling Context.\r\nfunction resolveFunc(value, cc) {\r\n    while (typeof value === `function`) {\r\n        if (value.constructor.name !== `Function`) {\r\n            // Constructor name for asynchronous functions have different names:\r\n            // - 'GeneratorFunction' for ES6 generators\r\n            // - 'AsyncFunction' for ES7 async functions\r\n            throw new Error(`Cannot use asynchronous functions with query formatting.`);\r\n        }\r\n        value = value.call(cc, cc);\r\n    }\r\n    return value;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// It implements two types of formatting, depending on the 'values' passed:\r\n//\r\n// 1. format '$1, $2, etc', when 'values' is of type string, boolean, number, date,\r\n//    function or null (or an array of the same types, plus undefined values);\r\n// 2. format $*propName*, when 'values' is an object (not null and not Date),\r\n//    and where * is any of the supported open-close pairs: {}, (), [], <>, //\r\n//\r\nfunction formatQuery(query, values, raw, options) {\r\n    if (typeof query !== `string`) {\r\n        throw new TypeError(`Parameter 'query' must be a text string.`);\r\n    }\r\n    const ctf = getCTF(values);\r\n    if (ctf) {\r\n        // Custom Type Formatting\r\n        return formatQuery(query, resolveFunc(ctf.toPostgres, values), raw || ctf.rawType, options);\r\n    }\r\n    if (typeof values === `object` && values !== null) {\r\n        if (values instanceof Array) {\r\n            // $1, $2,... formatting to be applied;\r\n            return formatAs.array({query, array: values, raw, options});\r\n        }\r\n        if (!(values instanceof Date || values instanceof Buffer)) {\r\n            // $*propName* formatting to be applied;\r\n            return formatAs.object({query, obj: values, raw, options});\r\n        }\r\n    }\r\n    // $1 formatting to be applied, if values != undefined;\r\n    return values === undefined ? query : formatAs.value({query, value: values, raw, options});\r\n}\r\n\r\n//////////////////////////////////////////////////////\r\n// Formats a function or stored procedure call query;\r\nfunction formatEntity(entity, values, {capSQL, type}) {\r\n    let prefix = type === `func` ? `select * from` : `call`;\r\n    if (capSQL) {\r\n        prefix = prefix.toUpperCase();\r\n    }\r\n    return `${prefix} ${$as.alias(entity)}(${formatCSV(values, {capSQL})})`;\r\n}\r\n\r\nfunction formatSqlName(name) {\r\n    return `\"${name.replace(/\"/g, `\"\"`)}\"`;\r\n}\r\n\r\n/**\r\n * @namespace formatting\r\n * @description\r\n * Namespace for all query-formatting functions, available from `pgp.as` before and after initializing the library.\r\n *\r\n * @property {formatting.ctf} ctf\r\n * Namespace for symbols used by $[Custom Type Formatting].\r\n *\r\n * @property {function} alias\r\n * {@link formatting.alias alias} - formats an SQL alias.\r\n *\r\n * @property {function} name\r\n * {@link formatting.name name} - formats an SQL Name/Identifier.\r\n *\r\n * @property {function} text\r\n * {@link formatting.text text} - formats a text string.\r\n *\r\n * @property {function} number\r\n * {@link formatting.number number} - formats a number.\r\n *\r\n * @property {function} buffer\r\n * {@link formatting.buffer buffer} - formats a `Buffer` object.\r\n *\r\n * @property {function} value\r\n * {@link formatting.value value} - formats text as an open value.\r\n *\r\n * @property {function} json\r\n * {@link formatting.json json} - formats any value as JSON.\r\n *\r\n * @property {function} array\r\n * {@link formatting.array array} - formats an array of any depth.\r\n *\r\n * @property {function} csv\r\n * {@link formatting.csv csv} - formats an array as a list of comma-separated values.\r\n *\r\n * @property {function} func\r\n * {@link formatting.func func} - formats the value returned from a function.\r\n *\r\n * @property {function} format\r\n * {@link formatting.format format} - formats a query, according to parameters.\r\n *\r\n */\r\nconst $as = {\r\n\r\n    /**\r\n     * @namespace formatting.ctf\r\n     * @description\r\n     * Namespace for ES6 symbols used by $[Custom Type Formatting], available from `pgp.as.ctf` before and after initializing the library.\r\n     *\r\n     * It was added to avoid explicit/enumerable extension of types that need to be used as formatting parameters, to keep their type signature intact.\r\n     *\r\n     * @property {external:Symbol} toPostgres\r\n     * Property name for the $[Custom Type Formatting] callback function `toPostgres`.\r\n     *\r\n     * @property {external:Symbol} rawType\r\n     * Property name for the $[Custom Type Formatting] flag `rawType`.\r\n     *\r\n     * @example\r\n     * const ctf = pgp.as.ctf; // Custom Type Formatting symbols\r\n     *\r\n     * class MyType {\r\n     *     constructor() {\r\n     *         this[ctf.rawType] = true; // set it only when toPostgres returns a pre-formatted result\r\n     *     }\r\n     *\r\n     *     [ctf.toPostgres](self) {\r\n     *         // self = this\r\n     *\r\n     *         // return the custom/actual value here\r\n     *     }\r\n     * }\r\n     *\r\n     * const a = new MyType();\r\n     *\r\n     * const s = pgp.as.format('$1', a); // will be custom-formatted\r\n     */\r\n    ctf: ctfSymbols,\r\n\r\n    /**\r\n     * @method formatting.text\r\n     * @description\r\n     * Converts a value into PostgreSQL text presentation, escaped as required.\r\n     *\r\n     * Escaping the result means:\r\n     *  1. Every single-quote (apostrophe) is replaced with two\r\n     *  2. The resulting text is wrapped in apostrophes\r\n     *\r\n     * @param {value|function} value\r\n     * Value to be converted, or a function that returns the value.\r\n     *\r\n     * If the `value` resolves as `null` or `undefined`, while `raw`=`true`,\r\n     * it will throw {@link external:TypeError TypeError} = `Values null/undefined cannot be used as raw text.`\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the resulting text.\r\n     *\r\n     * @returns {string}\r\n     *\r\n     * - `null` string, if the `value` resolves as `null` or `undefined`\r\n     * - escaped result of `value.toString()`, if the `value` isn't a string\r\n     * - escaped string version, if `value` is a string.\r\n     *\r\n     *  The result is not escaped, if `raw` was passed in as `true`.\r\n     */\r\n    text(value, raw) {\r\n        value = resolveFunc(value);\r\n        if (isNull(value)) {\r\n            throwIfRaw(raw);\r\n            return `null`;\r\n        }\r\n        if (typeof value !== `string`) {\r\n            value = value.toString();\r\n        }\r\n        return $to.text(value, raw);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.name\r\n     * @description\r\n     * Properly escapes an sql name or identifier, fixing double-quote symbols and wrapping the result in double quotes.\r\n     *\r\n     * Implements a safe way to format $[SQL Names] that neutralizes SQL Injection.\r\n     *\r\n     * When formatting a query, a variable makes use of this method via modifier `:name` or `~`. See method {@link formatting.format format}.\r\n     *\r\n     * @param {string|function|array|object} name\r\n     * SQL name or identifier, or a function that returns it.\r\n     *\r\n     * The name must be at least 1 character long.\r\n     *\r\n     * If `name` doesn't resolve into a non-empty string, it throws {@link external:TypeError TypeError} = `Invalid sql name: ...`\r\n     *\r\n     * If the `name` contains only a single `*` (trailing spaces are ignored), then `name` is returned exactly as is (unescaped).\r\n     *\r\n     * - If `name` is an Array, it is formatted as a comma-separated list of $[SQL Names]\r\n     * - If `name` is a non-Array object, its keys are formatted as a comma-separated list of $[SQL Names]\r\n     *\r\n     * Passing in an empty array/object will throw {@link external:Error Error} = `Cannot retrieve sql names from an empty array/object.`\r\n     *\r\n     * @returns {string}\r\n     * The SQL Name/Identifier, properly escaped for compliance with the PostgreSQL standard for $[SQL Names] and identifiers.\r\n     *\r\n     * @see\r\n     * {@link formatting.alias alias},\r\n     * {@link formatting.format format}\r\n     *\r\n     * @example\r\n     *\r\n     * // automatically list object properties as sql names:\r\n     * format('INSERT INTO table(${this~}) VALUES(${one}, ${two})', {\r\n     *     one: 1,\r\n     *     two: 2\r\n     * });\r\n     * //=> INSERT INTO table(\"one\",\"two\") VALUES(1, 2)\r\n     *\r\n     */\r\n    name(name) {\r\n        name = resolveFunc(name);\r\n        if (name) {\r\n            if (typeof name === `string`) {\r\n                return /^\\s*\\*(\\s*)$/.test(name) ? name : formatSqlName(name);\r\n            }\r\n            if (typeof name === `object`) {\r\n                const keys = Array.isArray(name) ? name : Object.keys(name);\r\n                if (!keys.length) {\r\n                    throw new Error(`Cannot retrieve sql names from an empty array/object.`);\r\n                }\r\n                return keys.map(value => {\r\n                    if (!value || typeof value !== `string`) {\r\n                        throw new Error(`Invalid sql name: ${npm.utils.toJson(value)}`);\r\n                    }\r\n                    return formatSqlName(value);\r\n                }).join();\r\n            }\r\n        }\r\n        throw new TypeError(`Invalid sql name: ${npm.utils.toJson(name)}`);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.alias\r\n     * @description\r\n     * Simpler (non-verbose) version of method {@link formatting.name name}, to handle only a regular string-identifier\r\n     * that's mostly used as an SQL alias, i.e. it doesn't support `*` or an array/object of names, which in the context of\r\n     * an SQL alias would be incorrect. However, it supports `.` as name-separator, for simpler escaping of composite names.\r\n     *\r\n     * The surrounding double quotes are not added when the alias uses a simple syntax:\r\n     *  - it is a same-case single word, without spaces\r\n     *  - it can contain underscores, and can even start with them\r\n     *  - it can contain digits and `$`, but cannot start with those\r\n     *\r\n     * The method will automatically split the string with `.`, to support composite SQL names.\r\n     *\r\n     * When formatting a query, a variable makes use of this method via modifier `:alias`. See method {@link formatting.format format}.\r\n     *\r\n     * @param {string|function} name\r\n     * SQL alias name, or a function that returns it.\r\n     *\r\n     * The name must be at least 1 character long. And it can contain `.`, to split into multiple SQL names.\r\n     *\r\n     * If `name` doesn't resolve into a non-empty string, it throws {@link external:TypeError TypeError} = `Invalid sql alias: ...`\r\n     *\r\n     * @returns {string}\r\n     * The SQL alias, properly escaped for compliance with the PostgreSQL standard for $[SQL Names] and identifiers.\r\n     *\r\n     * @see\r\n     * {@link formatting.name name},\r\n     * {@link formatting.format format}\r\n     *\r\n     */\r\n    alias(name) {\r\n        name = resolveFunc(name);\r\n        if (name && typeof name === `string`) {\r\n            return name.split(`.`)\r\n                .filter(f => f)\r\n                .map(a => {\r\n                    const m = a.match(/^([a-z_][a-z0-9_$]*|[A-Z_][A-Z0-9_$]*)$/);\r\n                    if (m && m[0] === a) {\r\n                        return a;\r\n                    }\r\n                    return `\"${a.replace(/\"/g, `\"\"`)}\"`;\r\n                }).join(`.`);\r\n        }\r\n        throw new TypeError(`Invalid sql alias: ${npm.utils.toJson(name)}`);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.value\r\n     * @description\r\n     * Represents an open value, one to be formatted according to its type, properly escaped, but without surrounding quotes for text types.\r\n     *\r\n     * When formatting a query, a variable makes use of this method via modifier `:value` or `#`. See method {@link formatting.format format}.\r\n     *\r\n     * @param {value|function} value\r\n     * Value to be converted, or a function that returns the value.\r\n     *\r\n     * If `value` resolves as `null` or `undefined`, it will throw {@link external:TypeError TypeError} = `Open values cannot be null or undefined.`\r\n     *\r\n     * @returns {string}\r\n     * Formatted and properly escaped string, but without surrounding quotes for text types.\r\n     *\r\n     * @see {@link formatting.format format}\r\n     *\r\n     */\r\n    value(value) {\r\n        value = resolveFunc(value);\r\n        if (isNull(value)) {\r\n            throw new TypeError(`Open values cannot be null or undefined.`);\r\n        }\r\n        return safeText(formatValue({value, fm: fmFlags.raw}));\r\n    },\r\n\r\n    /**\r\n     * @method formatting.buffer\r\n     * @description\r\n     * Converts an object of type `Buffer` into a hex string compatible with PostgreSQL type `bytea`.\r\n     *\r\n     * @param {Buffer|function} obj\r\n     * Object to be converted, or a function that returns one.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to wrap the resulting string in quotes.\r\n     *\r\n     * The generated hex string doesn't need to be escaped.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    buffer(obj, raw) {\r\n        obj = resolveFunc(obj);\r\n        if (isNull(obj)) {\r\n            throwIfRaw(raw);\r\n            return `null`;\r\n        }\r\n        if (obj instanceof Buffer) {\r\n            return $to.buffer(obj, raw);\r\n        }\r\n        throw new TypeError(`${wrapText(obj)} is not a Buffer object.`);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.bool\r\n     * @description\r\n     * Converts a truthy value into PostgreSQL boolean presentation.\r\n     *\r\n     * @param {boolean|function} value\r\n     * Value to be converted, or a function that returns the value.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    bool(value) {\r\n        value = resolveFunc(value);\r\n        if (isNull(value)) {\r\n            return `null`;\r\n        }\r\n        return $to.bool(value);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.date\r\n     * @description\r\n     * Converts a `Date`-type value into PostgreSQL date/time presentation,\r\n     * wrapped in quotes (unless flag `raw` is set).\r\n     *\r\n     * @param {Date|function} d\r\n     * Date object to be converted, or a function that returns one.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the value.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    date(d, raw) {\r\n        d = resolveFunc(d);\r\n        if (isNull(d)) {\r\n            throwIfRaw(raw);\r\n            return `null`;\r\n        }\r\n        if (d instanceof Date) {\r\n            return $to.date(d, raw);\r\n        }\r\n        throw new TypeError(`${wrapText(d)} is not a Date object.`);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.number\r\n     * @description\r\n     * Converts a numeric value into its PostgreSQL number presentation, with support\r\n     * for special values of `NaN`, `+Infinity` and `-Infinity`.\r\n     *\r\n     * @param {number|bigint|function} num\r\n     * Number to be converted, or a function that returns one.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    number(num) {\r\n        num = resolveFunc(num);\r\n        if (isNull(num)) {\r\n            return `null`;\r\n        }\r\n        const t = typeof num;\r\n        if (t !== `number` && t !== `bigint`) {\r\n            throw new TypeError(`${wrapText(num)} is not a number.`);\r\n        }\r\n        return $to.number(num);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.array\r\n     * @description\r\n     * Converts an array of values into its PostgreSQL presentation as an Array-Type constructor string: `array[]`.\r\n     *\r\n     * Top-level empty arrays are formatted as literal `{}`, to avoid the necessity of explicit type casting,\r\n     * as the server cannot automatically infer type of an empty non-literal array.\r\n     *\r\n     * @param {Array|function} arr\r\n     * Array to be converted, or a function that returns one.\r\n     *\r\n     * @param {{}} [options]\r\n     * Array-Formatting Options.\r\n     *\r\n     * @param {boolean} [options.capSQL=false]\r\n     * When `true`, outputs `ARRAY` instead of `array`.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    array(arr, options) {\r\n        options = assertOptions(options, [`capSQL`]);\r\n        arr = resolveFunc(arr);\r\n        if (isNull(arr)) {\r\n            return `null`;\r\n        }\r\n        if (arr instanceof Array) {\r\n            return $to.array(arr, options);\r\n        }\r\n        throw new TypeError(`${wrapText(arr)} is not an Array object.`);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.csv\r\n     * @description\r\n     * Converts a single value or an array of values into a CSV (comma-separated values) string, with all values formatted\r\n     * according to their JavaScript type.\r\n     *\r\n     * When formatting a query, a variable makes use of this method via modifier `:csv` or its alias `:list`.\r\n     *\r\n     * When `values` is an object that's not `null` or `Array`, its properties are enumerated for the actual values.\r\n     *\r\n     * @param {Array|Object|value|function} values\r\n     * Value(s) to be converted, or a function that returns it.\r\n     *\r\n     * @returns {string}\r\n     *\r\n     * @see {@link formatting.format format}\r\n     */\r\n    csv(values) {\r\n        return $to.csv(values);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.json\r\n     * @description\r\n     * Converts any value into JSON (includes `BigInt` support), and returns it as a valid string,\r\n     * with single-quote symbols fixed, unless flag `raw` is set.\r\n     *\r\n     * When formatting a query, a variable makes use of this method via modifier `:json`. See method {@link formatting.format format}.\r\n     *\r\n     * @param {*} data\r\n     * Object/value to be converted, or a function that returns it.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the result.\r\n     *\r\n     * @returns {string}\r\n     *\r\n     * @see {@link formatting.format format}\r\n     */\r\n    json(data, raw) {\r\n        data = resolveFunc(data);\r\n        if (isNull(data)) {\r\n            throwIfRaw(raw);\r\n            return `null`;\r\n        }\r\n        return $to.json(data, raw);\r\n    },\r\n\r\n    /**\r\n     * @method formatting.func\r\n     * @description\r\n     * Calls the function to get the actual value, and then formats the result according to its type + `raw` flag.\r\n     *\r\n     * @param {function} func\r\n     * Function to be called, with support for nesting.\r\n     *\r\n     * @param {boolean} [raw=false]\r\n     * Indicates when not to escape the result.\r\n     *\r\n     * @param {*} [cc]\r\n     * Calling Context: `this` + the only value to be passed into the function on all nested levels.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    func(func, raw, cc) {\r\n        if (isNull(func)) {\r\n            throwIfRaw(raw);\r\n            return `null`;\r\n        }\r\n        if (typeof func !== `function`) {\r\n            throw new TypeError(`${wrapText(func)} is not a function.`);\r\n        }\r\n        const fm = raw ? fmFlags.raw : null;\r\n        return formatValue({value: resolveFunc(func, cc), fm, cc});\r\n    },\r\n\r\n    /**\r\n     * @method formatting.format\r\n     * @description\r\n     * Replaces variables in a string according to the type of `values`:\r\n     *\r\n     * - Replaces `$1` occurrences when `values` is of type `string`, `boolean`, `number`, `bigint`, `Date`, `Buffer` or when it is `null`.\r\n     *\r\n     * - Replaces variables `$1`, `$2`, ...`$100000` when `values` is an array of parameters. It throws a {@link external:RangeError RangeError}\r\n     * when the values or variables are out of range.\r\n     *\r\n     * - Replaces `$*propName*`, where `*` is any of `{}`, `()`, `[]`, `<>`, `//`, when `values` is an object that's not a\r\n     * `Date`, `Buffer`, {@link QueryFile} or `null`. Special property name `this` refers to the formatting object itself,\r\n     *   to be injected as a JSON string. When referencing a property that doesn't exist in the formatting object, it throws\r\n     *   {@link external:Error Error} = `Property 'PropName' doesn't exist`, unless option `partial` is used.\r\n     *\r\n     * - Supports $[Nested Named Parameters] of any depth.\r\n     *\r\n     * By default, each variable is automatically formatted according to its type, unless it is a special variable:\r\n     *\r\n     * - Raw-text variables end with `:raw` or symbol `^`, and prevent escaping the text. Such variables are not\r\n     *   allowed to be `null` or `undefined`, or the method will throw {@link external:TypeError TypeError} = `Values null/undefined cannot be used as raw text.`\r\n     *   - `$1:raw`, `$2:raw`,..., and `$*propName:raw*` (see `*` above)\r\n     *   - `$1^`, `$2^`,..., and `$*propName^*` (see `*` above)\r\n     *\r\n     * - Open-value variables end with `:value` or symbol `#`, to be escaped, but not wrapped in quotes. Such variables are\r\n     *   not allowed to be `null` or `undefined`, or the method will throw {@link external:TypeError TypeError} = `Open values cannot be null or undefined.`\r\n     *   - `$1:value`, `$2:value`,..., and `$*propName:value*` (see `*` above)\r\n     *   - `$1#`, `$2#`,..., and `$*propName#*` (see `*` above)\r\n     *\r\n     * - SQL name variables end with `:name` or symbol `~` (tilde), and provide proper escaping for SQL names/identifiers:\r\n     *   - `$1:name`, `$2:name`,..., and `$*propName:name*` (see `*` above)\r\n     *   - `$1~`, `$2~`,..., and `$*propName~*` (see `*` above)\r\n     *\r\n     * - Modifier `:alias` - non-verbose $[SQL Names] escaping.\r\n     *\r\n     * - JSON override ends with `:json` to format the value of any type as a JSON string\r\n     *\r\n     * - CSV override ends with `:csv` or `:list` to format an array as a properly escaped comma-separated list of values.\r\n     *\r\n     * @param {string|QueryFile|object} query\r\n     * A query string, a {@link QueryFile} or any object that implements $[Custom Type Formatting], to be formatted according to `values`.\r\n     *\r\n     * @param {array|object|value} [values]\r\n     * Formatting parameter(s) / variable value(s).\r\n     *\r\n     * @param {{}} [options]\r\n     * Formatting Options.\r\n     *\r\n     * @param {boolean} [options.capSQL=false]\r\n     * Formats reserved SQL words capitalized. Presently, this only concerns arrays, to output `ARRAY` when required.\r\n     *\r\n     * @param {boolean} [options.partial=false]\r\n     * Indicates that we intend to do only a partial replacement, i.e. throw no error when encountering a variable or\r\n     * property name that's missing within the formatting parameters.\r\n     *\r\n     * **NOTE:** This option has no meaning when option `def` is used.\r\n     *\r\n     * @param {*} [options.def]\r\n     * Sets default value for every variable that's missing, consequently preventing errors when encountering a variable\r\n     * or property name that's missing within the formatting parameters.\r\n     *\r\n     * It can also be set to a function, to be called with two parameters that depend on the type of formatting being used,\r\n     * and to return the actual default value:\r\n     *\r\n     * - For $[Named Parameters] formatting:\r\n     *   - `name` - name of the property missing in the formatting object\r\n     *   - `obj` - the formatting object, and is the same as `this` context\r\n     *\r\n     * - For $[Index Variables] formatting:\r\n     *   - `index` - element's index (starts with 1) that's outside of the input array\r\n     *   - `arr` - the formatting/input array, and is the same as `this` context\r\n     *\r\n     *   You can tell which type of call it is by checking the type of the first parameter.\r\n     *\r\n     * @returns {string}\r\n     * Formatted query string.\r\n     *\r\n     * The function will throw an error, if any occurs during formatting.\r\n     */\r\n    format(query, values, options) {\r\n        options = assertOptions(options, [`capSQL`, `partial`, `def`]);\r\n        const ctf = getCTF(query);\r\n        if (ctf) {\r\n            query = ctf.toPostgres.call(query, query);\r\n        }\r\n        return formatQuery(query, values, false, options);\r\n    }\r\n};\r\n\r\n/* Pre-parsed type formatting */\r\nconst $to = {\r\n    array(arr, options) {\r\n        return formatArray(arr, options);\r\n    },\r\n    csv(values, options) {\r\n        return formatCSV(resolveFunc(values), options);\r\n    },\r\n    bool(value) {\r\n        return value ? `true` : `false`;\r\n    },\r\n    buffer(obj, raw) {\r\n        const s = `\\\\x${obj.toString(`hex`)}`;\r\n        return raw ? s : wrapText(s);\r\n    },\r\n    date(d, raw) {\r\n        const s = npm.pgUtils.prepareValue(d);\r\n        return raw ? s : wrapText(s);\r\n    },\r\n    json(data, raw) {\r\n        const s = npm.utils.toJson(data);\r\n        return raw ? s : wrapText(safeText(s));\r\n    },\r\n    number(num) {\r\n        if (typeof num === `bigint` || Number.isFinite(num)) {\r\n            return num.toString();\r\n        }\r\n        // Converting NaN/+Infinity/-Infinity according to Postgres documentation:\r\n        // http://www.postgresql.org/docs/9.6/static/datatype-numeric.html#DATATYPE-FLOAT\r\n        //\r\n        // NOTE: strings for 'NaN'/'+Infinity'/'-Infinity' are not case-sensitive.\r\n        if (num === Number.POSITIVE_INFINITY) {\r\n            return wrapText(`+Infinity`);\r\n        }\r\n        if (num === Number.NEGATIVE_INFINITY) {\r\n            return wrapText(`-Infinity`);\r\n        }\r\n        return wrapText(`NaN`);\r\n    },\r\n    text(value, raw) {\r\n        return raw ? value : wrapText(safeText(value));\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    formatQuery,\r\n    formatEntity,\r\n    resolveFunc,\r\n    as: $as\r\n};\r\n\r\n/**\r\n * @external Error\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n */\r\n\r\n/**\r\n * @external TypeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n */\r\n\r\n/**\r\n * @external RangeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError\r\n */\r\n\r\n/**\r\n * @external Symbol\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {InnerState} = require(`../inner-state`);\r\nconst {assertOptions} = require(`assert-options`);\r\nconst {TableName} = require(`./table-name`);\r\nconst {Column} = require(`./column`);\r\n\r\nconst npm = {\r\n    os: require(`os`),\r\n    utils: require(`../utils`),\r\n    formatting: require(`../formatting`)\r\n};\r\n\r\n/**\r\n * @class helpers.ColumnSet\r\n * @description\r\n * Performance-optimized, read-only structure with query-formatting columns.\r\n *\r\n * In order to avail from performance optimization provided by this class, it should be created\r\n * only once, statically, and then reused.\r\n *\r\n * @param {object|helpers.Column|array} columns\r\n * Columns information object, depending on the type:\r\n *\r\n * - When it is a simple object, its properties are enumerated to represent both column names and property names\r\n *   within the source objects. See also option `inherit` that's applicable in this case.\r\n *\r\n * - When it is a single {@link helpers.Column Column} object, property {@link helpers.ColumnSet#columns columns} is initialized with\r\n *   just a single column. It is not a unique situation when only a single column is required for an update operation.\r\n *\r\n * - When it is an array, each element is assumed to represent details for a column. If the element is already of type {@link helpers.Column Column},\r\n *   it is used directly; otherwise the element is passed into {@link helpers.Column Column} constructor for initialization.\r\n *   On any duplicate column name (case-sensitive) it will throw {@link external:Error Error} = `Duplicate column name \"name\".`\r\n *\r\n * - When it is none of the above, it will throw {@link external:TypeError TypeError} = `Invalid parameter 'columns' specified.`\r\n *\r\n * @param {object} [options]\r\n *\r\n * @param {helpers.TableName|string|{table,schema}} [options.table]\r\n * Table details.\r\n *\r\n * When it is a non-null value, and not a {@link helpers.TableName TableName} object, a new {@link helpers.TableName TableName} is constructed from the value.\r\n *\r\n * It can be used as the default for methods {@link helpers.insert insert} and {@link helpers.update update} when their parameter\r\n * `table` is omitted, and for logging purposes.\r\n *\r\n * @param {boolean} [options.inherit = false]\r\n * Use inherited properties in addition to the object's own properties.\r\n *\r\n * By default, only the object's own properties are enumerated for column names.\r\n *\r\n * @returns {helpers.ColumnSet}\r\n *\r\n * @see\r\n *\r\n * {@link helpers.ColumnSet#columns columns},\r\n * {@link helpers.ColumnSet#names names},\r\n * {@link helpers.ColumnSet#table table},\r\n * {@link helpers.ColumnSet#variables variables} |\r\n * {@link helpers.ColumnSet#assign assign},\r\n * {@link helpers.ColumnSet#assignColumns assignColumns},\r\n * {@link helpers.ColumnSet#extend extend},\r\n * {@link helpers.ColumnSet#merge merge},\r\n * {@link helpers.ColumnSet#prepare prepare}\r\n *\r\n * @example\r\n *\r\n * // A complex insert/update object scenario for table 'purchases' in schema 'fiscal'.\r\n * // For a good performance, you should declare such objects once and then reuse them.\r\n * //\r\n * // Column Requirements:\r\n * //\r\n * // 1. Property 'id' is only to be used for a WHERE condition in updates\r\n * // 2. Property 'list' needs to be formatted as a csv\r\n * // 3. Property 'code' is to be used as raw text, and to be defaulted to 0 when the\r\n * //    property is missing in the source object\r\n * // 4. Property 'log' is a JSON object with 'log-entry' for the column name\r\n * // 5. Property 'data' requires SQL type casting '::int[]'\r\n * // 6. Property 'amount' needs to be set to 100, if it is 0\r\n * // 7. Property 'total' must be skipped during updates, if 'amount' was 0, plus its\r\n * //    column name is 'total-val'\r\n *\r\n * const cs = new pgp.helpers.ColumnSet([\r\n *     '?id', // ColumnConfig equivalent: {name: 'id', cnd: true}\r\n *     'list:csv', // ColumnConfig equivalent: {name: 'list', mod: ':csv'}\r\n *     {\r\n *         name: 'code',\r\n *         mod: '^', // format as raw text\r\n *         def: 0 // default to 0 when the property doesn't exist\r\n *     },\r\n *     {\r\n *         name: 'log-entry',\r\n *         prop: 'log',\r\n *         mod: ':json' // format as JSON\r\n *     },\r\n *     {\r\n *         name: 'data',\r\n *         cast: 'int[]' // use SQL type casting '::int[]'\r\n *     },\r\n *     {\r\n *         name: 'amount',\r\n *         init(col) {\r\n *             // set to 100, if the value is 0:\r\n *             return col.value === 0 ? 100 : col.value;\r\n *         }\r\n *     },\r\n *     {\r\n *         name: 'total-val',\r\n *         prop: 'total',\r\n *         skip(col) {\r\n *             // skip from updates, if 'amount' is 0:\r\n *             return col.source.amount === 0;\r\n *         }\r\n *     }\r\n * ], {table: {table: 'purchases', schema: 'fiscal'}});\r\n *\r\n * // Alternatively, you could take the table declaration out:\r\n * // const table = new pgp.helpers.TableName('purchases', 'fiscal');\r\n *\r\n * console.log(cs); // console output for the object:\r\n * //=>\r\n * // ColumnSet {\r\n * //    table: \"fiscal\".\"purchases\"\r\n * //    columns: [\r\n * //        Column {\r\n * //            name: \"id\"\r\n * //            cnd: true\r\n * //        }\r\n * //        Column {\r\n * //            name: \"list\"\r\n * //            mod: \":csv\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"code\"\r\n * //            mod: \"^\"\r\n * //            def: 0\r\n * //        }\r\n * //        Column {\r\n * //            name: \"log-entry\"\r\n * //            prop: \"log\"\r\n * //            mod: \":json\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"data\"\r\n * //            cast: \"int[]\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"amount\"\r\n * //            init: [Function]\r\n * //        }\r\n * //        Column {\r\n * //            name: \"total-val\"\r\n * //            prop: \"total\"\r\n * //            skip: [Function]\r\n * //        }\r\n * //    ]\r\n * // }\r\n */\r\nclass ColumnSet extends InnerState {\r\n\r\n    constructor(columns, opt) {\r\n        super();\r\n\r\n        if (!columns || typeof columns !== `object`) {\r\n            throw new TypeError(`Invalid parameter 'columns' specified.`);\r\n        }\r\n\r\n        opt = assertOptions(opt, [`table`, `inherit`]);\r\n\r\n        if (!npm.utils.isNull(opt.table)) {\r\n            this.table = (opt.table instanceof TableName) ? opt.table : new TableName(opt.table);\r\n        }\r\n\r\n        /**\r\n         * @name helpers.ColumnSet#table\r\n         * @type {helpers.TableName}\r\n         * @readonly\r\n         * @description\r\n         * Destination table. It can be specified for two purposes:\r\n         *\r\n         * - **primary:** to be used as the default table when it is omitted during a call into methods {@link helpers.insert insert} and {@link helpers.update update}\r\n         * - **secondary:** to be automatically written into the console (for logging purposes).\r\n         */\r\n\r\n\r\n        /**\r\n         * @name helpers.ColumnSet#columns\r\n         * @type helpers.Column[]\r\n         * @readonly\r\n         * @description\r\n         * Array of {@link helpers.Column Column} objects.\r\n         */\r\n        if (Array.isArray(columns)) {\r\n            const colNames = {};\r\n            this.columns = columns.map(c => {\r\n                const col = (c instanceof Column) ? c : new Column(c);\r\n                if (col.name in colNames) {\r\n                    throw new Error(`Duplicate column name \"${col.name}\".`);\r\n                }\r\n                colNames[col.name] = true;\r\n                return col;\r\n            });\r\n        } else {\r\n            if (columns instanceof Column) {\r\n                this.columns = [columns];\r\n            } else {\r\n                this.columns = [];\r\n                for (const name in columns) {\r\n                    if (opt.inherit || Object.prototype.hasOwnProperty.call(columns, name)) {\r\n                        this.columns.push(new Column(name));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Object.freeze(this.columns);\r\n        Object.freeze(this);\r\n\r\n        this.extendState({\r\n            names: undefined,\r\n            variables: undefined,\r\n            updates: undefined,\r\n            isSimple: true\r\n        });\r\n\r\n        for (let i = 0; i < this.columns.length; i++) {\r\n            const c = this.columns[i];\r\n            // ColumnSet is simple when the source objects require no preparation,\r\n            // and should be used directly:\r\n            if (c.prop || c.init || `def` in c) {\r\n                this._inner.isSimple = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name helpers.ColumnSet#names\r\n     * @type string\r\n     * @readonly\r\n     * @description\r\n     * Returns a string - comma-separated list of all column names, properly escaped.\r\n     *\r\n     * @example\r\n     * const cs = new ColumnSet(['id^', {name: 'cells', cast: 'int[]'}, 'doc:json']);\r\n     * console.log(cs.names);\r\n     * //=> \"id\",\"cells\",\"doc\"\r\n     */\r\n    get names() {\r\n        const _i = this._inner;\r\n        if (!_i.names) {\r\n            _i.names = this.columns.map(c => c.escapedName).join();\r\n        }\r\n        return _i.names;\r\n    }\r\n\r\n    /**\r\n     * @name helpers.ColumnSet#variables\r\n     * @type string\r\n     * @readonly\r\n     * @description\r\n     * Returns a string - formatting template for all column values.\r\n     *\r\n     * @see {@link helpers.ColumnSet#assign assign}\r\n     *\r\n     * @example\r\n     * const cs = new ColumnSet(['id^', {name: 'cells', cast: 'int[]'}, 'doc:json']);\r\n     * console.log(cs.variables);\r\n     * //=> ${id^},${cells}::int[],${doc:json}\r\n     */\r\n    get variables() {\r\n        const _i = this._inner;\r\n        if (!_i.variables) {\r\n            _i.variables = this.columns.map(c => c.variable + c.castText).join();\r\n        }\r\n        return _i.variables;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @method helpers.ColumnSet#assign\r\n * @description\r\n * Returns a formatting template of SET assignments, either generic or for a single object.\r\n *\r\n * The method is optimized to cache the output string when there are no columns that can be skipped dynamically.\r\n *\r\n * This method is primarily for internal use, that's why it does not validate the input.\r\n *\r\n * @param {object} [options]\r\n * Assignment/formatting options.\r\n *\r\n * @param {object} [options.source]\r\n * Source - a single object that contains values for columns.\r\n *\r\n * The object is only necessary to correctly apply the logic of skipping columns dynamically, based on the source data\r\n * and the rules defined in the {@link helpers.ColumnSet ColumnSet}. If, however, you do not care about that, then you do not need to specify any object.\r\n *\r\n * Note that even if you do not specify the object, the columns marked as conditional (`cnd: true`) will always be skipped.\r\n *\r\n * @param {string} [options.prefix]\r\n * In cases where needed, an alias prefix to be added before each column.\r\n *\r\n * @returns {string}\r\n * Comma-separated list of variable-to-column assignments.\r\n *\r\n * @see {@link helpers.ColumnSet#variables variables}\r\n *\r\n * @example\r\n *\r\n * const cs = new pgp.helpers.ColumnSet([\r\n *     '?first', // = {name: 'first', cnd: true}\r\n *     'second:json',\r\n *     {name: 'third', mod: ':raw', cast: 'text'}\r\n * ]);\r\n *\r\n * cs.assign();\r\n * //=> \"second\"=${second:json},\"third\"=${third:raw}::text\r\n *\r\n * cs.assign({prefix: 'a b c'});\r\n * //=> \"a b c\".\"second\"=${second:json},\"a b c\".\"third\"=${third:raw}::text\r\n */\r\nColumnSet.prototype.assign = function (options) {\r\n    const _i = this._inner;\r\n    const hasPrefix = options && options.prefix && typeof options.prefix === `string`;\r\n    if (_i.updates && !hasPrefix) {\r\n        return _i.updates;\r\n    }\r\n    let dynamic = hasPrefix;\r\n    const hasSource = options && options.source && typeof options.source === `object`;\r\n    let list = this.columns.filter(c => {\r\n        if (c.cnd) {\r\n            return false;\r\n        }\r\n        if (c.skip) {\r\n            dynamic = true;\r\n            if (hasSource) {\r\n                const a = colDesc(c, options.source);\r\n                if (c.skip.call(options.source, a)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    const prefix = hasPrefix ? npm.formatting.as.alias(options.prefix) + `.` : ``;\r\n    list = list.map(c => prefix + c.escapedName + `=` + c.variable + c.castText).join();\r\n\r\n    if (!dynamic) {\r\n        _i.updates = list;\r\n    }\r\n    return list;\r\n};\r\n\r\n/**\r\n * @method helpers.ColumnSet#assignColumns\r\n * @description\r\n * Generates assignments for all columns in the set, with support for aliases and column-skipping logic.\r\n * Aliases are set by using method {@link formatting.alias as.alias}.\r\n *\r\n * @param {{}} [options]\r\n * Optional Parameters.\r\n *\r\n * @param {string} [options.from]\r\n * Alias for the source columns.\r\n *\r\n * @param {string} [options.to]\r\n * Alias for the destination columns.\r\n *\r\n * @param {string | Array<string> | function} [options.skip]\r\n * Name(s) of the column(s) to be skipped (case-sensitive). It can be either a single string or an array of strings.\r\n *\r\n * It can also be a function - iterator, to be called for every column, passing in {@link helpers.Column Column} as\r\n * `this` context, and plus as a single parameter. The function would return a truthy value for every column that needs to be skipped.\r\n *\r\n * @returns {string}\r\n * A string of comma-separated column assignments.\r\n *\r\n * @example\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['id', 'city', 'street']);\r\n *\r\n * cs.assignColumns({from: 'EXCLUDED', skip: 'id'})\r\n * //=> \"city\"=EXCLUDED.\"city\",\"street\"=EXCLUDED.\"street\"\r\n *\r\n * @example\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['?id', 'city', 'street']);\r\n *\r\n * cs.assignColumns({from: 'source', to: 'target', skip: c => c.cnd})\r\n * //=> target.\"city\"=source.\"city\",target.\"street\"=source.\"street\"\r\n *\r\n */\r\nColumnSet.prototype.assignColumns = function (options) {\r\n    options = assertOptions(options, [`from`, `to`, `skip`]);\r\n    const skip = (typeof options.skip === `string` && [options.skip]) || ((Array.isArray(options.skip) || typeof options.skip === `function`) && options.skip);\r\n    const from = (typeof options.from === `string` && options.from && (npm.formatting.as.alias(options.from) + `.`)) || ``;\r\n    const to = (typeof options.to === `string` && options.to && (npm.formatting.as.alias(options.to) + `.`)) || ``;\r\n    const iterator = typeof skip === `function` ? c => !skip.call(c, c) : c => skip.indexOf(c.name) === -1;\r\n    const cols = skip ? this.columns.filter(iterator) : this.columns;\r\n    return cols.map(c => to + c.escapedName + `=` + from + c.escapedName).join();\r\n};\r\n\r\n/**\r\n * @method helpers.ColumnSet#extend\r\n * @description\r\n * Creates a new {@link helpers.ColumnSet ColumnSet}, by joining the two sets of columns.\r\n *\r\n * If the two sets contain a column with the same `name` (case-sensitive), an error is thrown.\r\n *\r\n * @param {helpers.Column|helpers.ColumnSet|array} columns\r\n * Columns to be appended, of the same type as parameter `columns` during {@link helpers.ColumnSet ColumnSet} construction, except:\r\n * - it can also be of type {@link helpers.ColumnSet ColumnSet}\r\n * - it cannot be a simple object (properties enumeration is not supported here)\r\n *\r\n * @returns {helpers.ColumnSet}\r\n * New {@link helpers.ColumnSet ColumnSet} object with the extended/concatenated list of columns.\r\n *\r\n * @see\r\n * {@link helpers.Column Column},\r\n * {@link helpers.ColumnSet#merge merge}\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')();\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['one', 'two'], {table: 'my-table'});\r\n * console.log(cs);\r\n * //=>\r\n * // ColumnSet {\r\n * //    table: \"my-table\"\r\n * //    columns: [\r\n * //        Column {\r\n * //            name: \"one\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"two\"\r\n * //        }\r\n * //    ]\r\n * // }\r\n * const csExtended = cs.extend(['three']);\r\n * console.log(csExtended);\r\n * //=>\r\n * // ColumnSet {\r\n * //    table: \"my-table\"\r\n * //    columns: [\r\n * //        Column {\r\n * //            name: \"one\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"two\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"three\"\r\n * //        }\r\n * //    ]\r\n * // }\r\n */\r\nColumnSet.prototype.extend = function (columns) {\r\n    let cs = columns;\r\n    if (!(cs instanceof ColumnSet)) {\r\n        cs = new ColumnSet(columns);\r\n    }\r\n    // Any duplicate column will throw Error = 'Duplicate column name \"name\".',\r\n    return new ColumnSet(this.columns.concat(cs.columns), {table: this.table});\r\n};\r\n\r\n/**\r\n * @method helpers.ColumnSet#merge\r\n * @description\r\n * Creates a new {@link helpers.ColumnSet ColumnSet}, by joining the two sets of columns.\r\n *\r\n * Items in `columns` with the same `name` (case-sensitive) override the original columns.\r\n *\r\n * @param {helpers.Column|helpers.ColumnSet|array} columns\r\n * Columns to be appended, of the same type as parameter `columns` during {@link helpers.ColumnSet ColumnSet} construction, except:\r\n * - it can also be of type {@link helpers.ColumnSet ColumnSet}\r\n * - it cannot be a simple object (properties enumeration is not supported here)\r\n *\r\n * @see\r\n * {@link helpers.Column Column},\r\n * {@link helpers.ColumnSet#extend extend}\r\n *\r\n * @returns {helpers.ColumnSet}\r\n * New {@link helpers.ColumnSet ColumnSet} object with the merged list of columns.\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')();\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['?one', 'two:json'], {table: 'my-table'});\r\n * console.log(cs);\r\n * //=>\r\n * // ColumnSet {\r\n * //    table: \"my-table\"\r\n * //    columns: [\r\n * //        Column {\r\n * //            name: \"one\"\r\n * //            cnd: true\r\n * //        }\r\n * //        Column {\r\n * //            name: \"two\"\r\n * //            mod: \":json\"\r\n * //        }\r\n * //    ]\r\n * // }\r\n * const csMerged = cs.merge(['two', 'three^']);\r\n * console.log(csMerged);\r\n * //=>\r\n * // ColumnSet {\r\n * //    table: \"my-table\"\r\n * //    columns: [\r\n * //        Column {\r\n * //            name: \"one\"\r\n * //            cnd: true\r\n * //        }\r\n * //        Column {\r\n * //            name: \"two\"\r\n * //        }\r\n * //        Column {\r\n * //            name: \"three\"\r\n * //            mod: \"^\"\r\n * //        }\r\n * //    ]\r\n * // }\r\n *\r\n */\r\nColumnSet.prototype.merge = function (columns) {\r\n    let cs = columns;\r\n    if (!(cs instanceof ColumnSet)) {\r\n        cs = new ColumnSet(columns);\r\n    }\r\n    const colNames = {}, cols = [];\r\n    this.columns.forEach((c, idx) => {\r\n        cols.push(c);\r\n        colNames[c.name] = idx;\r\n    });\r\n    cs.columns.forEach(c => {\r\n        if (c.name in colNames) {\r\n            cols[colNames[c.name]] = c;\r\n        } else {\r\n            cols.push(c);\r\n        }\r\n    });\r\n    return new ColumnSet(cols, {table: this.table});\r\n};\r\n\r\n/**\r\n * @method helpers.ColumnSet#prepare\r\n * @description\r\n * Prepares a source object to be formatted, by cloning it and applying the rules as set by the\r\n * columns configuration.\r\n *\r\n * This method is primarily for internal use, that's why it does not validate the input parameters.\r\n *\r\n * @param {object} source\r\n * The source object to be prepared, if required.\r\n *\r\n * It must be a non-`null` object, which the method does not validate, as it is\r\n * intended primarily for internal use by the library.\r\n *\r\n * @returns {object}\r\n * When the object needs to be prepared, the method returns a clone of the source object,\r\n * with all properties and values set according to the columns configuration.\r\n *\r\n * When the object does not need to be prepared, the original object is returned.\r\n */\r\nColumnSet.prototype.prepare = function (source) {\r\n    if (this._inner.isSimple) {\r\n        return source; // a simple ColumnSet requires no object preparation;\r\n    }\r\n    const target = {};\r\n    this.columns.forEach(c => {\r\n        const a = colDesc(c, source);\r\n        if (c.init) {\r\n            target[a.name] = c.init.call(source, a);\r\n        } else {\r\n            if (a.exists || `def` in c) {\r\n                target[a.name] = a.value;\r\n            }\r\n        }\r\n    });\r\n    return target;\r\n};\r\n\r\nfunction colDesc(column, source) {\r\n    const a = {\r\n        source,\r\n        name: column.prop || column.name\r\n    };\r\n    a.exists = a.name in source;\r\n    if (a.exists) {\r\n        a.value = source[a.name];\r\n    } else {\r\n        a.value = `def` in column ? column.def : undefined;\r\n    }\r\n    return a;\r\n}\r\n\r\n/**\r\n * @method helpers.ColumnSet#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nColumnSet.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            `ColumnSet {`\r\n        ];\r\n    if (this.table) {\r\n        lines.push(gap1 + `table: ` + this.table);\r\n    }\r\n    if (this.columns.length) {\r\n        lines.push(gap1 + `columns: [`);\r\n        this.columns.forEach(c => {\r\n            lines.push(c.toString(2));\r\n        });\r\n        lines.push(gap1 + `]`);\r\n    } else {\r\n        lines.push(gap1 + `columns: []`);\r\n    }\r\n    lines.push(gap0 + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(ColumnSet, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {ColumnSet};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {InnerState} = require(`../inner-state`);\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    os: require(`os`),\r\n    utils: require(`../utils`),\r\n    formatting: require(`../formatting`),\r\n    patterns: require(`../patterns`)\r\n};\r\n\r\n/**\r\n *\r\n * @class helpers.Column\r\n * @description\r\n *\r\n * Read-only structure with details for a single column. Used primarily by {@link helpers.ColumnSet ColumnSet}.\r\n *\r\n * The class parses details into a template, to be used for query generation.\r\n *\r\n * @param {string|helpers.ColumnConfig} col\r\n * Column details, depending on the type.\r\n *\r\n * When it is a string, it is expected to contain a name for both the column and the source property, assuming that the two are the same.\r\n * The name must adhere to JavaScript syntax for variable names. The name can be appended with any format modifier as supported by\r\n * {@link formatting.format as.format} (`^`, `~`, `#`, `:csv`, `:list`, `:json`, `:alias`, `:name`, `:raw`, `:value`), which is then removed from the name and put\r\n * into property `mod`. If the name starts with `?`, it is removed, while setting flag `cnd` = `true`.\r\n *\r\n * If the string doesn't adhere to the above requirements, the method will throw {@link external:TypeError TypeError} = `Invalid column syntax`.\r\n *\r\n * When `col` is a simple {@link helpers.ColumnConfig ColumnConfig}-like object, it is used as an input configurator to set all the properties\r\n * of the class.\r\n *\r\n * @property {string} name\r\n * Destination column name + source property name (if `prop` is skipped). The name must adhere to JavaScript syntax for variables,\r\n * unless `prop` is specified, in which case `name` represents only the column name, and therefore can be any non-empty string.\r\n *\r\n * @property {string} [prop]\r\n * Source property name, if different from the column's name. It must adhere to JavaScript syntax for variables.\r\n *\r\n * It is ignored when it is the same as `name`.\r\n *\r\n * @property {string} [mod]\r\n * Formatting modifier, as supported by method {@link formatting.format as.format}: `^`, `~`, `#`, `:csv`, `:list`, `:json`, `:alias`, `:name`, `:raw`, `:value`.\r\n *\r\n * @property {string} [cast]\r\n * Server-side type casting, without `::` in front.\r\n *\r\n * @property {boolean} [cnd]\r\n * Conditional column flag.\r\n *\r\n * Used by methods {@link helpers.update update} and {@link helpers.sets sets}, ignored by methods {@link helpers.insert insert} and\r\n * {@link helpers.values values}. It indicates that the column is reserved for a `WHERE` condition, not to be set or updated.\r\n *\r\n * It can be set from a string initialization, by adding `?` in front of the name.\r\n *\r\n * @property {*} [def]\r\n * Default value for the property, to be used only when the source object doesn't have the property.\r\n * It is ignored when property `init` is set.\r\n *\r\n * @property {helpers.initCB} [init]\r\n * Override callback for the value.\r\n *\r\n * @property {helpers.skipCB} [skip]\r\n * An override for skipping columns dynamically.\r\n *\r\n * Used by methods {@link helpers.update update} (for a single object) and {@link helpers.sets sets}, ignored by methods\r\n * {@link helpers.insert insert} and {@link helpers.values values}.\r\n *\r\n * It is also ignored when conditional flag `cnd` is set.\r\n *\r\n * @returns {helpers.Column}\r\n *\r\n * @see\r\n * {@link helpers.ColumnConfig ColumnConfig},\r\n * {@link helpers.Column#castText castText},\r\n * {@link helpers.Column#escapedName escapedName},\r\n * {@link helpers.Column#variable variable}\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')({\r\n *     capSQL: true // if you want all generated SQL capitalized\r\n * });\r\n *\r\n * const Column = pgp.helpers.Column;\r\n *\r\n * // creating a column from just a name:\r\n * const col1 = new Column('colName');\r\n * console.log(col1);\r\n * //=>\r\n * // Column {\r\n * //    name: \"colName\"\r\n * // }\r\n *\r\n * // creating a column from a name + modifier:\r\n * const col2 = new Column('colName:csv');\r\n * console.log(col2);\r\n * //=>\r\n * // Column {\r\n * //    name: \"colName\"\r\n * //    mod: \":csv\"\r\n * // }\r\n *\r\n * // creating a column from a configurator:\r\n * const col3 = new Column({\r\n *     name: 'colName', // required\r\n *     prop: 'propName', // optional\r\n *     mod: '^', // optional\r\n *     def: 123 // optional\r\n * });\r\n * console.log(col3);\r\n * //=>\r\n * // Column {\r\n * //    name: \"colName\"\r\n * //    prop: \"propName\"\r\n * //    mod: \"^\"\r\n * //    def: 123\r\n * // }\r\n *\r\n */\r\nclass Column extends InnerState {\r\n\r\n    constructor(col) {\r\n        super();\r\n\r\n        if (typeof col === `string`) {\r\n            const info = parseColumn(col);\r\n            this.name = info.name;\r\n            if (`mod` in info) {\r\n                this.mod = info.mod;\r\n            }\r\n            if (`cnd` in info) {\r\n                this.cnd = info.cnd;\r\n            }\r\n        } else {\r\n            col = assertOptions(col, [`name`, `prop`, `mod`, `cast`, `cnd`, `def`, `init`, `skip`]);\r\n            if (`name` in col) {\r\n                if (!npm.utils.isText(col.name)) {\r\n                    throw new TypeError(`Invalid 'name' value: ${npm.utils.toJson(col.name)}. A non-empty string was expected.`);\r\n                }\r\n                if (npm.utils.isNull(col.prop) && !isValidVariable(col.name)) {\r\n                    throw new TypeError(`Invalid 'name' syntax: ${npm.utils.toJson(col.name)}.`);\r\n                }\r\n                this.name = col.name; // column name + property name (if 'prop' isn't specified)\r\n\r\n                if (!npm.utils.isNull(col.prop)) {\r\n                    if (!npm.utils.isText(col.prop)) {\r\n                        throw new TypeError(`Invalid 'prop' value: ${npm.utils.toJson(col.prop)}. A non-empty string was expected.`);\r\n                    }\r\n                    if (!isValidVariable(col.prop)) {\r\n                        throw new TypeError(`Invalid 'prop' syntax: ${npm.utils.toJson(col.prop)}.`);\r\n                    }\r\n                    if (col.prop !== col.name) {\r\n                        // optional property name, if different from the column's name;\r\n                        this.prop = col.prop;\r\n                    }\r\n                }\r\n                if (!npm.utils.isNull(col.mod)) {\r\n                    if (typeof col.mod !== `string` || !isValidMod(col.mod)) {\r\n                        throw new TypeError(`Invalid 'mod' value: ${npm.utils.toJson(col.mod)}.`);\r\n                    }\r\n                    this.mod = col.mod; // optional format modifier;\r\n                }\r\n                if (!npm.utils.isNull(col.cast)) {\r\n                    this.cast = parseCast(col.cast); // optional SQL type casting\r\n                }\r\n                if (`cnd` in col) {\r\n                    this.cnd = !!col.cnd;\r\n                }\r\n                if (`def` in col) {\r\n                    this.def = col.def; // optional default\r\n                }\r\n                if (typeof col.init === `function`) {\r\n                    this.init = col.init; // optional value override (overrides 'def' also)\r\n                }\r\n                if (typeof col.skip === `function`) {\r\n                    this.skip = col.skip;\r\n                }\r\n            } else {\r\n                throw new TypeError(`Invalid column details.`);\r\n            }\r\n        }\r\n\r\n        const variable = `\\${` + (this.prop || this.name) + (this.mod || ``) + `}`;\r\n        const castText = this.cast ? (`::` + this.cast) : ``;\r\n        const escapedName = npm.formatting.as.name(this.name);\r\n\r\n        this.extendState({variable, castText, escapedName});\r\n        Object.freeze(this);\r\n    }\r\n\r\n    /**\r\n     * @name helpers.Column#variable\r\n     * @type string\r\n     * @readonly\r\n     * @description\r\n     * Full-syntax formatting variable, ready for direct use in query templates.\r\n     *\r\n     * @example\r\n     *\r\n     * const cs = new pgp.helpers.ColumnSet([\r\n     *     'id',\r\n     *     'coordinate:json',\r\n     *     {\r\n     *         name: 'places',\r\n     *         mod: ':csv',\r\n     *         cast: 'int[]'\r\n     *     }\r\n     * ]);\r\n     *\r\n     * // cs.columns[0].variable = ${id}\r\n     * // cs.columns[1].variable = ${coordinate:json}\r\n     * // cs.columns[2].variable = ${places:csv}::int[]\r\n     */\r\n    get variable() {\r\n        return this._inner.variable;\r\n    }\r\n\r\n    /**\r\n     * @name helpers.Column#castText\r\n     * @type string\r\n     * @readonly\r\n     * @description\r\n     * Full-syntax sql type casting, if there is any, or else an empty string.\r\n     */\r\n    get castText() {\r\n        return this._inner.castText;\r\n    }\r\n\r\n    /**\r\n     * @name helpers.Column#escapedName\r\n     * @type string\r\n     * @readonly\r\n     * @description\r\n     * Escaped name of the column, ready to be injected into queries directly.\r\n     *\r\n     */\r\n    get escapedName() {\r\n        return this._inner.escapedName;\r\n    }\r\n\r\n}\r\n\r\nfunction parseCast(name) {\r\n    if (typeof name === `string`) {\r\n        const s = name.replace(/^[:\\s]*|\\s*$/g, ``);\r\n        if (s) {\r\n            return s;\r\n        }\r\n    }\r\n    throw new TypeError(`Invalid 'cast' value: ${npm.utils.toJson(name)}.`);\r\n}\r\n\r\nfunction parseColumn(name) {\r\n    const m = name.match(npm.patterns.validColumn);\r\n    if (m && m[0] === name) {\r\n        const res = {};\r\n        if (name[0] === `?`) {\r\n            res.cnd = true;\r\n            name = name.substr(1);\r\n        }\r\n        const mod = name.match(npm.patterns.hasValidModifier);\r\n        if (mod) {\r\n            res.name = name.substr(0, mod.index);\r\n            res.mod = mod[0];\r\n        } else {\r\n            res.name = name;\r\n        }\r\n        return res;\r\n    }\r\n    throw new TypeError(`Invalid column syntax: ${npm.utils.toJson(name)}.`);\r\n}\r\n\r\nfunction isValidMod(mod) {\r\n    return npm.patterns.validModifiers.indexOf(mod) !== -1;\r\n}\r\n\r\nfunction isValidVariable(name) {\r\n    const m = name.match(npm.patterns.validVariable);\r\n    return !!m && m[0] === name;\r\n}\r\n\r\n/**\r\n * @method helpers.Column#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nColumn.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            gap0 + `Column {`,\r\n            gap1 + `name: ` + npm.utils.toJson(this.name)\r\n        ];\r\n    if (`prop` in this) {\r\n        lines.push(gap1 + `prop: ` + npm.utils.toJson(this.prop));\r\n    }\r\n    if (`mod` in this) {\r\n        lines.push(gap1 + `mod: ` + npm.utils.toJson(this.mod));\r\n    }\r\n    if (`cast` in this) {\r\n        lines.push(gap1 + `cast: ` + npm.utils.toJson(this.cast));\r\n    }\r\n    if (`cnd` in this) {\r\n        lines.push(gap1 + `cnd: ` + npm.utils.toJson(this.cnd));\r\n    }\r\n    if (`def` in this) {\r\n        lines.push(gap1 + `def: ` + npm.utils.toJson(this.def));\r\n    }\r\n    if (`init` in this) {\r\n        lines.push(gap1 + `init: [Function]`);\r\n    }\r\n    if (`skip` in this) {\r\n        lines.push(gap1 + `skip: [Function]`);\r\n    }\r\n    lines.push(gap0 + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(Column, function () {\r\n    return this.toString();\r\n});\r\n\r\n/**\r\n * @typedef helpers.ColumnConfig\r\n * @description\r\n * A simple structure with column details, to be passed into the {@link helpers.Column Column} constructor for initialization.\r\n *\r\n * @property {string} name\r\n * Destination column name + source property name (if `prop` is skipped). The name must adhere to JavaScript syntax for variables,\r\n * unless `prop` is specified, in which case `name` represents only the column name, and therefore can be any non-empty string.\r\n *\r\n * @property {string} [prop]\r\n * Source property name, if different from the column's name. It must adhere to JavaScript syntax for variables.\r\n *\r\n * It is ignored when it is the same as `name`.\r\n *\r\n * @property {string} [mod]\r\n * Formatting modifier, as supported by method {@link formatting.format as.format}: `^`, `~`, `#`, `:csv`, `:list`, `:json`, `:alias`, `:name`, `:raw`, `:value`.\r\n *\r\n * @property {string} [cast]\r\n * Server-side type casting. Leading `::` is allowed, but not needed (automatically removed when specified).\r\n *\r\n * @property {boolean} [cnd]\r\n * Conditional column flag.\r\n *\r\n * Used by methods {@link helpers.update update} and {@link helpers.sets sets}, ignored by methods {@link helpers.insert insert} and\r\n * {@link helpers.values values}. It indicates that the column is reserved for a `WHERE` condition, not to be set or updated.\r\n *\r\n * It can be set from a string initialization, by adding `?` in front of the name.\r\n *\r\n * @property {*} [def]\r\n * Default value for the property, to be used only when the source object doesn't have the property.\r\n * It is ignored when property `init` is set.\r\n *\r\n * @property {helpers.initCB} [init]\r\n * Override callback for the value.\r\n *\r\n * @property {helpers.skipCB} [skip]\r\n * An override for skipping columns dynamically.\r\n *\r\n * Used by methods {@link helpers.update update} (for a single object) and {@link helpers.sets sets}, ignored by methods\r\n * {@link helpers.insert insert} and {@link helpers.values values}.\r\n *\r\n * It is also ignored when conditional flag `cnd` is set.\r\n *\r\n */\r\n\r\n/**\r\n * @callback helpers.initCB\r\n * @description\r\n * A callback function type used by parameter `init` within {@link helpers.ColumnConfig ColumnConfig}.\r\n *\r\n * It works as an override for the corresponding property value in the `source` object.\r\n *\r\n * The function is called with `this` set to the `source` object.\r\n *\r\n * @param {*} col\r\n * Column-to-property descriptor.\r\n *\r\n * @param {object} col.source\r\n * The source object, equals to `this` that's passed into the function.\r\n *\r\n * @param {string} col.name\r\n * Resolved name of the property within the `source` object, i.e. the value of `name` when `prop` is not used\r\n * for the column, or the value of `prop` when it is specified.\r\n *\r\n * @param {*} col.value\r\n *\r\n * Property value, set to one of the following:\r\n *\r\n * - Value of the property within the `source` object (`value` = `source[name]`), if the property exists\r\n * - If the property doesn't exist and `def` is set in the column, then `value` is set to the value of `def`\r\n * - If the property doesn't exist and `def` is not set in the column, then `value` is set to `undefined`\r\n *\r\n * @param {boolean} col.exists\r\n * Indicates whether the property exists in the `source` object (`exists = name in source`).\r\n *\r\n * @returns {*}\r\n * The new value to be used for the corresponding column.\r\n */\r\n\r\n/**\r\n * @callback helpers.skipCB\r\n * @description\r\n * A callback function type used by parameter `skip` within {@link helpers.ColumnConfig ColumnConfig}.\r\n *\r\n * It is to dynamically determine when the property with specified `name` in the `source` object is to be skipped.\r\n *\r\n * The function is called with `this` set to the `source` object.\r\n *\r\n * @param {*} col\r\n * Column-to-property descriptor.\r\n *\r\n * @param {object} col.source\r\n * The source object, equals to `this` that's passed into the function.\r\n *\r\n * @param {string} col.name\r\n * Resolved name of the property within the `source` object, i.e. the value of `name` when `prop` is not used\r\n * for the column, or the value of `prop` when it is specified.\r\n *\r\n * @param {*} col.value\r\n *\r\n * Property value, set to one of the following:\r\n *\r\n * - Value of the property within the `source` object (`value` = `source[name]`), if the property exists\r\n * - If the property doesn't exist and `def` is set in the column, then `value` is set to the value of `def`\r\n * - If the property doesn't exist and `def` is not set in the column, then `value` is set to `undefined`\r\n *\r\n * @param {boolean} col.exists\r\n * Indicates whether the property exists in the `source` object (`exists = name in source`).\r\n *\r\n * @returns {boolean}\r\n * A truthy value that indicates whether the column is to be skipped.\r\n *\r\n */\r\n\r\nmodule.exports = {Column};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Column} = require(`./column`);\r\nconst {ColumnSet} = require(`./column-set`);\r\nconst {TableName} = require(`./table-name`);\r\nconst method = require(`./methods`);\r\nconst utils = require(`../utils`);\r\n\r\n/**\r\n * @namespace helpers\r\n * @description\r\n * Namespace for query-formatting generators, available as {@link module:pg-promise~helpers pgp.helpers}, after initializing the library.\r\n *\r\n * It unifies the approach to generating multi-row `INSERT` / `UPDATE` queries with the single-row ones.\r\n *\r\n * See also: $[Performance Boost].\r\n *\r\n * @property {function} TableName\r\n * {@link helpers.TableName TableName} class constructor.\r\n *\r\n * @property {function} ColumnSet\r\n * {@link helpers.ColumnSet ColumnSet} class constructor.\r\n *\r\n * @property {function} Column\r\n * {@link helpers.Column Column} class constructor.\r\n *\r\n * @property {function} insert\r\n * {@link helpers.insert insert} static method.\r\n *\r\n * @property {function} update\r\n * {@link helpers.update update} static method.\r\n *\r\n * @property {function} values\r\n * {@link helpers.values values} static method.\r\n *\r\n * @property {function} sets\r\n * {@link helpers.sets sets} static method.\r\n *\r\n * @property {function} concat\r\n * {@link helpers.concat concat} static method.\r\n */\r\nmodule.exports = config => {\r\n    const capSQL = () => config.options && config.options.capSQL;\r\n    const res = {\r\n        insert(data, columns, table) {\r\n            return method.insert(data, columns, table, capSQL());\r\n        },\r\n        update(data, columns, table, options) {\r\n            return method.update(data, columns, table, options, capSQL());\r\n        },\r\n        concat(queries) {\r\n            return method.concat(queries, capSQL());\r\n        },\r\n        values(data, columns) {\r\n            return method.values(data, columns, capSQL());\r\n        },\r\n        sets(data, columns) {\r\n            return method.sets(data, columns, capSQL());\r\n        },\r\n        TableName,\r\n        ColumnSet,\r\n        Column\r\n    };\r\n    utils.lock(res, true, config.options);\r\n    return res;\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {QueryFile} = require(`../../query-file`);\r\n\r\nconst npm = {\r\n    formatting: require(`../../formatting`)\r\n};\r\n\r\n/**\r\n * @method helpers.concat\r\n * @description\r\n * Formats and concatenates multiple queries into a single query string.\r\n *\r\n * Before joining the queries, the method does the following:\r\n *  - Formats each query, if `values` are provided;\r\n *  - Removes all leading and trailing spaces, tabs and semi-colons;\r\n *  - Automatically skips all empty queries.\r\n *\r\n * @param {array<string|helpers.QueryFormat|QueryFile>} queries\r\n * Array of mixed-type elements:\r\n * - a simple query string, to be used as is\r\n * - a {@link helpers.QueryFormat QueryFormat}-like object = `{query, [values], [options]}`\r\n * - a {@link QueryFile} object\r\n *\r\n * @returns {string}\r\n * Concatenated string with all queries.\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')();\r\n *\r\n * const qf1 = new pgp.QueryFile('./query1.sql', {minify: true});\r\n * const qf2 = new pgp.QueryFile('./query2.sql', {minify: true});\r\n *\r\n * const query = pgp.helpers.concat([\r\n *     {query: 'INSERT INTO Users(name, age) VALUES($1, $2)', values: ['John', 23]}, // QueryFormat-like object\r\n *     {query: qf1, values: [1, 'Name']}, // QueryFile with formatting parameters\r\n *     'SELECT count(*) FROM Users', // a simple-string query,\r\n *     qf2 // direct QueryFile object\r\n * ]);\r\n *\r\n * // query = concatenated string with all the queries\r\n */\r\nfunction concat(queries, capSQL) {\r\n    if (!Array.isArray(queries)) {\r\n        throw new TypeError(`Parameter 'queries' must be an array.`);\r\n    }\r\n    const fmOptions = {capSQL};\r\n    const all = queries.map((q, index) => {\r\n        if (typeof q === `string`) {\r\n            // a simple query string without parameters:\r\n            return clean(q);\r\n        }\r\n        if (q && typeof q === `object`) {\r\n            if (q instanceof QueryFile) {\r\n                // QueryFile object:\r\n                return clean(q[npm.formatting.as.ctf.toPostgres]());\r\n            }\r\n            if (`query` in q) {\r\n                // object {query, values, options}:\r\n                let opt = q.options && typeof q.options === `object` ? q.options : {};\r\n                opt = opt.capSQL === undefined ? Object.assign(opt, fmOptions) : opt;\r\n                return clean(npm.formatting.as.format(q.query, q.values, opt));\r\n            }\r\n        }\r\n        throw new Error(`Invalid query element at index ${index}.`);\r\n    });\r\n\r\n    return all.filter(q => q).join(`;`);\r\n}\r\n\r\nfunction clean(q) {\r\n    // removes from the query all leading and trailing symbols ' ', '\\t' and ';'\r\n    return q.replace(/^[\\s;]*|[\\s;]*$/g, ``);\r\n}\r\n\r\nmodule.exports = {concat};\r\n\r\n/**\r\n * @typedef helpers.QueryFormat\r\n * @description\r\n * A simple structure of parameters to be passed into method {@link formatting.format as.format} exactly as they are,\r\n * used by {@link helpers.concat}.\r\n *\r\n * @property {string|value|object} query\r\n * A query string or a value/object that implements $[Custom Type Formatting], to be formatted according to `values`.\r\n *\r\n * @property {array|object|value} [values]\r\n * Query-formatting values.\r\n *\r\n * @property {object} [options]\r\n * Query-formatting options, as supported by method {@link formatting.format as.format}.\r\n *\r\n * @see\r\n * {@link formatting.format as.format}\r\n */\r\n","const {concat} = require(`./concat`);\r\nconst {insert} = require(`./insert`);\r\nconst {update} = require(`./update`);\r\nconst {values} = require(`./values`);\r\nconst {sets} = require(`./sets`);\r\n\r\nmodule.exports = {\r\n    concat,\r\n    insert,\r\n    update,\r\n    values,\r\n    sets\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {TableName} = require(`../table-name`);\r\nconst {ColumnSet} = require(`../column-set`);\r\n\r\nconst npm = {\r\n    formatting: require(`../../formatting`),\r\n    utils: require(`../../utils`)\r\n};\r\n\r\n/**\r\n * @method helpers.insert\r\n * @description\r\n * Generates an `INSERT` query for either one object or an array of objects.\r\n *\r\n * @param {object|object[]} data\r\n * An insert object with properties for insert values, or an array of such objects.\r\n *\r\n * When `data` is not a non-null object and not an array, it will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * When `data` is an empty array, it will throw {@link external:TypeError TypeError} = `Cannot generate an INSERT from an empty array.`\r\n *\r\n * When `data` is an array that contains a non-object value, the method will throw {@link external:Error Error} =\r\n * `Invalid insert object at index N.`\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Set of columns to be inserted.\r\n *\r\n * It is optional when `data` is a single object, and required when `data` is an array of objects. If not specified for an array\r\n * of objects, the method will throw {@link external:TypeError TypeError} = `Parameter 'columns' is required when inserting multiple records.`\r\n *\r\n * When `columns` is not a {@link helpers.ColumnSet ColumnSet} object, a temporary {@link helpers.ColumnSet ColumnSet}\r\n * is created - from the value of `columns` (if it was specified), or from the value of `data` (if it is not an array).\r\n *\r\n * When the final {@link helpers.ColumnSet ColumnSet} is empty (no columns in it), the method will throw\r\n * {@link external:Error Error} = `Cannot generate an INSERT without any columns.`\r\n *\r\n * @param {helpers.TableName|string|{table,schema}} [table]\r\n * Destination table.\r\n *\r\n * It is normally a required parameter. But when `columns` is passed in as a {@link helpers.ColumnSet ColumnSet} object\r\n * with `table` set in it, that will be used when this parameter isn't specified. When neither is available, the method\r\n * will throw {@link external:Error Error} = `Table name is unknown.`\r\n *\r\n * @returns {string}\r\n * An `INSERT` query string.\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet},\r\n *  {@link helpers.TableName TableName}\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')({\r\n *    capSQL: true // if you want all generated SQL capitalized\r\n * });\r\n *\r\n * const dataSingle = {val: 123, msg: 'hello'};\r\n * const dataMulti = [{val: 123, msg: 'hello'}, {val: 456, msg: 'world!'}];\r\n *\r\n * // Column details can be taken from the data object:\r\n *\r\n * pgp.helpers.insert(dataSingle, null, 'my-table');\r\n * //=> INSERT INTO \"my-table\"(\"val\",\"msg\") VALUES(123,'hello')\r\n *\r\n * @example\r\n *\r\n * // Column details are required for a multi-row `INSERT`:\r\n *\r\n * pgp.helpers.insert(dataMulti, ['val', 'msg'], 'my-table');\r\n * //=> INSERT INTO \"my-table\"(\"val\",\"msg\") VALUES(123,'hello'),(456,'world!')\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance):\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['val', 'msg'], {table: 'my-table'});\r\n *\r\n * pgp.helpers.insert(dataMulti, cs);\r\n * //=> INSERT INTO \"my-table\"(\"val\",\"msg\") VALUES(123,'hello'),(456,'world!')\r\n *\r\n */\r\nfunction insert(data, columns, table, capSQL) {\r\n\r\n    if (!data || typeof data !== `object`) {\r\n        throw new TypeError(`Invalid parameter 'data' specified.`);\r\n    }\r\n\r\n    const isArray = Array.isArray(data);\r\n\r\n    if (isArray && !data.length) {\r\n        throw new TypeError(`Cannot generate an INSERT from an empty array.`);\r\n    }\r\n\r\n    if (columns instanceof ColumnSet) {\r\n        if (npm.utils.isNull(table)) {\r\n            table = columns.table;\r\n        }\r\n    } else {\r\n        if (isArray && npm.utils.isNull(columns)) {\r\n            throw new TypeError(`Parameter 'columns' is required when inserting multiple records.`);\r\n        }\r\n        columns = new ColumnSet(columns || data);\r\n    }\r\n\r\n    if (!columns.columns.length) {\r\n        throw new Error(`Cannot generate an INSERT without any columns.`);\r\n    }\r\n\r\n    if (!table) {\r\n        throw new Error(`Table name is unknown.`);\r\n    }\r\n\r\n    if (!(table instanceof TableName)) {\r\n        table = new TableName(table);\r\n    }\r\n\r\n    let query = capSQL ? sql.capCase : sql.lowCase;\r\n    const fmOptions = {capSQL};\r\n\r\n    const format = npm.formatting.as.format;\r\n    query = format(query, [table.name, columns.names], fmOptions);\r\n\r\n    if (isArray) {\r\n        return query + data.map((d, index) => {\r\n            if (!d || typeof d !== `object`) {\r\n                throw new Error(`Invalid insert object at index ${index}.`);\r\n            }\r\n            return `(` + format(columns.variables, columns.prepare(d), fmOptions) + `)`;\r\n        }).join();\r\n    }\r\n    return query + `(` + format(columns.variables, columns.prepare(data), fmOptions) + `)`;\r\n}\r\n\r\nconst sql = {\r\n    lowCase: `insert into $1^($2^) values`,\r\n    capCase: `INSERT INTO $1^($2^) VALUES`\r\n};\r\n\r\nmodule.exports = {insert};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ColumnSet} = require(`../column-set`);\r\n\r\nconst npm = {\r\n    format: require(`../../formatting`).as.format,\r\n    utils: require(`../../utils`)\r\n};\r\n\r\n/**\r\n * @method helpers.sets\r\n * @description\r\n * Generates a string of comma-separated value-set statements from a single object: `col1=val1, col2=val2, ...`,\r\n * to be used as part of a query.\r\n *\r\n * Since it is to be used as part of `UPDATE` queries, {@link helpers.Column Column} properties `cnd` and `skip` apply.\r\n *\r\n * @param {object} data\r\n * A simple, non-null and non-array source object.\r\n *\r\n * If it is anything else, the method will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Columns for which to set values.\r\n *\r\n * When not specified, properties of the `data` object are used.\r\n *\r\n * When no effective columns are found, an empty string is returned.\r\n *\r\n * @returns {string}\r\n * - comma-separated value-set statements for the `data` object\r\n * - an empty string, if no effective columns found\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet}\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')();\r\n *\r\n * const data = {id: 1, val: 123, msg: 'hello'};\r\n *\r\n * // Properties can be pulled automatically from the object:\r\n *\r\n * pgp.helpers.sets(data);\r\n * //=> \"id\"=1,\"val\"=123,\"msg\"='hello'\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance);\r\n * // NOTE: Conditional columns (start with '?') are skipped:\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['?id','val', 'msg']);\r\n *\r\n * pgp.helpers.sets(data, cs);\r\n * //=> \"val\"=123,\"msg\"='hello'\r\n *\r\n */\r\nfunction sets(data, columns, capSQL) {\r\n\r\n    if (!data || typeof data !== `object` || Array.isArray(data)) {\r\n        throw new TypeError(`Invalid parameter 'data' specified.`);\r\n    }\r\n\r\n    if (!(columns instanceof ColumnSet)) {\r\n        columns = new ColumnSet(columns || data);\r\n    }\r\n\r\n    return npm.format(columns.assign({source: data}), columns.prepare(data), {capSQL});\r\n}\r\n\r\nmodule.exports = {sets};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {assertOptions} = require(`assert-options`);\r\nconst {TableName} = require(`../table-name`);\r\nconst {ColumnSet} = require(`../column-set`);\r\n\r\nconst npm = {\r\n    formatting: require(`../../formatting`),\r\n    utils: require(`../../utils`)\r\n};\r\n\r\n/**\r\n * @method helpers.update\r\n * @description\r\n * Generates a simplified `UPDATE` query for either one object or an array of objects.\r\n *\r\n * The resulting query needs a `WHERE` clause to be appended to it, to specify the update logic.\r\n * This is to allow for update conditions of any complexity that are easy to add.\r\n *\r\n * @param {object|object[]} data\r\n * An update object with properties for update values, or an array of such objects.\r\n *\r\n * When `data` is not a non-null object and not an array, it will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * When `data` is an empty array, it will throw {@link external:TypeError TypeError} = `Cannot generate an UPDATE from an empty array.`\r\n *\r\n * When `data` is an array that contains a non-object value, the method will throw {@link external:Error Error} =\r\n * `Invalid update object at index N.`\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Set of columns to be updated.\r\n *\r\n * It is optional when `data` is a single object, and required when `data` is an array of objects. If not specified for an array\r\n * of objects, the method will throw {@link external:TypeError TypeError} = `Parameter 'columns' is required when updating multiple records.`\r\n *\r\n * When `columns` is not a {@link helpers.ColumnSet ColumnSet} object, a temporary {@link helpers.ColumnSet ColumnSet}\r\n * is created - from the value of `columns` (if it was specified), or from the value of `data` (if it is not an array).\r\n *\r\n * When the final {@link helpers.ColumnSet ColumnSet} is empty (no columns in it), the method will throw\r\n * {@link external:Error Error} = `Cannot generate an UPDATE without any columns.`, unless option `emptyUpdate` was specified.\r\n *\r\n * @param {helpers.TableName|string|{table,schema}} [table]\r\n * Table to be updated.\r\n *\r\n * It is normally a required parameter. But when `columns` is passed in as a {@link helpers.ColumnSet ColumnSet} object\r\n * with `table` set in it, that will be used when this parameter isn't specified. When neither is available, the method\r\n * will throw {@link external:Error Error} = `Table name is unknown.`\r\n *\r\n * @param {{}} [options]\r\n * An object with formatting options for multi-row `UPDATE` queries.\r\n *\r\n * @param {string} [options.tableAlias=t]\r\n * Name of the SQL variable that represents the destination table.\r\n *\r\n * @param {string} [options.valueAlias=v]\r\n * Name of the SQL variable that represents the values.\r\n *\r\n * @param {*} [options.emptyUpdate]\r\n * This is a convenience option, to avoid throwing an error when generating a conditional update results in no columns.\r\n *\r\n * When present, regardless of the value, this option overrides the method's behaviour when applying `skip` logic results in no columns,\r\n * i.e. when every column is being skipped.\r\n *\r\n * By default, in that situation the method throws {@link external:Error Error} = `Cannot generate an UPDATE without any columns.`\r\n * But when this option is present, the method will instead return whatever value the option was passed.\r\n *\r\n * @returns {*}\r\n * An `UPDATE` query string that needs a `WHERE` condition appended.\r\n *\r\n * If it results in an empty update, and option `emptyUpdate` was passed in, then the method returns the value\r\n * to which the option was set.\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet},\r\n *  {@link helpers.TableName TableName}\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')({\r\n *    capSQL: true // if you want all generated SQL capitalized\r\n * });\r\n *\r\n * const dataSingle = {id: 1, val: 123, msg: 'hello'};\r\n * const dataMulti = [{id: 1, val: 123, msg: 'hello'}, {id: 2, val: 456, msg: 'world!'}];\r\n *\r\n * // Although column details can be taken from the data object, it is not\r\n * // a likely scenario for an update, unless updating the whole table:\r\n *\r\n * pgp.helpers.update(dataSingle, null, 'my-table');\r\n * //=> UPDATE \"my-table\" SET \"id\"=1,\"val\"=123,\"msg\"='hello'\r\n *\r\n * @example\r\n *\r\n * // A typical single-object update:\r\n *\r\n * // Dynamic conditions must be escaped/formatted properly:\r\n * const condition = pgp.as.format(' WHERE id = ${id}', dataSingle);\r\n *\r\n * pgp.helpers.update(dataSingle, ['val', 'msg'], 'my-table') + condition;\r\n * //=> UPDATE \"my-table\" SET \"val\"=123,\"msg\"='hello' WHERE id = 1\r\n *\r\n * @example\r\n *\r\n * // Column details are required for a multi-row `UPDATE`;\r\n * // Adding '?' in front of a column name means it is only for a WHERE condition:\r\n *\r\n * pgp.helpers.update(dataMulti, ['?id', 'val', 'msg'], 'my-table') + ' WHERE v.id = t.id';\r\n * //=> UPDATE \"my-table\" AS t SET \"val\"=v.\"val\",\"msg\"=v.\"msg\" FROM (VALUES(1,123,'hello'),(2,456,'world!'))\r\n * //   AS v(\"id\",\"val\",\"msg\") WHERE v.id = t.id\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance):\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['?id', 'val', 'msg'], {table: 'my-table'});\r\n *\r\n * pgp.helpers.update(dataMulti, cs) + ' WHERE v.id = t.id';\r\n * //=> UPDATE \"my-table\" AS t SET \"val\"=v.\"val\",\"msg\"=v.\"msg\" FROM (VALUES(1,123,'hello'),(2,456,'world!'))\r\n * //   AS v(\"id\",\"val\",\"msg\") WHERE v.id = t.id\r\n *\r\n * @example\r\n *\r\n * // Using parameter `options` to change the default alias names:\r\n *\r\n * pgp.helpers.update(dataMulti, cs, null, {tableAlias: 'X', valueAlias: 'Y'}) + ' WHERE Y.id = X.id';\r\n * //=> UPDATE \"my-table\" AS X SET \"val\"=Y.\"val\",\"msg\"=Y.\"msg\" FROM (VALUES(1,123,'hello'),(2,456,'world!'))\r\n * //   AS Y(\"id\",\"val\",\"msg\") WHERE Y.id = X.id\r\n *\r\n * @example\r\n *\r\n * // Handling an empty update\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['?id', '?name'], {table: 'tt'}); // no actual update-able columns\r\n * const result = pgp.helpers.update(dataMulti, cs, null, {emptyUpdate: 123});\r\n * if(result === 123) {\r\n *    // We know the update is empty, i.e. no columns that can be updated;\r\n *    // And it didn't throw because we specified `emptyUpdate` option.\r\n * }\r\n */\r\nfunction update(data, columns, table, options, capSQL) {\r\n\r\n    if (!data || typeof data !== `object`) {\r\n        throw new TypeError(`Invalid parameter 'data' specified.`);\r\n    }\r\n\r\n    const isArray = Array.isArray(data);\r\n\r\n    if (isArray && !data.length) {\r\n        throw new TypeError(`Cannot generate an UPDATE from an empty array.`);\r\n    }\r\n\r\n    if (columns instanceof ColumnSet) {\r\n        if (npm.utils.isNull(table)) {\r\n            table = columns.table;\r\n        }\r\n    } else {\r\n        if (isArray && npm.utils.isNull(columns)) {\r\n            throw new TypeError(`Parameter 'columns' is required when updating multiple records.`);\r\n        }\r\n        columns = new ColumnSet(columns || data);\r\n    }\r\n\r\n    options = assertOptions(options, [`tableAlias`, `valueAlias`, `emptyUpdate`]);\r\n\r\n    const format = npm.formatting.as.format,\r\n        useEmptyUpdate = `emptyUpdate` in options,\r\n        fmOptions = {capSQL};\r\n\r\n    if (isArray) {\r\n        const tableAlias = npm.formatting.as.alias(npm.utils.isNull(options.tableAlias) ? `t` : options.tableAlias);\r\n        const valueAlias = npm.formatting.as.alias(npm.utils.isNull(options.valueAlias) ? `v` : options.valueAlias);\r\n\r\n        const q = capSQL ? sql.multi.capCase : sql.multi.lowCase;\r\n\r\n        const actualColumns = columns.columns.filter(c => !c.cnd);\r\n\r\n        if (checkColumns(actualColumns)) {\r\n            return options.emptyUpdate;\r\n        }\r\n\r\n        checkTable();\r\n\r\n        const targetCols = actualColumns.map(c => c.escapedName + `=` + valueAlias + `.` + c.escapedName).join();\r\n\r\n        const values = data.map((d, index) => {\r\n            if (!d || typeof d !== `object`) {\r\n                throw new Error(`Invalid update object at index ${index}.`);\r\n            }\r\n            return `(` + format(columns.variables, columns.prepare(d), fmOptions) + `)`;\r\n        }).join();\r\n\r\n        return format(q, [table.name, tableAlias, targetCols, values, valueAlias, columns.names], fmOptions);\r\n    }\r\n\r\n    const updates = columns.assign({source: data});\r\n\r\n    if (checkColumns(updates)) {\r\n        return options.emptyUpdate;\r\n    }\r\n\r\n    checkTable();\r\n\r\n    const query = capSQL ? sql.single.capCase : sql.single.lowCase;\r\n\r\n    return format(query, table.name) + format(updates, columns.prepare(data), fmOptions);\r\n\r\n    function checkTable() {\r\n        if (table && !(table instanceof TableName)) {\r\n            table = new TableName(table);\r\n        }\r\n        if (!table) {\r\n            throw new Error(`Table name is unknown.`);\r\n        }\r\n    }\r\n\r\n    function checkColumns(cols) {\r\n        if (!cols.length) {\r\n            if (useEmptyUpdate) {\r\n                return true;\r\n            }\r\n            throw new Error(`Cannot generate an UPDATE without any columns.`);\r\n        }\r\n    }\r\n}\r\n\r\nconst sql = {\r\n    single: {\r\n        lowCase: `update $1^ set `,\r\n        capCase: `UPDATE $1^ SET `\r\n    },\r\n    multi: {\r\n        lowCase: `update $1^ as $2^ set $3^ from (values$4^) as $5^($6^)`,\r\n        capCase: `UPDATE $1^ AS $2^ SET $3^ FROM (VALUES$4^) AS $5^($6^)`\r\n    }\r\n};\r\n\r\nmodule.exports = {update};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ColumnSet} = require(`../column-set`);\r\n\r\nconst npm = {\r\n    formatting: require(`../../formatting`),\r\n    utils: require(`../../utils`)\r\n};\r\n\r\n/**\r\n * @method helpers.values\r\n * @description\r\n * Generates a string of comma-separated value groups from either one object or an array of objects,\r\n * to be used as part of a query:\r\n *\r\n * - from a single object: `(val_1, val_2, ...)`\r\n * - from an array of objects: `(val_11, val_12, ...), (val_21, val_22, ...)`\r\n *\r\n * @param {object|object[]} data\r\n * A source object with properties as values, or an array of such objects.\r\n *\r\n * If it is anything else, the method will throw {@link external:TypeError TypeError} = `Invalid parameter 'data' specified.`\r\n *\r\n * When `data` is an array that contains a non-object value, the method will throw {@link external:Error Error} =\r\n * `Invalid object at index N.`\r\n *\r\n * When `data` is an empty array, an empty string is returned.\r\n *\r\n * @param {array|helpers.Column|helpers.ColumnSet} [columns]\r\n * Columns for which to return values.\r\n *\r\n * It is optional when `data` is a single object, and required when `data` is an array of objects. If not specified for an array\r\n * of objects, the method will throw {@link external:TypeError TypeError} = `Parameter 'columns' is required when generating multi-row values.`\r\n *\r\n * When the final {@link helpers.ColumnSet ColumnSet} is empty (no columns in it), the method will throw\r\n * {@link external:Error Error} = `Cannot generate values without any columns.`\r\n *\r\n * @returns {string}\r\n * - comma-separated value groups, according to `data`\r\n * - an empty string, if `data` is an empty array\r\n *\r\n * @see\r\n *  {@link helpers.Column Column},\r\n *  {@link helpers.ColumnSet ColumnSet}\r\n *\r\n * @example\r\n *\r\n * const pgp = require('pg-promise')();\r\n *\r\n * const dataSingle = {val: 123, msg: 'hello'};\r\n * const dataMulti = [{val: 123, msg: 'hello'}, {val: 456, msg: 'world!'}];\r\n *\r\n * // Properties can be pulled automatically from a single object:\r\n *\r\n * pgp.helpers.values(dataSingle);\r\n * //=> (123,'hello')\r\n *\r\n * @example\r\n *\r\n * // Column details are required when using an array of objects:\r\n *\r\n * pgp.helpers.values(dataMulti, ['val', 'msg']);\r\n * //=> (123,'hello'),(456,'world!')\r\n *\r\n * @example\r\n *\r\n * // Column details from a reusable ColumnSet (recommended for performance):\r\n *\r\n * const cs = new pgp.helpers.ColumnSet(['val', 'msg']);\r\n *\r\n * pgp.helpers.values(dataMulti, cs);\r\n * //=> (123,'hello'),(456,'world!')\r\n *\r\n */\r\nfunction values(data, columns, capSQL) {\r\n\r\n    if (!data || typeof data !== `object`) {\r\n        throw new TypeError(`Invalid parameter 'data' specified.`);\r\n    }\r\n\r\n    const isArray = Array.isArray(data);\r\n\r\n    if (!(columns instanceof ColumnSet)) {\r\n        if (isArray && npm.utils.isNull(columns)) {\r\n            throw new TypeError(`Parameter 'columns' is required when generating multi-row values.`);\r\n        }\r\n        columns = new ColumnSet(columns || data);\r\n    }\r\n\r\n    if (!columns.columns.length) {\r\n        throw new Error(`Cannot generate values without any columns.`);\r\n    }\r\n\r\n    const format = npm.formatting.as.format,\r\n        fmOptions = {capSQL};\r\n\r\n    if (isArray) {\r\n        return data.map((d, index) => {\r\n            if (!d || typeof d !== `object`) {\r\n                throw new Error(`Invalid object at index ${index}.`);\r\n            }\r\n            return `(` + format(columns.variables, columns.prepare(d), fmOptions) + `)`;\r\n        }).join();\r\n    }\r\n    return `(` + format(columns.variables, columns.prepare(data), fmOptions) + `)`;\r\n}\r\n\r\nmodule.exports = {values};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    utils: require(`../utils`),\r\n    format: require(`../formatting`).as // formatting namespace\r\n};\r\n\r\n/**\r\n * @class helpers.TableName\r\n * @description\r\n * Represents a full table name that can be injected into queries directly.\r\n *\r\n * This is a read-only type that can be used wherever parameter `table` is supported.\r\n *\r\n * It supports $[Custom Type Formatting], which means you can use the type directly as a formatting\r\n * parameter, without specifying any escaping.\r\n *\r\n * Filter `:alias` is an alternative approach to splitting an SQL name into multiple ones.\r\n *\r\n * @param {string|object} table\r\n * Table name details, depending on the type:\r\n *\r\n * - table name, if `table` is a string\r\n * - object `{table, [schema]}`\r\n *\r\n * @property {string} name\r\n * Formatted/escaped full table name, combining `schema` + `table`.\r\n *\r\n * @property {string} table\r\n * Table name.\r\n *\r\n * @property {string} schema\r\n * Database schema name.\r\n *\r\n * It is `undefined` when no valid schema was specified.\r\n *\r\n * @returns {helpers.TableName}\r\n *\r\n * @see\r\n * {@link helpers.TableName#toPostgres toPostgres}\r\n *\r\n * @example\r\n *\r\n * const table = new pgp.helpers.TableName({table: 'my-table', schema: 'my-schema'});\r\n * console.log(table);\r\n * //=> \"my-schema\".\"my-table\"\r\n *\r\n * // Formatting the type directly:\r\n * pgp.as.format('SELECT * FROM $1', table);\r\n * //=> SELECT * FROM \"my-schema\".\"my-table\"\r\n *\r\n */\r\nclass TableName {\r\n\r\n    constructor(table) {\r\n        if (typeof table === `string`) {\r\n            this.table = table;\r\n        } else {\r\n            const config = assertOptions(table, [`table`, `schema`]);\r\n            this.table = config.table;\r\n            if (npm.utils.isText(config.schema)) {\r\n                this.schema = config.schema;\r\n            }\r\n        }\r\n        if (!npm.utils.isText(this.table)) {\r\n            throw new TypeError(`Table name must be a non-empty text string.`);\r\n        }\r\n        this.name = npm.format.name(this.table);\r\n        if (this.schema) {\r\n            this.name = npm.format.name(this.schema) + `.` + this.name;\r\n        }\r\n        Object.freeze(this);\r\n    }\r\n}\r\n\r\n/**\r\n * @method helpers.TableName#toPostgres\r\n * @description\r\n * $[Custom Type Formatting], based on $[Symbolic CTF], i.e. the actual method is available only via {@link external:Symbol Symbol}:\r\n *\r\n * ```js\r\n * const ctf = pgp.as.ctf; // Custom Type Formatting symbols namespace\r\n * const fullName = tn[ctf.toPostgres]; // tn = an object of type TableName\r\n * ```\r\n *\r\n * This is a raw formatting type (`rawType = true`), i.e. when used as a query-formatting parameter, type `TableName`\r\n * injects full table name as raw text.\r\n *\r\n * @param {helpers.TableName} [self]\r\n * Optional self-reference, for ES6 arrow functions.\r\n *\r\n * @returns {string}\r\n * Escaped full table name that includes optional schema name, if specified.\r\n */\r\nTableName.prototype[npm.format.ctf.toPostgres] = function (self) {\r\n    self = this instanceof TableName && this || self;\r\n    return self.name;\r\n};\r\n\r\nTableName.prototype[npm.format.ctf.rawType] = true; // use as pre-formatted\r\n\r\n/**\r\n * @method helpers.TableName#toString\r\n * @description\r\n * Creates a well-formatted string that represents the object.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @returns {string}\r\n */\r\nTableName.prototype.toString = function () {\r\n    return this.name;\r\n};\r\n\r\nnpm.utils.addInspection(TableName, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {TableName};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\n/* eslint no-var: off */\r\nvar v = process.versions.node.split(`.`),\r\n    highVer = +v[0];\r\n\r\n// istanbul ignore next\r\nif (highVer < 8) {\r\n\r\n    // From pg-promise v10.4.0, the oldest supported Node.js is v8.0.0,\r\n    // which among other things, adds method 'destroy' to streams.\r\n\r\n    // Node.js v7.6.0 was supported up to pg-promise v10.3.5\r\n    // Node.js v4.5.0 was supported up to pg-promise v8.7.5\r\n    // Node.js v0.10 was supported up to pg-promise v5.5.8\r\n\r\n    throw new Error(`Minimum Node.js version supported by pg-promise is 8.0.0`);\r\n}\r\n\r\nmodule.exports = require(`./main`);\r\n","const {addReadProp} = require(`./utils`);\r\n\r\n/**\r\n * @private\r\n * @class InnerState\r\n * @description\r\n * Implements support for private/inner state object inside the class,\r\n * which can be accessed by a derived class via hidden read-only property _inner.\r\n */\r\nclass InnerState {\r\n\r\n    constructor(initialState) {\r\n        addReadProp(this, `_inner`, {}, true);\r\n        if (initialState && typeof initialState === `object`) {\r\n            this.extendState(initialState);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extends or overrides inner state with the specified properties.\r\n     *\r\n     * Only own properties are used, i.e. inherited ones are skipped.\r\n     */\r\n    extendState(state) {\r\n        for (const a in state) {\r\n            // istanbul ignore else\r\n            if (Object.prototype.hasOwnProperty.call(state, a)) {\r\n                this._inner[a] = state[a];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @member InnerState#_inner\r\n * Private/Inner object state.\r\n */\r\n\r\nmodule.exports = {InnerState};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {PromiseAdapter} = require(`./promise-adapter`);\r\nconst {DatabasePool} = require(`./database-pool`);\r\nconst {PreparedStatement, ParameterizedQuery} = require(`./types`);\r\nconst {QueryFile} = require(`./query-file`);\r\nconst {queryResult} = require(`./query-result`);\r\nconst {parsePromise} = require(`./promise-parser`);\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    path: require(`path`),\r\n    pg: require(`pg`),\r\n    minify: require(`pg-minify`),\r\n    formatting: require(`./formatting`),\r\n    helpers: require(`./helpers`),\r\n    errors: require(`./errors`),\r\n    utils: require(`./utils`),\r\n    pubUtils: require(`./utils/public`),\r\n    mode: require(`./tx-mode`),\r\n    package: require(`../package.json`),\r\n    text: require(`./text`)\r\n};\r\n\r\nlet originalClientConnect;\r\n\r\n/**\r\n * @author Vitaly Tomilov\r\n * @module pg-promise\r\n *\r\n * @description\r\n * ## pg-promise v10\r\n * All documentation here is for the latest official release only.\r\n *\r\n * ### Initialization Options\r\n *\r\n * Below is the complete list of _Initialization Options_ for the library that can be passed in during\r\n * the library's initialization:\r\n *\r\n * ```js\r\n * const initOptions = {&#47;* options as documented below *&#47;};\r\n *\r\n * const pgp = require('pg-promise')(initOptions);\r\n * ```\r\n *\r\n * @param {{}} [options]\r\n * Library Initialization Options.\r\n *\r\n * @param {boolean} [options.pgFormatting=false]\r\n * Redirects all query formatting to the $[pg] driver.\r\n *\r\n * By default (`false`), the library uses its own advanced query-formatting engine.\r\n * If you set this option to a truthy value, query formatting will be done entirely by the\r\n * $[pg] driver, which means you won't be able to use any of the feature-rich query formatting\r\n * that this library implements, restricting yourself to the very basic `$1, $2,...` syntax.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {boolean} [options.pgNative=false]\r\n * Use $[Native Bindings]. Library $[pg-native] must be included and installed independently, or else there will\r\n * be an error thrown: {@link external:Error Error} = `Failed to initialize Native Bindings.`\r\n *\r\n * This is a static option (can only be set prior to initialization).\r\n *\r\n * @param {object|function} [options.promiseLib=Promise]\r\n * Overrides the default (ES6 Promise) promise library for its internal use.\r\n *\r\n * Example below sets to use $[Bluebird] - the best and recommended promise library. It is the fastest one,\r\n * and supports $[Long Stack Traces], essential for debugging promises.\r\n *\r\n * ```js\r\n * const Promise = require('bluebird');\r\n * const initOptions = {\r\n *     promiseLib: Promise\r\n * };\r\n * const pgp = require('pg-promise')(initOptions);\r\n * ```\r\n *\r\n * All existing promise libraries are supported. The ones with recognizable signature are used automatically,\r\n * while the rest can be configured via the $[Promise Adapter].\r\n *\r\n * This is a static option (can only be set prior to initialization).\r\n *\r\n * @param {boolean} [options.noLocking=false]\r\n * Prevents protocol locking.\r\n *\r\n * By default, the library locks much of its protocol to read-only access, as a fool-proof mechanism.\r\n * Specifically for the {@link event:extend extend} event this serves as a protection against overriding existing\r\n * properties or trying to set them at the wrong time.\r\n *\r\n * If this provision gets in the way of using a mock-up framework for your tests, you can force\r\n * the library to deactivate most of the locks by setting `noLocking` = `true` within the options.\r\n *\r\n * This option is dynamic (can be set before or after initialization). However, changing it after the library's\r\n * initialization will not affect {@link Database} objects that have already been created.\r\n *\r\n * @param {boolean} [options.capSQL=false]\r\n * Capitalizes any SQL generated by the library.\r\n *\r\n * By default, all internal SQL within the library is generated using the low case.\r\n * If, however, you want all SQL to be capitalized instead, set `capSQL` = `true`.\r\n *\r\n * It is purely a cosmetic feature.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {string|Array<string>|null|undefined|function} [options.schema]\r\n * Forces change of the default database schema(s) for every fresh connection, i.e.\r\n * the library will execute `SET search_path TO schema_1, schema_2, ...` in the background\r\n * whenever a fresh physical connection is allocated.\r\n *\r\n * Normally, one changes the default schema(s) by $[changing the database or the role], but sometimes you\r\n * may want to switch the default schema(s) without persisting the change, and then use this option.\r\n *\r\n * It can be a string, an array of strings, or a callback function that takes `dc` (database context)\r\n * as the only parameter (and as `this`), and returns schema(s) according to the database context. A callback function\r\n * can also return nothing (`undefined` or `null`), if no schema change needed for the specified database context.\r\n *\r\n * The order of schema names matters, so if a table name exists in more than one schema, its default access resolves\r\n * to the table from the first such schema on the list.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {boolean} [options.noWarnings=false]\r\n * Disables all diagnostic warnings in the library (it is ill-advised).\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.connect]\r\n * Global event {@link event:connect connect} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.disconnect]\r\n * Global event {@link event:disconnect disconnect} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.query]\r\n * Global event {@link event:query query} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.receive]\r\n * Global event {@link event:receive receive} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.task]\r\n * Global event {@link event:task task} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.transact]\r\n * Global event {@link event:transact transact} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.error]\r\n * Global event {@link event:error error} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @param {function} [options.extend]\r\n * Global event {@link event:extend extend} handler.\r\n *\r\n * This option is dynamic (can be set before or after initialization).\r\n *\r\n * @see\r\n * {@link module:pg-promise~end end},\r\n * {@link module:pg-promise~as as},\r\n * {@link module:pg-promise~errors errors},\r\n * {@link module:pg-promise~helpers helpers},\r\n * {@link module:pg-promise~minify minify},\r\n * {@link module:pg-promise~ParameterizedQuery ParameterizedQuery},\r\n * {@link module:pg-promise~PreparedStatement PreparedStatement},\r\n * {@link module:pg-promise~pg pg},\r\n * {@link module:pg-promise~QueryFile QueryFile},\r\n * {@link module:pg-promise~queryResult queryResult},\r\n * {@link module:pg-promise~spex spex},\r\n * {@link module:pg-promise~txMode txMode},\r\n * {@link module:pg-promise~utils utils}\r\n *\r\n */\r\nfunction $main(options) {\r\n\r\n    options = assertOptions(options, [`pgFormatting`, `pgNative`, `promiseLib`, `noLocking`, `capSQL`, `noWarnings`,\r\n        `connect`, `disconnect`, `query`, `receive`, `task`, `transact`, `error`, `extend`, `schema`]);\r\n\r\n    let pg = npm.pg;\r\n    const p = parsePromise(options.promiseLib);\r\n\r\n    const config = {\r\n        version: npm.package.version,\r\n        promiseLib: p.promiseLib,\r\n        promise: p.promise\r\n    };\r\n\r\n    npm.utils.addReadProp(config, `$npm`, {}, true);\r\n\r\n    // Locking properties that cannot be changed later:\r\n    npm.utils.addReadProp(options, `promiseLib`, options.promiseLib);\r\n    npm.utils.addReadProp(options, `pgNative`, !!options.pgNative);\r\n\r\n    config.options = options;\r\n\r\n    // istanbul ignore next:\r\n    // we do not cover code specific to Native Bindings\r\n    if (options.pgNative) {\r\n        pg = npm.pg.native;\r\n        if (npm.utils.isNull(pg)) {\r\n            throw new Error(npm.text.nativeError);\r\n        }\r\n    } else {\r\n        if (!originalClientConnect) {\r\n            originalClientConnect = pg.Client.prototype.connect;\r\n            pg.Client.prototype.connect = function () {\r\n                const handler = msg => {\r\n                    if (msg.parameterName === `server_version`) {\r\n                        this.serverVersion = msg.parameterValue;\r\n                        this.connection.removeListener(`parameterStatus`, handler);\r\n                    }\r\n                };\r\n                this.connection.on(`parameterStatus`, handler);\r\n                return originalClientConnect.call(this, ...arguments);\r\n            };\r\n        }\r\n    }\r\n\r\n    const Database = require(`./database`)(config);\r\n\r\n    const inst = (cn, dc) => {\r\n        if (npm.utils.isText(cn) || (cn && typeof cn === `object`)) {\r\n            return new Database(cn, dc, config);\r\n        }\r\n        throw new TypeError(`Invalid connection details: ` + npm.utils.toJson(cn));\r\n    };\r\n\r\n    npm.utils.addReadProperties(inst, rootNameSpace);\r\n\r\n    /**\r\n     * @member {external:PG} pg\r\n     * @description\r\n     * Instance of the $[pg] library that's being used, depending on initialization option `pgNative`:\r\n     *  - regular `pg` module instance, without option `pgNative`, or equal to `false` (default)\r\n     *  - `pg` module instance with $[Native Bindings], if option `pgNative` was set.\r\n     *\r\n     * Available as `pgp.pg`, after initializing the library.\r\n     */\r\n    inst.pg = pg; // keep it modifiable, so the protocol can be mocked\r\n\r\n    /**\r\n     * @member {function} end\r\n     * @readonly\r\n     * @description\r\n     * Shuts down all connection pools created in the process, so it can terminate without delay.\r\n     * It is available as `pgp.end`, after initializing the library.\r\n     *\r\n     * All {@link Database} objects created previously can no longer be used, and their query methods will be rejecting\r\n     * with {@link external:Error Error} = `Connection pool of the database object has been destroyed.`\r\n     *\r\n     * And if you want to shut down only a specific connection pool, you do so via the {@link Database}\r\n     * object that owns the pool: `db.$pool.end()` (see {@link Database#$pool Database.$pool}).\r\n     *\r\n     * For more details see $[Library de-initialization].\r\n     */\r\n    npm.utils.addReadProp(inst, `end`, () => {\r\n        DatabasePool.shutDown();\r\n    });\r\n\r\n    /**\r\n     * @member {helpers} helpers\r\n     * @readonly\r\n     * @description\r\n     * Namespace for {@link helpers all query-formatting helper functions}.\r\n     *\r\n     * Available as `pgp.helpers`, after initializing the library.\r\n     *\r\n     * @see {@link helpers}.\r\n     */\r\n    npm.utils.addReadProp(inst, `helpers`, npm.helpers(config));\r\n\r\n    /**\r\n     * @member {external:spex} spex\r\n     * @readonly\r\n     * @description\r\n     * Initialized instance of the $[spex] module, used by the library within tasks and transactions.\r\n     *\r\n     * Available as `pgp.spex`, after initializing the library.\r\n     *\r\n     * @see\r\n     * {@link Task#batch},\r\n     * {@link Task#page},\r\n     * {@link Task#sequence}\r\n     */\r\n    npm.utils.addReadProp(inst, `spex`, config.$npm.spex);\r\n\r\n    config.pgp = inst;\r\n    npm.utils.lock(config, true, options);\r\n\r\n    return inst;\r\n}\r\n\r\nconst rootNameSpace = {\r\n\r\n    /**\r\n     * @member {formatting} as\r\n     * @readonly\r\n     * @description\r\n     * Namespace for {@link formatting all query-formatting functions}.\r\n     *\r\n     * Available as `pgp.as`, before and after initializing the library.\r\n     *\r\n     * @see {@link formatting}.\r\n     */\r\n    as: npm.formatting.as,\r\n\r\n    /**\r\n     * @member {external:pg-minify} minify\r\n     * @readonly\r\n     * @description\r\n     * Instance of the $[pg-minify] library used internally to minify SQL scripts.\r\n     *\r\n     * Available as `pgp.minify`, before and after initializing the library.\r\n     */\r\n    minify: npm.minify,\r\n\r\n    /**\r\n     * @member {queryResult} queryResult\r\n     * @readonly\r\n     * @description\r\n     * Query Result Mask enumerator.\r\n     *\r\n     * Available as `pgp.queryResult`, before and after initializing the library.\r\n     */\r\n    queryResult,\r\n\r\n    /**\r\n     * @member {PromiseAdapter} PromiseAdapter\r\n     * @readonly\r\n     * @description\r\n     * {@link PromiseAdapter} class.\r\n     *\r\n     * Available as `pgp.PromiseAdapter`, before and after initializing the library.\r\n     */\r\n    PromiseAdapter,\r\n\r\n    /**\r\n     * @member {ParameterizedQuery} ParameterizedQuery\r\n     * @readonly\r\n     * @description\r\n     * {@link ParameterizedQuery} class.\r\n     *\r\n     * Available as `pgp.ParameterizedQuery`, before and after initializing the library.\r\n     */\r\n    ParameterizedQuery,\r\n\r\n    /**\r\n     * @member {PreparedStatement} PreparedStatement\r\n     * @readonly\r\n     * @description\r\n     * {@link PreparedStatement} class.\r\n     *\r\n     * Available as `pgp.PreparedStatement`, before and after initializing the library.\r\n     */\r\n    PreparedStatement,\r\n\r\n    /**\r\n     * @member {QueryFile} QueryFile\r\n     * @readonly\r\n     * @description\r\n     * {@link QueryFile} class.\r\n     *\r\n     * Available as `pgp.QueryFile`, before and after initializing the library.\r\n     */\r\n    QueryFile,\r\n\r\n    /**\r\n     * @member {errors} errors\r\n     * @readonly\r\n     * @description\r\n     * {@link errors} - namespace for all error types.\r\n     *\r\n     * Available as `pgp.errors`, before and after initializing the library.\r\n     */\r\n    errors: npm.errors,\r\n\r\n    /**\r\n     * @member {utils} utils\r\n     * @readonly\r\n     * @description\r\n     * {@link utils} - namespace for utility functions.\r\n     *\r\n     * Available as `pgp.utils`, before and after initializing the library.\r\n     */\r\n    utils: npm.pubUtils,\r\n\r\n    /**\r\n     * @member {txMode} txMode\r\n     * @readonly\r\n     * @description\r\n     * {@link txMode Transaction Mode} namespace.\r\n     *\r\n     * Available as `pgp.txMode`, before and after initializing the library.\r\n     */\r\n    txMode: npm.mode\r\n};\r\n\r\nnpm.utils.addReadProperties($main, rootNameSpace);\r\n\r\nmodule.exports = $main;\r\n\r\n/**\r\n * @external Promise\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n */\r\n\r\n/**\r\n * @external PG\r\n * @see https://node-postgres.com\r\n */\r\n\r\n/**\r\n * @external Client\r\n * @see https://node-postgres.com/api/client\r\n */\r\n\r\n/**\r\n * @external pg-minify\r\n * @see https://github.com/vitaly-t/pg-minify\r\n */\r\n\r\n/**\r\n * @external spex\r\n * @see https://github.com/vitaly-t/spex\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\n/*\r\n  The most important regular expressions and data as used by the library,\r\n  isolated here to help with possible edge cases during integration.\r\n*/\r\n\r\nmodule.exports = {\r\n    // Searches for all Named Parameters, supporting any of the following syntax:\r\n    // ${propName}, $(propName), $[propName], $/propName/, $<propName>\r\n    // Nested property names are also supported: ${propName.abc}\r\n    namedParameters: /\\$(?:({)|(\\()|(<)|(\\[)|(\\/))\\s*[a-zA-Z0-9$_.]+(\\^|~|#|:raw|:alias|:name|:json|:csv|:list|:value)?\\s*(?:(?=\\2)(?=\\3)(?=\\4)(?=\\5)}|(?=\\1)(?=\\3)(?=\\4)(?=\\5)\\)|(?=\\1)(?=\\2)(?=\\4)(?=\\5)>|(?=\\1)(?=\\2)(?=\\3)(?=\\5)]|(?=\\1)(?=\\2)(?=\\3)(?=\\4)\\/)/g,\r\n\r\n    // Searches for all variables $1, $2, ...$100000, and while it will find greater than $100000\r\n    // variables, the formatting engine is expected to throw an error for those.\r\n    multipleValues: /\\$([1-9][0-9]{0,16}(?![0-9])(\\^|~|#|:raw|:alias|:name|:json|:csv|:list|:value)?)/g,\r\n\r\n    // Searches for all occurrences of variable $1\r\n    singleValue: /\\$1(?![0-9])(\\^|~|#|:raw|:alias|:name|:json|:csv|:list|:value)?/g,\r\n\r\n    // Matches a valid column name for the Column type parser, according to the following rules:\r\n    // - can contain: any combination of a-z, A-Z, 0-9, $ or _\r\n    // - can contain ? at the start\r\n    // - can contain one of the supported filters/modifiers\r\n    validColumn: /\\??[a-zA-Z0-9$_]+(\\^|~|#|:raw|:alias|:name|:json|:csv|:list|:value)?/,\r\n\r\n    // Matches a valid open-name JavaScript variable, according to the following rules:\r\n    // - can contain: any combination of a-z, A-Z, 0-9, $ or _\r\n    validVariable: /[a-zA-Z0-9$_]+/,\r\n\r\n    // Matches a valid modifier in a column/property:\r\n    hasValidModifier: /\\^|~|#|:raw|:alias|:name|:json|:csv|:list|:value/,\r\n\r\n    // List of all supported formatting modifiers:\r\n    validModifiers: [`^`, `~`, `#`, `:raw`, `:alias`, `:name`, `:json`, `:csv`, `:list`, `:value`]\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\n/**\r\n * @class PromiseAdapter\r\n * @summary Adapter for the primary promise operations.\r\n * @description\r\n * Provides compatibility with promise libraries that cannot be recognized automatically,\r\n * via functions that implement the primary operations with promises:\r\n *\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *  - resolve an array of promises\r\n *\r\n * The type is available from the library's root: `pgp.PromiseAdapter`.\r\n *\r\n * @param {object} api\r\n * Promise API configuration object.\r\n *\r\n * Passing in anything other than an object will throw {@link external:TypeError TypeError} = `Adapter requires an api configuration object.`\r\n *\r\n * @param {function} api.create\r\n * A function that takes a callback parameter and returns a new promise object.\r\n * The callback parameter is expected to be `function(resolve, reject)`.\r\n *\r\n * Passing in anything other than a function will throw {@link external:TypeError TypeError} = `Function 'create' must be specified.`\r\n *\r\n * @param {function} api.resolve\r\n * A function that takes an optional data parameter and resolves a promise with it.\r\n *\r\n * Passing in anything other than a function will throw {@link external:TypeError TypeError} = `Function 'resolve' must be specified.`\r\n *\r\n * @param {function} api.reject\r\n * A function that takes an optional error parameter and rejects a promise with it.\r\n *\r\n * Passing in anything other than a function will throw {@link external:TypeError TypeError} = `Function 'reject' must be specified.`\r\n *\r\n * @param {function} api.all\r\n * A function that resolves an array of promises.\r\n *\r\n * Passing in anything other than a function will throw {@link external:TypeError TypeError} = `Function 'all' must be specified.`\r\n *\r\n * @returns {PromiseAdapter}\r\n */\r\nclass PromiseAdapter {\r\n    constructor(api) {\r\n\r\n        if (!api || typeof api !== `object`) {\r\n            throw new TypeError(`Adapter requires an api configuration object.`);\r\n        }\r\n\r\n        api = assertOptions(api, [`create`, `resolve`, `reject`, `all`]);\r\n\r\n        this.create = api.create;\r\n        this.resolve = api.resolve;\r\n        this.reject = api.reject;\r\n        this.all = api.all;\r\n\r\n        if (typeof this.create !== `function`) {\r\n            throw new TypeError(`Function 'create' must be specified.`);\r\n        }\r\n\r\n        if (typeof this.resolve !== `function`) {\r\n            throw new TypeError(`Function 'resolve' must be specified.`);\r\n        }\r\n\r\n        if (typeof this.reject !== `function`) {\r\n            throw new TypeError(`Function 'reject' must be specified.`);\r\n        }\r\n\r\n        if (typeof this.all !== `function`) {\r\n            throw new TypeError(`Function 'all' must be specified.`);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {PromiseAdapter};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {PromiseAdapter} = require(`./promise-adapter`);\r\n\r\n//////////////////////////////////////////\r\n// Parses and validates a promise library;\r\nfunction parse(pl) {\r\n\r\n    let promise;\r\n    if (pl instanceof PromiseAdapter) {\r\n        promise = function (func) {\r\n            return pl.create(func);\r\n        };\r\n        promise.resolve = pl.resolve;\r\n        promise.reject = pl.reject;\r\n        promise.all = pl.all;\r\n        return promise;\r\n    }\r\n    const t = typeof pl;\r\n    if (t === `function` || t === `object`) {\r\n        const Root = typeof pl.Promise === `function` ? pl.Promise : pl;\r\n        promise = function (func) {\r\n            return new Root(func);\r\n        };\r\n        promise.resolve = Root.resolve;\r\n        promise.reject = Root.reject;\r\n        promise.all = Root.all;\r\n        if (typeof promise.resolve === `function` &&\r\n            typeof promise.reject === `function` &&\r\n            typeof promise.all === `function`) {\r\n            return promise;\r\n        }\r\n    }\r\n\r\n    throw new TypeError(`Invalid promise library specified.`);\r\n}\r\n\r\nfunction parsePromise(promiseLib) {\r\n    const result = {promiseLib};\r\n    if (promiseLib) {\r\n        result.promise = parse(promiseLib);\r\n    } else {\r\n        result.promise = parse(Promise);\r\n        result.promiseLib = Promise;\r\n    }\r\n    return result;\r\n}\r\n\r\nmodule.exports = {parsePromise};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {InnerState} = require(`./inner-state`);\r\nconst {QueryFileError} = require(`./errors`);\r\nconst {assertOptions} = require(`assert-options`);\r\nconst {ColorConsole} = require(`./utils/color`);\r\n\r\nconst npm = {\r\n    fs: require(`fs`),\r\n    os: require(`os`),\r\n    path: require(`path`),\r\n    minify: require(`pg-minify`),\r\n    utils: require(`./utils`),\r\n    formatting: require(`./formatting`)\r\n};\r\n\r\nconst file$query = Symbol(`QueryFile.query`);\r\n\r\n/**\r\n * @class QueryFile\r\n * @description\r\n *\r\n * Represents an external SQL file. The type is available from the library's root: `pgp.QueryFile`.\r\n *\r\n * Reads a file with SQL and prepares it for execution, also parses and minifies it, if required.\r\n * The SQL can be of any complexity, with both single and multi-line comments.\r\n *\r\n * The type can be used in place of the `query` parameter, with any query method directly, plus as `text` in {@link PreparedStatement}\r\n * and {@link ParameterizedQuery}.\r\n *\r\n * It never throws any error, leaving it for query methods to reject with {@link errors.QueryFileError QueryFileError}.\r\n *\r\n * **IMPORTANT:** You should only create a single reusable object per file, in order to avoid repeated file reads,\r\n * as the IO is a very expensive resource. If you do not follow it, you will be seeing the following warning:\r\n * `Creating a duplicate QueryFile object for the same file`, which signals a bad-use pattern.\r\n *\r\n * @param {string} file\r\n * Path to the SQL file with the query, either absolute or relative to the application's entry point file.\r\n *\r\n * If there is any problem reading the file, it will be reported when executing the query.\r\n *\r\n * @param {QueryFile.Options} [options]\r\n * Set of configuration options, as documented by {@link QueryFile.Options}.\r\n *\r\n * @returns {QueryFile}\r\n *\r\n * @see\r\n * {@link errors.QueryFileError QueryFileError},\r\n * {@link QueryFile#toPostgres toPostgres}\r\n *\r\n * @example\r\n * // File sql.js\r\n *\r\n * // Proper way to organize an sql provider:\r\n * //\r\n * // - have all sql files for Users in ./sql/users\r\n * // - have all sql files for Products in ./sql/products\r\n * // - have your sql provider module as ./sql/index.js\r\n *\r\n * const {QueryFile} = require('pg-promise');\r\n * const {join: joinPath} = require('path');\r\n *\r\n * // Helper for linking to external query files:\r\n * function sql(file) {\r\n *     const fullPath = joinPath(__dirname, file); // generating full path;\r\n *     return new QueryFile(fullPath, {minify: true});\r\n * }\r\n *\r\n * module.exports = {\r\n *     // external queries for Users:\r\n *     users: {\r\n *         add: sql('users/create.sql'),\r\n *         search: sql('users/search.sql'),\r\n *         report: sql('users/report.sql'),\r\n *     },\r\n *     // external queries for Products:\r\n *     products: {\r\n *         add: sql('products/add.sql'),\r\n *         quote: sql('products/quote.sql'),\r\n *         search: sql('products/search.sql'),\r\n *     }\r\n * };\r\n *\r\n * @example\r\n * // Testing our SQL provider\r\n *\r\n * const db = require('./db'); // our database module;\r\n * const {users: sql} = require('./sql'); // sql for users;\r\n *\r\n * module.exports = {\r\n *     addUser: (name, age) => db.none(sql.add, [name, age]),\r\n *     findUser: name => db.any(sql.search, name)\r\n * };\r\n *\r\n */\r\nclass QueryFile extends InnerState {\r\n\r\n    constructor(file, options) {\r\n\r\n        let filePath = file;\r\n\r\n        options = assertOptions(options, {\r\n            debug: npm.utils.isDev(),\r\n            minify: (options && options.compress && options.minify === undefined) ? true : undefined,\r\n            compress: undefined,\r\n            params: undefined,\r\n            noWarnings: undefined\r\n        });\r\n\r\n        if (npm.utils.isText(filePath) && !npm.path.isAbsolute(filePath)) {\r\n            filePath = npm.path.join(npm.utils.startDir, filePath);\r\n        }\r\n\r\n        const {usedPath} = QueryFile.instance;\r\n\r\n        // istanbul ignore next:\r\n        if (!options.noWarnings) {\r\n            if (filePath in usedPath) {\r\n                usedPath[filePath]++;\r\n                ColorConsole.warn(`WARNING: Creating a duplicate QueryFile object for the same file - \\n    ${filePath}\\n${npm.utils.getLocalStack(2, 3)}\\n`);\r\n            } else {\r\n                usedPath[filePath] = 0;\r\n            }\r\n        }\r\n\r\n        const _inner = {\r\n            file,\r\n            filePath,\r\n            options,\r\n            sql: undefined,\r\n            error: undefined,\r\n            ready: undefined,\r\n            modTime: undefined\r\n        };\r\n\r\n        super(_inner);\r\n\r\n        this.prepare();\r\n    }\r\n\r\n    /**\r\n     * Global instance of the file-path repository.\r\n     *\r\n     * @return {{usedPath: {}}}\r\n     */\r\n    static get instance() {\r\n        const s = Symbol.for(`pgPromiseQueryFile`);\r\n        let scope = global[s];\r\n        if (!scope) {\r\n            scope = {\r\n                usedPath: {} // used-path look-up dictionary\r\n            };\r\n            global[s] = scope;\r\n        }\r\n        return scope;\r\n    }\r\n\r\n    /**\r\n     * @name QueryFile#Symbol(QueryFile.$query)\r\n     * @type {string}\r\n     * @default undefined\r\n     * @readonly\r\n     * @private\r\n     * @summary Prepared query string.\r\n     * @description\r\n     * When property {@link QueryFile#error error} is set, the query is `undefined`.\r\n     *\r\n     * **IMPORTANT:** This property is for internal use by the library only, never use this\r\n     * property directly from your code.\r\n     */\r\n    get [file$query]() {\r\n        return this._inner.sql;\r\n    }\r\n\r\n    /**\r\n     * @name QueryFile#error\r\n     * @type {errors.QueryFileError}\r\n     * @default undefined\r\n     * @readonly\r\n     * @description\r\n     * When in an error state, it is set to a {@link errors.QueryFileError QueryFileError} object. Otherwise, it is `undefined`.\r\n     */\r\n    get error() {\r\n        return this._inner.error;\r\n    }\r\n\r\n    /**\r\n     * @name QueryFile#file\r\n     * @type {string}\r\n     * @readonly\r\n     * @description\r\n     * File name that was passed into the constructor.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    get file() {\r\n        return this._inner.file;\r\n    }\r\n\r\n    /**\r\n     * @name QueryFile#options\r\n     * @type {QueryFile.Options}\r\n     * @readonly\r\n     * @description\r\n     * Set of options, as configured during the object's construction.\r\n     *\r\n     * This property is primarily for internal use by the library.\r\n     */\r\n    get options() {\r\n        return this._inner.options;\r\n    }\r\n\r\n    /**\r\n     * @summary Prepares the query for execution.\r\n     * @description\r\n     * If the query hasn't been prepared yet, it will read the file and process the content according\r\n     * to the parameters passed into the constructor.\r\n     *\r\n     * This method is primarily for internal use by the library.\r\n     *\r\n     * @param {boolean} [throwErrors=false]\r\n     * Throw any error encountered.\r\n     */\r\n    prepare(throwErrors) {\r\n        const i = this._inner, options = i.options;\r\n        let lastMod;\r\n        if (options.debug && i.ready) {\r\n            try {\r\n                lastMod = npm.fs.statSync(i.filePath).mtime.getTime();\r\n                // istanbul ignore if;\r\n                if (lastMod === i.modTime) {\r\n                    return;\r\n                }\r\n                i.ready = false;\r\n            } catch (e) {\r\n                i.sql = undefined;\r\n                i.ready = false;\r\n                i.error = e;\r\n                if (throwErrors) {\r\n                    throw i.error;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        if (i.ready) {\r\n            return;\r\n        }\r\n        try {\r\n            i.sql = npm.fs.readFileSync(i.filePath, `utf8`);\r\n            i.modTime = lastMod || npm.fs.statSync(i.filePath).mtime.getTime();\r\n            if (options.minify && options.minify !== `after`) {\r\n                i.sql = npm.minify(i.sql, {compress: options.compress});\r\n            }\r\n            if (options.params !== undefined) {\r\n                i.sql = npm.formatting.as.format(i.sql, options.params, {partial: true});\r\n            }\r\n            if (options.minify && options.minify === `after`) {\r\n                i.sql = npm.minify(i.sql, {compress: options.compress});\r\n            }\r\n            i.ready = true;\r\n            i.error = undefined;\r\n        } catch (e) {\r\n            i.sql = undefined;\r\n            i.error = new QueryFileError(e, this);\r\n            if (throwErrors) {\r\n                throw i.error;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// Hiding the query as a symbol within the type,\r\n// to make it even more difficult to misuse it:\r\nQueryFile.$query = file$query;\r\n\r\n/**\r\n * @method QueryFile#toPostgres\r\n * @description\r\n * $[Custom Type Formatting], based on $[Symbolic CTF], i.e. the actual method is available only via {@link external:Symbol Symbol}:\r\n *\r\n * ```js\r\n * const ctf = pgp.as.ctf; // Custom Type Formatting symbols namespace\r\n * const query = qf[ctf.toPostgres](); // qf = an object of type QueryFile\r\n * ```\r\n *\r\n * This is a raw formatting type (`rawType = true`), i.e. when used as a query-formatting parameter, type `QueryFile` injects SQL as raw text.\r\n *\r\n * If you need to support type `QueryFile` outside of query methods, this is the only safe way to get the most current SQL.\r\n * And you would want to use this method dynamically, as it reloads the SQL automatically, if option `debug` is set.\r\n * See {@link QueryFile.Options Options}.\r\n *\r\n * @param {QueryFile} [self]\r\n * Optional self-reference, for ES6 arrow functions.\r\n *\r\n * @returns {string}\r\n * SQL string from the file, according to the {@link QueryFile.Options options} specified.\r\n *\r\n */\r\nQueryFile.prototype[npm.formatting.as.ctf.toPostgres] = function (self) {\r\n    self = this instanceof QueryFile && this || self;\r\n    self.prepare(true);\r\n    return self[QueryFile.$query];\r\n};\r\n\r\nQueryFile.prototype[npm.formatting.as.ctf.rawType] = true; // use as pre-formatted\r\n\r\n/**\r\n * @method QueryFile#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object's current state.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryFile.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap = npm.utils.messageGap(level + 1);\r\n    const lines = [\r\n        `QueryFile {`\r\n    ];\r\n    this.prepare();\r\n    lines.push(gap + `file: \"` + this.file + `\"`);\r\n    lines.push(gap + `options: ` + npm.utils.toJson(this.options));\r\n    if (this.error) {\r\n        lines.push(gap + `error: ` + this.error.toString(level + 1));\r\n    } else {\r\n        lines.push(gap + `query: \"` + this[QueryFile.$query] + `\"`);\r\n    }\r\n    lines.push(npm.utils.messageGap(level) + `}`);\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(QueryFile, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {QueryFile};\r\n\r\n/**\r\n * @typedef QueryFile.Options\r\n * @description\r\n * A set of configuration options as passed into the {@link QueryFile} constructor.\r\n *\r\n * @property {boolean} debug\r\n * When in debug mode, the query file is checked for its last modification time on every query request,\r\n * so if it changes, the file is read afresh.\r\n *\r\n * The default for this property is `true` when `NODE_ENV` = `development`,\r\n * or `false` otherwise.\r\n *\r\n * @property {boolean|string} minify=false\r\n * Parses and minifies the SQL using $[pg-minify]:\r\n * - `false` - do not use $[pg-minify]\r\n * - `true` - use $[pg-minify] to parse and minify SQL\r\n * - `'after'` - use $[pg-minify] after applying static formatting parameters\r\n *   (option `params`), as opposed to before it (default)\r\n *\r\n * If option `compress` is set, then the default for `minify` is `true`.\r\n *\r\n * Failure to parse SQL will result in $[SQLParsingError].\r\n *\r\n * @property {boolean} compress=false\r\n * Sets option `compress` as supported by $[pg-minify], to uglify the SQL:\r\n * - `false` - no compression to be applied, keep minimum spaces for easier read\r\n * - `true` - remove all unnecessary spaces from SQL\r\n *\r\n * This option has no meaning, if `minify` is explicitly set to `false`. However, if `minify` is not\r\n * specified and `compress` is specified as `true`, then `minify` defaults to `true`.\r\n *\r\n * @property {array|object|value} params\r\n *\r\n * Static formatting parameters to be applied to the SQL, using the same method {@link formatting.format as.format},\r\n * but with option `partial` = `true`.\r\n *\r\n * Most of the time query formatting is fully dynamic, and applied just before executing the query.\r\n * In some cases though you may need to pre-format SQL with static values. Examples of it can be a\r\n * schema name, or a configurable table name.\r\n *\r\n * This option makes two-step SQL formatting easy: you can pre-format the SQL initially, and then\r\n * apply the second-step dynamic formatting when executing the query.\r\n *\r\n * @property {boolean} noWarnings=false\r\n * Suppresses all warnings produced by the class. It is not recommended for general use, only in specific tests\r\n * that may require it.\r\n *\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n * @alias queryResult\r\n * @readonly\r\n * @description\r\n * **Query Result Mask**\r\n *\r\n * Binary mask that represents the number of rows expected from a query method,\r\n * used by generic {@link Database#query query} method, plus {@link Database#func func}.\r\n *\r\n * The mask is always the last optional parameter, which defaults to `queryResult.any`.\r\n *\r\n * Any combination of flags is supported, except for `one + many`.\r\n *\r\n * The type is available from the library's root: `pgp.queryResult`.\r\n *\r\n * @see {@link Database#query Database.query}, {@link Database#func Database.func}\r\n */\r\nconst queryResult = {\r\n    /** Single row is expected, to be resolved as a single row-object. */\r\n    one: 1,\r\n    /** One or more rows expected, to be resolved as an array, with at least 1 row-object. */\r\n    many: 2,\r\n    /** Expecting no rows, to be resolved with `null`. */\r\n    none: 4,\r\n    /** `many|none` - any result is expected, to be resolved with an array of rows-objects. */\r\n    any: 6\r\n};\r\n\r\nmodule.exports = {queryResult};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Events} = require(`./events`);\r\nconst {QueryFile} = require(`./query-file`);\r\nconst {ServerFormatting, PreparedStatement, ParameterizedQuery} = require(`./types`);\r\nconst {SpecialQuery} = require(`./special-query`);\r\nconst {queryResult} = require(`./query-result`);\r\n\r\nconst npm = {\r\n    util: require(`util`),\r\n    utils: require(`./utils`),\r\n    formatting: require(`./formatting`),\r\n    errors: require(`./errors`),\r\n    stream: require(`./stream`),\r\n    text: require(`./text`)\r\n};\r\n\r\nconst QueryResultError = npm.errors.QueryResultError,\r\n    InternalError = npm.utils.InternalError,\r\n    qrec = npm.errors.queryResultErrorCode;\r\n\r\nconst badMask = queryResult.one | queryResult.many; // unsupported combination bit-mask;\r\n\r\n//////////////////////////////\r\n// Generic query method;\r\nfunction $query(ctx, query, values, qrm, config) {\r\n\r\n    const special = qrm instanceof SpecialQuery && qrm;\r\n    const $p = config.promise;\r\n\r\n    if (special && special.isStream) {\r\n        return npm.stream.call(this, ctx, query, values, config);\r\n    }\r\n\r\n    const opt = ctx.options,\r\n        capSQL = opt.capSQL;\r\n\r\n    let error, entityType,\r\n        pgFormatting = opt.pgFormatting,\r\n        params = pgFormatting ? values : undefined;\r\n\r\n    if (typeof query === `function`) {\r\n        try {\r\n            query = npm.formatting.resolveFunc(query, values);\r\n        } catch (e) {\r\n            error = e;\r\n            params = values;\r\n            query = npm.util.inspect(query);\r\n        }\r\n    }\r\n\r\n    if (!error && !query) {\r\n        error = new TypeError(npm.text.invalidQuery);\r\n    }\r\n\r\n    if (!error && typeof query === `object`) {\r\n        if (query instanceof QueryFile) {\r\n            query.prepare();\r\n            if (query.error) {\r\n                error = query.error;\r\n                query = query.file;\r\n            } else {\r\n                query = query[QueryFile.$query];\r\n            }\r\n        } else {\r\n            if (`entity` in query) {\r\n                entityType = query.type;\r\n                query = query.entity; // query is a function name;\r\n            } else {\r\n                if (query instanceof ServerFormatting) {\r\n                    pgFormatting = true;\r\n                } else {\r\n                    if (`name` in query) {\r\n                        query = new PreparedStatement(query);\r\n                        pgFormatting = true;\r\n                    } else {\r\n                        if (`text` in query) {\r\n                            query = new ParameterizedQuery(query);\r\n                            pgFormatting = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (query instanceof ServerFormatting && !npm.utils.isNull(values)) {\r\n                    query.values = values;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!error) {\r\n        if (!pgFormatting && !npm.utils.isText(query)) {\r\n            const errTxt = entityType ? (entityType === `func` ? npm.text.invalidFunction : npm.text.invalidProc) : npm.text.invalidQuery;\r\n            error = new TypeError(errTxt);\r\n        }\r\n        if (query instanceof ServerFormatting) {\r\n            const qp = query.parse();\r\n            if (qp instanceof Error) {\r\n                error = qp;\r\n            } else {\r\n                query = qp;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!error && !special) {\r\n        if (npm.utils.isNull(qrm)) {\r\n            qrm = queryResult.any; // default query result;\r\n        } else {\r\n            if (qrm !== parseInt(qrm) || (qrm & badMask) === badMask || qrm < 1 || qrm > 6) {\r\n                error = new TypeError(npm.text.invalidMask);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!error && (!pgFormatting || entityType)) {\r\n        try {\r\n            // use 'pg-promise' implementation of values formatting;\r\n            if (entityType) {\r\n                params = undefined;\r\n                query = npm.formatting.formatEntity(query, values, {capSQL, type: entityType});\r\n            } else {\r\n                query = npm.formatting.formatQuery(query, values);\r\n            }\r\n        } catch (e) {\r\n            if (entityType) {\r\n                let prefix = entityType === `func` ? `select * from` : `call`;\r\n                if (capSQL) {\r\n                    prefix = prefix.toUpperCase();\r\n                }\r\n                query = prefix + ` ` + query + `(...)`;\r\n            } else {\r\n                params = values;\r\n            }\r\n            error = e instanceof Error ? e : new npm.utils.InternalError(e);\r\n        }\r\n    }\r\n\r\n    return $p((resolve, reject) => {\r\n\r\n        if (notifyReject()) {\r\n            return;\r\n        }\r\n        error = Events.query(opt, getContext());\r\n        if (notifyReject()) {\r\n            return;\r\n        }\r\n        try {\r\n            const start = Date.now();\r\n            ctx.db.client.query(query, params, (err, result) => {\r\n                let data, multiResult, lastResult = result;\r\n                if (err) {\r\n                    // istanbul ignore if (auto-testing connectivity issues is too problematic)\r\n                    if (npm.utils.isConnectivityError(err)) {\r\n                        ctx.db.client.$connectionError = err;\r\n                    }\r\n                    error = err;\r\n                } else {\r\n                    multiResult = Array.isArray(result);\r\n                    if (multiResult) {\r\n                        lastResult = result[result.length - 1];\r\n                        for (let i = 0; i < result.length; i++) {\r\n                            const r = result[i];\r\n                            error = Events.receive(opt, r.rows, r, getContext());\r\n                            if (error) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result.duration = Date.now() - start;\r\n                        error = Events.receive(opt, result.rows, result, getContext());\r\n                    }\r\n                }\r\n                if (!error) {\r\n                    data = lastResult;\r\n                    if (special) {\r\n                        if (special.isMultiResult) {\r\n                            data = multiResult ? result : [result]; // method .multiResult() is called\r\n                        }\r\n                        // else, method .result() is called\r\n                    } else {\r\n                        data = data.rows;\r\n                        const len = data.length;\r\n                        if (len) {\r\n                            if (len > 1 && qrm & queryResult.one) {\r\n                                // one row was expected, but returned multiple;\r\n                                error = new QueryResultError(qrec.multiple, lastResult, query, params);\r\n                            } else {\r\n                                if (!(qrm & (queryResult.one | queryResult.many))) {\r\n                                    // no data should have been returned;\r\n                                    error = new QueryResultError(qrec.notEmpty, lastResult, query, params);\r\n                                } else {\r\n                                    if (!(qrm & queryResult.many)) {\r\n                                        data = data[0];\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // no data returned;\r\n                            if (qrm & queryResult.none) {\r\n                                if (qrm & queryResult.one) {\r\n                                    data = null;\r\n                                } else {\r\n                                    data = qrm & queryResult.many ? data : null;\r\n                                }\r\n                            } else {\r\n                                error = new QueryResultError(qrec.noData, lastResult, query, params);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!notifyReject()) {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            // this can only happen as a result of an internal failure within node-postgres,\r\n            // like during a sudden loss of communications, which is impossible to reproduce\r\n            // automatically, so removing it from the test coverage:\r\n            // istanbul ignore next\r\n            error = e;\r\n        }\r\n\r\n        function getContext() {\r\n            let client;\r\n            if (ctx.db) {\r\n                client = ctx.db.client;\r\n            } else {\r\n                error = new Error(npm.text.looseQuery);\r\n            }\r\n            return {\r\n                client, query, params,\r\n                dc: ctx.dc,\r\n                ctx: ctx.ctx\r\n            };\r\n        }\r\n\r\n        notifyReject();\r\n\r\n        function notifyReject() {\r\n            const context = getContext();\r\n            if (error) {\r\n                if (error instanceof InternalError) {\r\n                    error = error.error;\r\n                }\r\n                Events.error(opt, error, context);\r\n                reject(error);\r\n                return true;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = config => {\r\n    return function (ctx, query, values, qrm) {\r\n        return $query.call(this, ctx, query, values, qrm, config);\r\n    };\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst specialQueryType = {\r\n    result: 0,\r\n    multiResult: 1,\r\n    stream: 2\r\n};\r\n\r\nclass SpecialQuery {\r\n    constructor(type) {\r\n        this.isResult = type === specialQueryType.result; // type used implicitly\r\n        this.isStream = type === specialQueryType.stream;\r\n        this.isMultiResult = type === specialQueryType.multiResult;\r\n    }\r\n}\r\n\r\nconst cache = {\r\n    resultQuery: new SpecialQuery(specialQueryType.result),\r\n    multiResultQuery: new SpecialQuery(specialQueryType.multiResult),\r\n    streamQuery: new SpecialQuery(specialQueryType.stream)\r\n};\r\n\r\nmodule.exports = Object.assign({SpecialQuery}, cache);\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Events} = require(`./events`);\r\n\r\nconst npm = {\r\n    utils: require(`./utils`),\r\n    text: require(`./text`)\r\n};\r\n\r\n////////////////////////////////////////////\r\n// Streams query data into any destination,\r\n// with the help of pg-query-stream library.\r\nfunction $stream(ctx, qs, initCB, config) {\r\n\r\n    const $p = config.promise;\r\n\r\n    // istanbul ignore next:\r\n    // we do not provide code coverage for the Native Bindings specifics\r\n    if (ctx.options.pgNative) {\r\n        return $p.reject(new Error(npm.text.nativeStreaming));\r\n    }\r\n    // Stream class was renamed again, see the following issue:\r\n    // https://github.com/brianc/node-postgres/issues/2412\r\n    if (!qs || !qs.constructor || qs.constructor.name !== `QueryStream`) {\r\n        // invalid or missing stream object;\r\n        return $p.reject(new TypeError(npm.text.invalidStream));\r\n    }\r\n    if (qs._reading || qs._closed) {\r\n        // stream object is in the wrong state;\r\n        return $p.reject(new Error(npm.text.invalidStreamState));\r\n    }\r\n    if (typeof initCB !== `function`) {\r\n        // parameter `initCB` must be passed as the initialization callback;\r\n        return $p.reject(new TypeError(npm.text.invalidStreamCB));\r\n    }\r\n\r\n    let error = Events.query(ctx.options, getContext());\r\n\r\n    if (error) {\r\n        error = getError(error);\r\n        Events.error(ctx.options, error, getContext());\r\n        return $p.reject(error);\r\n    }\r\n\r\n    const stream = ctx.db.client.query(qs);\r\n\r\n    stream.on(`data`, onData);\r\n    stream.on(`error`, onError);\r\n    stream.on(`end`, onEnd);\r\n\r\n    try {\r\n        initCB.call(this, stream); // the stream must be initialized during the call;\r\n    } catch (e) {\r\n        release();\r\n        error = getError(e);\r\n        Events.error(ctx.options, error, getContext());\r\n        return $p.reject(error);\r\n    }\r\n\r\n    const start = Date.now();\r\n    let resolve, reject, nRows = 0;\r\n\r\n    function onData(data) {\r\n        nRows++;\r\n        error = Events.receive(ctx.options, [data], undefined, getContext());\r\n        if (error) {\r\n            onError(error);\r\n        }\r\n    }\r\n\r\n    function onError(e) {\r\n        release();\r\n        stream.destroy();\r\n        e = getError(e);\r\n        Events.error(ctx.options, e, getContext());\r\n        reject(e);\r\n    }\r\n\r\n    function onEnd() {\r\n        release();\r\n        resolve({\r\n            processed: nRows, // total number of rows processed;\r\n            duration: Date.now() - start // duration, in milliseconds;\r\n        });\r\n    }\r\n\r\n    function release() {\r\n        stream.removeListener(`data`, onData);\r\n        stream.removeListener(`error`, onError);\r\n        stream.removeListener(`end`, onEnd);\r\n    }\r\n\r\n    function getError(e) {\r\n        return e instanceof npm.utils.InternalError ? e.error : e;\r\n    }\r\n\r\n    function getContext() {\r\n        let client;\r\n        if (ctx.db) {\r\n            client = ctx.db.client;\r\n        } else {\r\n            error = new Error(npm.text.looseQuery);\r\n        }\r\n        return {\r\n            client,\r\n            dc: ctx.dc,\r\n            query: qs.cursor.text,\r\n            params: qs.cursor.values,\r\n            ctx: ctx.ctx\r\n        };\r\n    }\r\n\r\n    return $p((res, rej) => {\r\n        resolve = res;\r\n        reject = rej;\r\n    });\r\n\r\n}\r\n\r\nmodule.exports = $stream;\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Events} = require(`./events`);\r\n\r\nconst npm = {\r\n    spex: require(`spex`),\r\n    utils: require(`./utils`),\r\n    mode: require(`./tx-mode`),\r\n    query: require(`./query`),\r\n    text: require(`./text`)\r\n};\r\n\r\n/**\r\n * @interface Task\r\n * @description\r\n * Extends {@link Database} for an automatic connection session, with methods for executing multiple database queries.\r\n *\r\n * The type isn't available directly, it can only be created via methods {@link Database#task Database.task}, {@link Database#tx Database.tx},\r\n * or their derivations.\r\n *\r\n * When executing more than one request at a time, one should allocate and release the connection only once,\r\n * while executing all the required queries within the same connection session. More importantly, a transaction\r\n * can only work within a single connection.\r\n *\r\n * This is an interface for tasks/transactions to implement a connection session, during which you can\r\n * execute multiple queries against the same connection that's released automatically when the task/transaction is finished.\r\n *\r\n * Each task/transaction manages the connection automatically. When executed on the root {@link Database} object, the connection\r\n * is allocated from the pool, and once the method's callback has finished, the connection is released back to the pool.\r\n * However, when invoked inside another task or transaction, the method reuses the parent connection.\r\n *\r\n * @see\r\n * {@link Task#ctx ctx},\r\n * {@link Task#batch batch},\r\n * {@link Task#sequence sequence},\r\n * {@link Task#page page}\r\n *\r\n * @example\r\n * db.task(t => {\r\n *       // t = task protocol context;\r\n *       // t.ctx = Task Context;\r\n *       return t.one('select * from users where id=$1', 123)\r\n *           .then(user => {\r\n *               return t.any('select * from events where login=$1', user.name);\r\n *           });\r\n *   })\r\n * .then(events => {\r\n *       // success;\r\n *   })\r\n * .catch(error => {\r\n *       // error;\r\n *   });\r\n *\r\n */\r\nfunction Task(ctx, tag, isTX, config) {\r\n\r\n    const $p = config.promise;\r\n\r\n    /**\r\n     * @member {TaskContext} Task#ctx\r\n     * @readonly\r\n     * @description\r\n     * Task/Transaction Context object - contains individual properties for each task/transaction.\r\n     *\r\n     * @see event {@link event:query query}\r\n     *\r\n     * @example\r\n     *\r\n     * db.task(t => {\r\n     *     return t.ctx; // task context object\r\n     * })\r\n     *     .then(ctx => {\r\n     *         console.log('Task Duration:', ctx.duration);\r\n     *     });\r\n     *\r\n     * @example\r\n     *\r\n     * db.tx(t => {\r\n     *     return t.ctx; // transaction context object\r\n     * })\r\n     *     .then(ctx => {\r\n     *         console.log('Transaction Duration:', ctx.duration);\r\n     *     });\r\n     */\r\n    this.ctx = ctx.ctx = {}; // task context object;\r\n\r\n    npm.utils.addReadProp(this.ctx, `isTX`, isTX);\r\n\r\n    if (`context` in ctx) {\r\n        npm.utils.addReadProp(this.ctx, `context`, ctx.context);\r\n    }\r\n\r\n    npm.utils.addReadProp(this.ctx, `connected`, !ctx.db);\r\n    npm.utils.addReadProp(this.ctx, `tag`, tag);\r\n    npm.utils.addReadProp(this.ctx, `dc`, ctx.dc);\r\n    npm.utils.addReadProp(this.ctx, `level`, ctx.level);\r\n    npm.utils.addReadProp(this.ctx, `inTransaction`, ctx.inTransaction);\r\n\r\n    if (isTX) {\r\n        npm.utils.addReadProp(this.ctx, `txLevel`, ctx.txLevel);\r\n    }\r\n\r\n    npm.utils.addReadProp(this.ctx, `parent`, ctx.parentCtx);\r\n\r\n    // generic query method;\r\n    this.query = function (query, values, qrm) {\r\n        if (!ctx.db) {\r\n            return $p.reject(new Error(npm.text.looseQuery));\r\n        }\r\n        return config.$npm.query.call(this, ctx, query, values, qrm);\r\n    };\r\n\r\n    /**\r\n     * @method Task#batch\r\n     * @description\r\n     * Settles a predefined array of mixed values by redirecting to method $[spex.batch].\r\n     *\r\n     * For complete method documentation see $[spex.batch].\r\n     *\r\n     * @param {array} values\r\n     * @param {Object} [options]\r\n     * Optional Parameters.\r\n     * @param {function} [options.cb]\r\n     *\r\n     * @returns {external:Promise}\r\n     */\r\n    this.batch = function (values, options) {\r\n        return config.$npm.spex.batch.call(this, values, options);\r\n    };\r\n\r\n    /**\r\n     * @method Task#page\r\n     * @description\r\n     * Resolves a dynamic sequence of arrays/pages with mixed values, by redirecting to method $[spex.page].\r\n     *\r\n     * For complete method documentation see $[spex.page].\r\n     *\r\n     * @param {function} source\r\n     * @param {Object} [options]\r\n     * Optional Parameters.\r\n     * @param {function} [options.dest]\r\n     * @param {number} [options.limit=0]\r\n     *\r\n     * @returns {external:Promise}\r\n     */\r\n    this.page = function (source, options) {\r\n        return config.$npm.spex.page.call(this, source, options);\r\n    };\r\n\r\n    /**\r\n     * @method Task#sequence\r\n     * @description\r\n     * Resolves a dynamic sequence of mixed values by redirecting to method $[spex.sequence].\r\n     *\r\n     * For complete method documentation see $[spex.sequence].\r\n     *\r\n     * @param {function} source\r\n     * @param {Object} [options]\r\n     * Optional Parameters.\r\n     * @param {function} [options.dest]\r\n     * @param {number} [options.limit=0]\r\n     * @param {boolean} [options.track=false]\r\n     *\r\n     * @returns {external:Promise}\r\n     */\r\n    this.sequence = function (source, options) {\r\n        return config.$npm.spex.sequence.call(this, source, options);\r\n    };\r\n\r\n}\r\n\r\n/**\r\n * @private\r\n * @method Task.callback\r\n * Callback invocation helper.\r\n *\r\n * @param ctx\r\n * @param obj\r\n * @param cb\r\n * @param config\r\n * @returns {Promise.<TResult>}\r\n */\r\nconst callback = (ctx, obj, cb, config) => {\r\n\r\n    const $p = config.promise;\r\n    let result;\r\n\r\n    try {\r\n        if (cb.constructor.name === `GeneratorFunction`) {\r\n            // v9.0 dropped all support for ES6 generator functions;\r\n            // Clients should use the new ES7 async/await syntax.\r\n            throw new TypeError(`ES6 generator functions are no longer supported!`);\r\n        }\r\n        result = cb.call(obj, obj); // invoking the callback function;\r\n    } catch (err) {\r\n        Events.error(ctx.options, err, {\r\n            client: ctx.db && ctx.db.client, // the error can be due to loss of connectivity\r\n            dc: ctx.dc,\r\n            ctx: ctx.ctx\r\n        });\r\n        return $p.reject(err); // reject with the error;\r\n    }\r\n    if (result && typeof result.then === `function`) {\r\n        return result; // result is a valid promise object;\r\n    }\r\n    return $p.resolve(result);\r\n};\r\n\r\n/**\r\n * @private\r\n * @method Task.execute\r\n * Executes a task.\r\n *\r\n * @param ctx\r\n * @param obj\r\n * @param isTX\r\n * @param config\r\n * @returns {Promise.<TResult>}\r\n */\r\nconst execute = (ctx, obj, isTX, config) => {\r\n\r\n    const $p = config.promise;\r\n\r\n    // updates the task context and notifies the client;\r\n    function update(start, success, result) {\r\n        const c = ctx.ctx;\r\n        if (start) {\r\n            npm.utils.addReadProp(c, `start`, new Date());\r\n        } else {\r\n            c.finish = new Date();\r\n            c.success = success;\r\n            c.result = result;\r\n            c.duration = c.finish - c.start;\r\n            npm.utils.lock(c, true);\r\n        }\r\n        (isTX ? Events.transact : Events.task)(ctx.options, {\r\n            client: ctx.db && ctx.db.client, // loss of connectivity is possible at this point\r\n            dc: ctx.dc,\r\n            ctx: c\r\n        });\r\n    }\r\n\r\n    let cbData, cbReason, success,\r\n        spName; // Save-Point Name;\r\n\r\n    const capSQL = ctx.options.capSQL; // capitalize sql;\r\n\r\n    update(true);\r\n\r\n    if (isTX) {\r\n        // executing a transaction;\r\n        spName = `sp_${ctx.txLevel}_${ctx.nextTxCount}`;\r\n        return begin()\r\n            .then(() => callback(ctx, obj, ctx.cb, config)\r\n                .then(data => {\r\n                    cbData = data; // save callback data;\r\n                    success = true;\r\n                    return commit();\r\n                }, err => {\r\n                    cbReason = err; // save callback failure reason;\r\n                    return rollback();\r\n                })\r\n                .then(() => {\r\n                    if (success) {\r\n                        update(false, true, cbData);\r\n                        return cbData;\r\n                    }\r\n                    update(false, false, cbReason);\r\n                    return $p.reject(cbReason);\r\n                },\r\n                err => {\r\n                    // either COMMIT or ROLLBACK has failed, which is impossible\r\n                    // to replicate in a test environment, so skipping from the test;\r\n                    // istanbul ignore next:\r\n                    update(false, false, err);\r\n                    // istanbul ignore next:\r\n                    return $p.reject(err);\r\n                }),\r\n            err => {\r\n                // BEGIN has failed, which is impossible to replicate in a test\r\n                // environment, so skipping the whole block from the test;\r\n                // istanbul ignore next:\r\n                update(false, false, err);\r\n                // istanbul ignore next:\r\n                return $p.reject(err);\r\n            });\r\n    }\r\n\r\n    function begin() {\r\n        if (!ctx.txLevel && ctx.mode instanceof npm.mode.TransactionMode) {\r\n            return exec(ctx.mode.begin(capSQL), `savepoint`);\r\n        }\r\n        return exec(`begin`, `savepoint`);\r\n    }\r\n\r\n    function commit() {\r\n        return exec(`commit`, `release savepoint`);\r\n    }\r\n\r\n    function rollback() {\r\n        return exec(`rollback`, `rollback to savepoint`);\r\n    }\r\n\r\n    function exec(top, nested) {\r\n        if (ctx.txLevel) {\r\n            return obj.none((capSQL ? nested.toUpperCase() : nested) + ` ` + spName);\r\n        }\r\n        return obj.none(capSQL ? top.toUpperCase() : top);\r\n    }\r\n\r\n    // executing a task;\r\n    return callback(ctx, obj, ctx.cb, config)\r\n        .then(data => {\r\n            update(false, true, data);\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            update(false, false, error);\r\n            return $p.reject(error);\r\n        });\r\n};\r\n\r\nmodule.exports = config => {\r\n    const npmLocal = config.$npm;\r\n\r\n    // istanbul ignore next:\r\n    // we keep 'npm.query' initialization here, even though it is always\r\n    // pre-initialized by the 'database' module, for integrity purpose.\r\n    npmLocal.query = npmLocal.query || npm.query(config);\r\n    npmLocal.spex = npmLocal.spex || npm.spex(config.promiseLib);\r\n\r\n    return {\r\n        Task, execute, callback\r\n    };\r\n};\r\n\r\n/**\r\n * @typedef TaskContext\r\n * @description\r\n * Task/Transaction Context used via property {@link Task#ctx ctx} inside tasks (methods {@link Database#task Database.task} and {@link Database#taskIf Database.taskIf})\r\n * and transactions (methods {@link Database#tx Database.tx} and {@link Database#txIf Database.txIf}).\r\n *\r\n * Properties `context`, `connected`, `parent`, `level`, `dc`, `isTX`, `tag`, `start`, `useCount` and `serverVersion` are set just before the operation has started,\r\n * while properties `finish`, `duration`, `success` and `result` are set immediately after the operation has finished.\r\n *\r\n * @property {*} context\r\n * If the operation was invoked with a calling context - `task.call(context,...)` or `tx.call(context,...)`,\r\n * this property is set with the context that was passed in. Otherwise, the property doesn't exist.\r\n *\r\n * @property {*} dc\r\n * _Database Context_ that was passed into the {@link Database} object during construction.\r\n *\r\n * @property {boolean} isTX\r\n * Indicates whether this operation is a transaction (as opposed to a regular task).\r\n *\r\n * @property {number} duration\r\n * Number of milliseconds consumed by the operation.\r\n *\r\n * Set after the operation has finished, it is simply a shortcut for `finish - start`.\r\n *\r\n * @property {number} level\r\n * Task nesting level, starting from 0, counting both regular tasks and transactions.\r\n *\r\n * @property {number} txLevel\r\n * Transaction nesting level, starting from 0. Transactions on level 0 use `BEGIN/COMMIT/ROLLBACK`,\r\n * while transactions on nested levels use the corresponding `SAVEPOINT` commands.\r\n *\r\n * This property exists only within the context of a transaction (`isTX = true`).\r\n *\r\n * @property {boolean} inTransaction\r\n * Available in both tasks and transactions, it simplifies checking when there is a transaction\r\n * going on either on this level or above.\r\n *\r\n * For example, when you want to check for a containing transaction while inside a task, and\r\n * only start a transaction when there is none yet.\r\n *\r\n * @property {TaskContext} parent\r\n * Parent task/transaction context, or `null` when it is top-level.\r\n *\r\n * @property {boolean} connected\r\n * Indicates when the task/transaction acquired the connection on its own (`connected = true`), and will release it once\r\n * the operation has finished. When the value is `false`, the operation is reusing an existing connection.\r\n *\r\n * @property {*} tag\r\n * Tag value as it was passed into the task. See methods {@link Database#task task} and {@link Database#tx tx}.\r\n *\r\n * @property {Date} start\r\n * Date/Time of when this operation started the execution.\r\n *\r\n * @property {number} useCount\r\n * Number of times the connection has been previously used, starting with 0 for a freshly\r\n * allocated physical connection.\r\n *\r\n * @property {string} serverVersion\r\n * **(Added in v10.1.0)** - Version of the PostgreSQL server to which we are connected.\r\n * Not available with $[Native Bindings].\r\n *\r\n * @property {Date} finish\r\n * Once the operation has finished, this property is set to the Data/Time of when it happened.\r\n *\r\n * @property {boolean} success\r\n * Once the operation has finished, this property indicates whether it was successful.\r\n *\r\n * @property {*} result\r\n * Once the operation has finished, this property contains the result, depending on property `success`:\r\n * - data resolved by the operation, if `success = true`\r\n * - error / rejection reason, if `success = false`\r\n *\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\n/* All error messages used in the module */\r\n\r\nconst streamVersion = require(`../package.json`)\r\n    .devDependencies[`pg-query-stream`];\r\n\r\nmodule.exports = {\r\n    nativeError: `Failed to initialize Native Bindings.`,\r\n\r\n    /* Database errors */\r\n    queryDisconnected: `Cannot execute a query on a disconnected client.`,\r\n    invalidQuery: `Invalid query format.`,\r\n    invalidFunction: `Invalid function name.`,\r\n    invalidProc: `Invalid procedure name.`,\r\n    invalidMask: `Invalid Query Result Mask specified.`,\r\n    looseQuery: `Querying against a released or lost connection.`,\r\n\r\n    /* result errors */\r\n    notEmpty: `No return data was expected.`,\r\n    noData: `No data returned from the query.`,\r\n    multiple: `Multiple rows were not expected.`,\r\n\r\n    /* streaming support */\r\n    nativeStreaming: `Streaming doesn't work with Native Bindings.`,\r\n    invalidStream: `Invalid or missing stream object: pg-query-stream >= v${streamVersion} was expected`,\r\n    invalidStreamState: `Invalid stream state.`,\r\n    invalidStreamCB: `Invalid or missing stream initialization callback.`,\r\n\r\n    /* connection errors */\r\n    poolDestroyed: `Connection pool of the database object has been destroyed.`,\r\n    clientEnd: `Abnormal client.end() call, due to invalid code or failed server connection.`\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {InnerState} = require(`./inner-state`);\r\nconst {addInspection} = require(`./utils`);\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\n/**\r\n * @enum {number}\r\n * @alias txMode.isolationLevel\r\n * @readonly\r\n * @summary Transaction Isolation Level.\r\n * @description\r\n * The type is available from the {@link txMode} namespace.\r\n *\r\n * @see $[Transaction Isolation]\r\n */\r\nconst isolationLevel = {\r\n    /** Isolation level not specified. */\r\n    none: 0,\r\n\r\n    /** ISOLATION LEVEL SERIALIZABLE */\r\n    serializable: 1,\r\n\r\n    /** ISOLATION LEVEL REPEATABLE READ */\r\n    repeatableRead: 2,\r\n\r\n    /** ISOLATION LEVEL READ COMMITTED */\r\n    readCommitted: 3\r\n\r\n    // From the official documentation: http://www.postgresql.org/docs/9.5/static/sql-set-transaction.html\r\n    // The SQL standard defines one additional level, READ UNCOMMITTED. In PostgreSQL READ UNCOMMITTED is treated as READ COMMITTED.\r\n    // => skipping `READ UNCOMMITTED`.\r\n};\r\n\r\n/**\r\n * @class txMode.TransactionMode\r\n * @description\r\n * Constructs a complete transaction-opening `BEGIN` command, from these options:\r\n *  - isolation level\r\n *  - access mode\r\n *  - deferrable mode\r\n *\r\n * The type is available from the {@link txMode} namespace.\r\n *\r\n * @param {} [options]\r\n * Transaction Mode options.\r\n *\r\n * @param {txMode.isolationLevel} [options.tiLevel]\r\n * Transaction Isolation Level.\r\n *\r\n * @param {boolean} [options.readOnly]\r\n * Sets transaction access mode based on the read-only flag:\r\n *  - `undefined` - access mode not specified (default)\r\n *  - `true` - access mode is set to `READ ONLY`\r\n *  - `false` - access mode is set to `READ WRITE`\r\n *\r\n * @param {boolean} [options.deferrable]\r\n * Sets transaction deferrable mode based on the boolean value:\r\n *  - `undefined` - deferrable mode not specified (default)\r\n *  - `true` - mode is set to `DEFERRABLE`\r\n *  - `false` - mode is set to `NOT DEFERRABLE`\r\n *\r\n * It is used only when `tiLevel`=`isolationLevel.serializable`\r\n * and `readOnly`=`true`, or else it is ignored.\r\n *\r\n * @returns {txMode.TransactionMode}\r\n *\r\n * @see $[BEGIN], {@link txMode.isolationLevel}\r\n *\r\n * @example\r\n *\r\n * const {TransactionMode, isolationLevel} = pgp.txMode;\r\n *\r\n * // Create a reusable transaction mode (serializable + read-only + deferrable):\r\n * const mode = new TransactionMode({\r\n *     tiLevel: isolationLevel.serializable,\r\n *     readOnly: true,\r\n *     deferrable: true\r\n * });\r\n *\r\n * db.tx({mode}, t => {\r\n *     return t.any('SELECT * FROM table');\r\n * })\r\n *     .then(data => {\r\n *         // success;\r\n *     })\r\n *     .catch(error => {\r\n *         // error\r\n *     });\r\n *\r\n * // Instead of the default BEGIN, such transaction will start with:\r\n *\r\n * // BEGIN ISOLATION LEVEL SERIALIZABLE READ ONLY DEFERRABLE\r\n *\r\n */\r\nclass TransactionMode extends InnerState {\r\n\r\n    constructor(options) {\r\n        options = assertOptions(options, [`tiLevel`, `deferrable`, `readOnly`]);\r\n        const {readOnly, deferrable} = options;\r\n        let {tiLevel} = options;\r\n        let level, accessMode, deferrableMode, begin = `begin`;\r\n        tiLevel = (tiLevel > 0) ? parseInt(tiLevel) : 0;\r\n\r\n        if (tiLevel > 0 && tiLevel < 4) {\r\n            const values = [`serializable`, `repeatable read`, `read committed`];\r\n            level = `isolation level ` + values[tiLevel - 1];\r\n        }\r\n        if (readOnly) {\r\n            accessMode = `read only`;\r\n        } else {\r\n            if (readOnly !== undefined) {\r\n                accessMode = `read write`;\r\n            }\r\n        }\r\n        // From the official documentation: http://www.postgresql.org/docs/9.5/static/sql-set-transaction.html\r\n        // The DEFERRABLE transaction property has no effect unless the transaction is also SERIALIZABLE and READ ONLY\r\n        if (tiLevel === isolationLevel.serializable && readOnly) {\r\n            if (deferrable) {\r\n                deferrableMode = `deferrable`;\r\n            } else {\r\n                if (deferrable !== undefined) {\r\n                    deferrableMode = `not deferrable`;\r\n                }\r\n            }\r\n        }\r\n        if (level) {\r\n            begin += ` ` + level;\r\n        }\r\n        if (accessMode) {\r\n            begin += ` ` + accessMode;\r\n        }\r\n        if (deferrableMode) {\r\n            begin += ` ` + deferrableMode;\r\n        }\r\n\r\n        super({begin, capBegin: begin.toUpperCase()});\r\n    }\r\n\r\n    /**\r\n     * @method txMode.TransactionMode#begin\r\n     * @description\r\n     * Returns a complete BEGIN statement, according to all the parameters passed into the class.\r\n     *\r\n     * This method is primarily for internal use by the library.\r\n     *\r\n     * @param {boolean} [cap=false]\r\n     * Indicates whether the returned SQL must be capitalized.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    begin(cap) {\r\n        return cap ? this._inner.capBegin : this._inner.begin;\r\n    }\r\n}\r\n\r\naddInspection(TransactionMode, function () {\r\n    return this.begin(true);\r\n});\r\n\r\n/**\r\n * @namespace txMode\r\n * @description\r\n * Transaction Mode namespace, available as `pgp.txMode`, before and after initializing the library.\r\n *\r\n * Extends the default `BEGIN` with Transaction Mode parameters:\r\n *  - isolation level\r\n *  - access mode\r\n *  - deferrable mode\r\n *\r\n * @property {function} TransactionMode\r\n * {@link txMode.TransactionMode TransactionMode} class constructor.\r\n *\r\n * @property {txMode.isolationLevel} isolationLevel\r\n * Transaction Isolation Level enumerator\r\n *\r\n * @see $[BEGIN]\r\n */\r\nmodule.exports = {\r\n    isolationLevel,\r\n    TransactionMode\r\n};\r\n\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ServerFormatting} = require(`./server-formatting`);\r\nconst {PreparedStatement} = require(`./prepared-statement`);\r\nconst {ParameterizedQuery} = require(`./parameterized-query`);\r\n\r\nmodule.exports = {\r\n    ServerFormatting,\r\n    PreparedStatement,\r\n    ParameterizedQuery\r\n};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ServerFormatting} = require(`./server-formatting`);\r\nconst {ParameterizedQueryError} = require(`../errors`);\r\nconst {QueryFile} = require(`../query-file`);\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    EOL: require(`os`).EOL,\r\n    utils: require(`../utils`)\r\n};\r\n\r\n/**\r\n * @class ParameterizedQuery\r\n * @description\r\n * Constructs a new {@link ParameterizedQuery} object. All properties can also be set after the object's construction.\r\n *\r\n * This type extends the basic `{text, values}` object, i.e. when the basic object is used with a query method,\r\n * a new {@link ParameterizedQuery} object is created in its place.\r\n *\r\n * The type can be used in place of the `query` parameter, with any query method directly.\r\n *\r\n * The type is available from the library's root: `pgp.ParameterizedQuery`.\r\n *\r\n * @param {string|QueryFile|Object} [options]\r\n * Object configuration options / properties.\r\n *\r\n * @param {string|QueryFile} [options.text] - See property {@link ParameterizedQuery#text text}.\r\n * @param {array} [options.values] - See property {@link ParameterizedQuery#values values}.\r\n * @param {boolean} [options.binary] - See property {@link ParameterizedQuery#binary binary}.\r\n * @param {string} [options.rowMode] - See property {@link ParameterizedQuery#rowMode rowMode}.\r\n *\r\n * @returns {ParameterizedQuery}\r\n *\r\n * @see\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError}\r\n *\r\n * @example\r\n *\r\n * const {ParameterizedQuery: PQ} = require('pg-promise');\r\n *\r\n * // Creating a complete Parameterized Query with parameters:\r\n * const findUser = new PQ({text: 'SELECT * FROM Users WHERE id = $1', values: [123]});\r\n *\r\n * db.one(findUser)\r\n *     .then(user => {\r\n *         // user found;\r\n *     })\r\n *     .catch(error => {\r\n *         // error;\r\n *     });\r\n *\r\n * @example\r\n *\r\n * const {ParameterizedQuery: PQ} = require('pg-promise');\r\n *\r\n * // Creating a reusable Parameterized Query without values:\r\n * const addUser = new PQ('INSERT INTO Users(name, age) VALUES($1, $2)');\r\n *\r\n * // setting values explicitly:\r\n * addUser.values = ['John', 30];\r\n *\r\n * db.none(addUser)\r\n *     .then(() => {\r\n *         // user added;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n *\r\n * // setting values implicitly, by passing them into the query method:\r\n * db.none(addUser, ['Mike', 25])\r\n *     .then(() => {\r\n *         // user added;\r\n *     })\r\n *     .catch(error=> {\r\n *         // error;\r\n *     });\r\n */\r\nclass ParameterizedQuery extends ServerFormatting {\r\n    constructor(options) {\r\n        if (typeof options === `string` || options instanceof QueryFile) {\r\n            options = {\r\n                text: options\r\n            };\r\n        } else {\r\n            options = assertOptions(options, [`text`, `values`, `binary`, `rowMode`]);\r\n        }\r\n        super(options);\r\n    }\r\n}\r\n\r\n/**\r\n * @method ParameterizedQuery#parse\r\n * @description\r\n * Parses the current object and returns a simple `{text, values}`, if successful,\r\n * or else it returns a {@link errors.ParameterizedQueryError ParameterizedQueryError} object.\r\n *\r\n * This method is primarily for internal use by the library.\r\n *\r\n * @returns {{text, values}|errors.ParameterizedQueryError}\r\n */\r\nParameterizedQuery.prototype.parse = function () {\r\n\r\n    const _i = this._inner, options = _i.options;\r\n    const qf = options.text instanceof QueryFile ? options.text : null;\r\n\r\n    if (!_i.changed && !qf) {\r\n        return _i.target;\r\n    }\r\n\r\n    const errors = [], values = _i.target.values;\r\n    _i.target = {\r\n        text: options.text\r\n    };\r\n    _i.changed = true;\r\n    _i.currentError = undefined;\r\n\r\n    if (qf) {\r\n        qf.prepare();\r\n        if (qf.error) {\r\n            errors.push(qf.error);\r\n        } else {\r\n            _i.target.text = qf[QueryFile.$query];\r\n        }\r\n    }\r\n\r\n    if (!npm.utils.isText(_i.target.text)) {\r\n        errors.push(`Property 'text' must be a non-empty text string.`);\r\n    }\r\n\r\n    if (!npm.utils.isNull(values)) {\r\n        _i.target.values = values;\r\n    }\r\n\r\n    if (options.binary !== undefined) {\r\n        _i.target.binary = !!options.binary;\r\n    }\r\n\r\n    if (options.rowMode !== undefined) {\r\n        _i.target.rowMode = options.rowMode;\r\n    }\r\n\r\n    if (errors.length) {\r\n        return _i.currentError = new ParameterizedQueryError(errors[0], _i.target);\r\n    }\r\n\r\n    _i.changed = false;\r\n\r\n    return _i.target;\r\n};\r\n\r\n/**\r\n * @method ParameterizedQuery#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object's current state.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nParameterizedQuery.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap = npm.utils.messageGap(level + 1);\r\n    const pq = this.parse();\r\n    const lines = [\r\n        `ParameterizedQuery {`\r\n    ];\r\n    if (npm.utils.isText(pq.text)) {\r\n        lines.push(gap + `text: \"` + pq.text + `\"`);\r\n    }\r\n    if (this.values !== undefined) {\r\n        lines.push(gap + `values: ` + npm.utils.toJson(this.values));\r\n    }\r\n    if (this.binary !== undefined) {\r\n        lines.push(gap + `binary: ` + npm.utils.toJson(this.binary));\r\n    }\r\n    if (this.rowMode !== undefined) {\r\n        lines.push(gap + `rowMode: ` + npm.utils.toJson(this.rowMode));\r\n    }\r\n    if (this.error !== undefined) {\r\n        lines.push(gap + `error: ` + this.error.toString(level + 1));\r\n    }\r\n    lines.push(npm.utils.messageGap(level) + `}`);\r\n    return lines.join(npm.EOL);\r\n};\r\n\r\nmodule.exports = {ParameterizedQuery};\r\n\r\n/**\r\n * @name ParameterizedQuery#text\r\n * @type {string|QueryFile}\r\n * @description\r\n * A non-empty query string or a {@link QueryFile} object.\r\n *\r\n * Only the basic variables (`$1`, `$2`, etc) can be used in the query, because _Parameterized Queries_\r\n * are formatted on the server side.\r\n */\r\n\r\n/**\r\n * @name ParameterizedQuery#values\r\n * @type {array}\r\n * @description\r\n * Query formatting parameters, depending on the type:\r\n *\r\n * - `null` / `undefined` means the query has no formatting parameters\r\n * - `Array` - it is an array of formatting parameters\r\n * - None of the above, means it is a single formatting value, which\r\n *   is then automatically wrapped into an array\r\n */\r\n\r\n/**\r\n * @name ParameterizedQuery#binary\r\n * @type {boolean}\r\n * @default undefined\r\n * @description\r\n * Activates binary result mode. The default is the text mode.\r\n *\r\n * @see {@link http://www.postgresql.org/docs/devel/static/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY Extended Query}\r\n */\r\n\r\n/**\r\n * @name ParameterizedQuery#rowMode\r\n * @type {string}\r\n * @default undefined\r\n * @description\r\n * Changes the way data arrives to the client, with only one value supported by $[pg]:\r\n *  - `array` will make all data rows arrive as arrays of values. By default, rows arrive as objects.\r\n */\r\n\r\n/**\r\n * @name ParameterizedQuery#error\r\n * @type {errors.ParameterizedQueryError}\r\n * @default undefined\r\n * @readonly\r\n * @description\r\n * When in an error state, it is set to a {@link errors.ParameterizedQueryError ParameterizedQueryError} object. Otherwise, it is `undefined`.\r\n *\r\n * This property is primarily for internal use by the library.\r\n */\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {ServerFormatting} = require(`./server-formatting`);\r\nconst {PreparedStatementError} = require(`../errors`);\r\nconst {QueryFile} = require(`../query-file`);\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    EOL: require(`os`).EOL,\r\n    utils: require(`../utils`)\r\n};\r\n\r\n/**\r\n * @class PreparedStatement\r\n * @description\r\n * Constructs a new $[Prepared Statement] object. All properties can also be set after the object's construction.\r\n *\r\n * This type extends the basic `{name, text, values}` object, i.e. when the basic object is used\r\n * with a query method, a new {@link PreparedStatement} object is created in its place.\r\n *\r\n * The type can be used in place of the `query` parameter, with any query method directly.\r\n *\r\n * The type is available from the library's root: `pgp.PreparedStatement`.\r\n *\r\n * @param {Object} [options]\r\n * Object configuration options / properties.\r\n *\r\n * @param {string} [options.name] - See property {@link PreparedStatement#name name}.\r\n * @param {string|QueryFile} [options.text] - See property {@link PreparedStatement#text text}.\r\n * @param {array} [options.values] - See property {@link PreparedStatement#values values}.\r\n * @param {boolean} [options.binary] - See property {@link PreparedStatement#binary binary}.\r\n * @param {string} [options.rowMode] - See property {@link PreparedStatement#rowMode rowMode}.\r\n * @param {number} [options.rows] - See property {@link PreparedStatement#rows rows}.\r\n *\r\n * @returns {PreparedStatement}\r\n *\r\n * @see\r\n * {@link errors.PreparedStatementError PreparedStatementError},\r\n * {@link http://www.postgresql.org/docs/9.6/static/sql-prepare.html PostgreSQL Prepared Statements}\r\n *\r\n * @example\r\n *\r\n * const {PreparedStatement: PS} = require('pg-promise');\r\n *\r\n * // Creating a complete Prepared Statement with parameters:\r\n * const findUser = new PS({name: 'find-user', text: 'SELECT * FROM Users WHERE id = $1', values: [123]});\r\n *\r\n * db.one(findUser)\r\n *     .then(user => {\r\n *         // user found;\r\n *     })\r\n *     .catch(error => {\r\n *         // error;\r\n *     });\r\n *\r\n * @example\r\n *\r\n * const {PreparedStatement: PS} = require('pg-promise');\r\n *\r\n * // Creating a reusable Prepared Statement without values:\r\n * const addUser = new PS({name: 'add-user', text: 'INSERT INTO Users(name, age) VALUES($1, $2)'});\r\n *\r\n * // setting values explicitly:\r\n * addUser.values = ['John', 30];\r\n *\r\n * db.none(addUser)\r\n *     .then(() => {\r\n *         // user added;\r\n *     })\r\n *     .catch(error => {\r\n *         // error;\r\n *     });\r\n *\r\n * // setting values implicitly, by passing them into the query method:\r\n * db.none(addUser, ['Mike', 25])\r\n *     .then(() => {\r\n *         // user added;\r\n *     })\r\n *     .catch(error => {\r\n *         // error;\r\n *     });\r\n */\r\nclass PreparedStatement extends ServerFormatting {\r\n    constructor(options) {\r\n        options = assertOptions(options, [`name`, `text`, `values`, `binary`, `rowMode`, `rows`]);\r\n        super(options);\r\n    }\r\n\r\n    /**\r\n     * @name PreparedStatement#name\r\n     * @type {string}\r\n     * @description\r\n     * An arbitrary name given to this particular prepared statement. It must be unique within a single session and is\r\n     * subsequently used to execute or deallocate a previously prepared statement.\r\n     */\r\n    get name() {\r\n        return this._inner.options.name;\r\n    }\r\n\r\n    set name(value) {\r\n        const _i = this._inner;\r\n        if (value !== _i.options.name) {\r\n            _i.options.name = value;\r\n            _i.changed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name PreparedStatement#rows\r\n     * @type {number}\r\n     * @description\r\n     * Number of rows to return at a time from a Prepared Statement's portal.\r\n     * The default is 0, which means that all rows must be returned at once.\r\n     */\r\n    get rows() {\r\n        return this._inner.options.rows;\r\n    }\r\n\r\n    set rows(value) {\r\n        const _i = this._inner;\r\n        if (value !== _i.options.rows) {\r\n            _i.options.rows = value;\r\n            _i.changed = true;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @method PreparedStatement#parse\r\n * @description\r\n * Parses the current object and returns a simple `{name, text, values}`, if successful,\r\n * or else it returns a {@link errors.PreparedStatementError PreparedStatementError} object.\r\n *\r\n * This method is primarily for internal use by the library.\r\n *\r\n * @returns {{name, text, values}|errors.PreparedStatementError}\r\n */\r\nPreparedStatement.prototype.parse = function () {\r\n\r\n    const _i = this._inner, options = _i.options;\r\n\r\n    const qf = options.text instanceof QueryFile ? options.text : null;\r\n\r\n    if (!_i.changed && !qf) {\r\n        return _i.target;\r\n    }\r\n\r\n    const errors = [], values = _i.target.values;\r\n    _i.target = {\r\n        name: options.name,\r\n        text: options.text\r\n    };\r\n    _i.changed = true;\r\n    _i.currentError = undefined;\r\n\r\n    if (!npm.utils.isText(_i.target.name)) {\r\n        errors.push(`Property 'name' must be a non-empty text string.`);\r\n    }\r\n\r\n    if (qf) {\r\n        qf.prepare();\r\n        if (qf.error) {\r\n            errors.push(qf.error);\r\n        } else {\r\n            _i.target.text = qf[QueryFile.$query];\r\n        }\r\n    }\r\n    if (!npm.utils.isText(_i.target.text)) {\r\n        errors.push(`Property 'text' must be a non-empty text string.`);\r\n    }\r\n\r\n    if (!npm.utils.isNull(values)) {\r\n        _i.target.values = values;\r\n    }\r\n\r\n    if (options.binary !== undefined) {\r\n        _i.target.binary = !!options.binary;\r\n    }\r\n\r\n    if (options.rowMode !== undefined) {\r\n        _i.target.rowMode = options.rowMode;\r\n    }\r\n\r\n    if (options.rows !== undefined) {\r\n        _i.target.rows = options.rows;\r\n    }\r\n\r\n    if (errors.length) {\r\n        return _i.currentError = new PreparedStatementError(errors[0], _i.target);\r\n    }\r\n\r\n    _i.changed = false;\r\n\r\n    return _i.target;\r\n};\r\n\r\n/**\r\n * @method PreparedStatement#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the object's current state.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPreparedStatement.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap = npm.utils.messageGap(level + 1);\r\n    const ps = this.parse();\r\n    const lines = [\r\n        `PreparedStatement {`,\r\n        gap + `name: ` + npm.utils.toJson(this.name)\r\n    ];\r\n    if (npm.utils.isText(ps.text)) {\r\n        lines.push(gap + `text: \"` + ps.text + `\"`);\r\n    }\r\n    if (this.values !== undefined) {\r\n        lines.push(gap + `values: ` + npm.utils.toJson(this.values));\r\n    }\r\n    if (this.binary !== undefined) {\r\n        lines.push(gap + `binary: ` + npm.utils.toJson(this.binary));\r\n    }\r\n    if (this.rowMode !== undefined) {\r\n        lines.push(gap + `rowMode: ` + npm.utils.toJson(this.rowMode));\r\n    }\r\n    if (this.rows !== undefined) {\r\n        lines.push(gap + `rows: ` + npm.utils.toJson(this.rows));\r\n    }\r\n    if (this.error) {\r\n        lines.push(gap + `error: ` + this.error.toString(level + 1));\r\n    }\r\n    lines.push(npm.utils.messageGap(level) + `}`);\r\n    return lines.join(npm.EOL);\r\n};\r\n\r\nmodule.exports = {PreparedStatement};\r\n\r\n/**\r\n * @name PreparedStatement#text\r\n * @type {string|QueryFile}\r\n * @description\r\n * A non-empty query string or a {@link QueryFile} object.\r\n *\r\n * Only the basic variables (`$1`, `$2`, etc) can be used in the query, because $[Prepared Statements]\r\n * are formatted on the server side.\r\n *\r\n * Changing this property for the same {@link PreparedStatement#name name} will have no effect, because queries\r\n * for Prepared Statements are cached by the server, with {@link PreparedStatement#name name} being the cache key.\r\n */\r\n\r\n/**\r\n * @name PreparedStatement#values\r\n * @type {array}\r\n * @description\r\n * Query formatting parameters, depending on the type:\r\n *\r\n * - `null` / `undefined` means the query has no formatting parameters\r\n * - `Array` - it is an array of formatting parameters\r\n * - None of the above, means it is a single formatting value, which\r\n *   is then automatically wrapped into an array\r\n */\r\n\r\n/**\r\n * @name PreparedStatement#binary\r\n * @type {boolean}\r\n * @default undefined\r\n * @description\r\n * Activates binary result mode. The default is the text mode.\r\n *\r\n * @see {@link http://www.postgresql.org/docs/devel/static/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY Extended Query}\r\n */\r\n\r\n/**\r\n * @name PreparedStatement#rowMode\r\n * @type {string}\r\n * @default undefined\r\n * @description\r\n * Changes the way data arrives to the client, with only one value supported by $[pg]:\r\n *  - `array` will make all data rows arrive as arrays of values. By default, rows arrive as objects.\r\n */\r\n\r\n/**\r\n * @name PreparedStatement#error\r\n * @type {errors.PreparedStatementError}\r\n * @default undefined\r\n * @description\r\n * When in an error state, it is set to a {@link errors.PreparedStatementError PreparedStatementError} object. Otherwise, it is `undefined`.\r\n *\r\n * This property is primarily for internal use by the library.\r\n */\r\n","const {InnerState} = require(`../inner-state`);\r\nconst {addInspection} = require(`../utils`);\r\nconst utils = require(`../utils`);\r\n\r\n/**\r\n * @private\r\n * @class ServerFormatting\r\n */\r\nclass ServerFormatting extends InnerState {\r\n\r\n    constructor(options) {\r\n        const _inner = {\r\n            options,\r\n            changed: true,\r\n            currentError: undefined,\r\n            target: {}\r\n        };\r\n        super(_inner);\r\n        setValues.call(this, options.values);\r\n    }\r\n\r\n    get error() {\r\n        return this._inner.currentError;\r\n    }\r\n\r\n    get text() {\r\n        return this._inner.options.text;\r\n    }\r\n\r\n    set text(value) {\r\n        const _i = this._inner;\r\n        if (value !== _i.options.text) {\r\n            _i.options.text = value;\r\n            _i.changed = true;\r\n        }\r\n    }\r\n\r\n    get binary() {\r\n        return this._inner.options.binary;\r\n    }\r\n\r\n    set binary(value) {\r\n        const _i = this._inner;\r\n        if (value !== _i.options.binary) {\r\n            _i.options.binary = value;\r\n            _i.changed = true;\r\n        }\r\n    }\r\n\r\n    get rowMode() {\r\n        return this._inner.options.rowMode;\r\n    }\r\n\r\n    set rowMode(value) {\r\n        const _i = this._inner;\r\n        if (value !== _i.options.rowMode) {\r\n            _i.options.rowMode = value;\r\n            _i.changed = true;\r\n        }\r\n    }\r\n\r\n    get values() {\r\n        return this._inner.target.values;\r\n    }\r\n\r\n    set values(values) {\r\n        setValues.call(this, values);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @member ServerFormatting#parse\r\n */\r\n\r\nfunction setValues(v) {\r\n    const target = this._inner.target;\r\n    if (Array.isArray(v)) {\r\n        if (v.length) {\r\n            target.values = v;\r\n        } else {\r\n            delete target.values;\r\n        }\r\n    } else {\r\n        if (utils.isNull(v)) {\r\n            delete target.values;\r\n        } else {\r\n            target.values = [v];\r\n        }\r\n    }\r\n}\r\n\r\naddInspection(ServerFormatting, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {ServerFormatting};\r\n","const util = require(`util`);\r\n\r\nclass ColorConsole {\r\n\r\n    static log() {\r\n        ColorConsole.writeNormal([...arguments], 39); // white\r\n    }\r\n\r\n    static info() {\r\n        ColorConsole.writeNormal([...arguments], 36); // cyan\r\n    }\r\n\r\n    static success() {\r\n        ColorConsole.writeNormal([...arguments], 32); // green\r\n    }\r\n\r\n    static warn() {\r\n        ColorConsole.writeNormal([...arguments], 33); // yellow\r\n    }\r\n\r\n    static error() {\r\n        ColorConsole.writeError([...arguments], 31); // red\r\n    }\r\n\r\n    static writeNormal(params, color) {\r\n        // istanbul ignore else\r\n        if (process.stdout.isTTY) {\r\n            console.log.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\r\n        } else {\r\n            console.log.apply(null, params); // eslint-disable-line no-console\r\n        }\r\n    }\r\n\r\n    static writeError(params, color) {\r\n        // istanbul ignore else\r\n        if (process.stderr.isTTY) {\r\n            console.error.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\r\n        } else {\r\n            console.error.apply(null, params); // eslint-disable-line no-console\r\n        }\r\n    }\r\n\r\n    static formatColor(args, color) {\r\n        return args.map(a => `\\x1b[${color}m${util.format(a)}\\x1b[0m`);\r\n    }\r\n}\r\n\r\nColorConsole.log.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 97); // light white\r\n};\r\n\r\nColorConsole.info.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 93); // light cyan\r\n};\r\n\r\nColorConsole.success.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 92); // light green\r\n};\r\n\r\nColorConsole.warn.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 93); // light yellow\r\n};\r\n\r\nColorConsole.error.bright = function () {\r\n    ColorConsole.writeError([...arguments], 91); // light red\r\n};\r\n\r\nmodule.exports = {ColorConsole};\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst npm = {\r\n    path: require(`path`),\r\n    util: require(`util`),\r\n    patterns: require(`../patterns`),\r\n    os: require(`os`)\r\n};\r\n\r\n////////////////////////////////////////////\r\n// Simpler check for null/undefined;\r\nfunction isNull(value) {\r\n    return value === null || value === undefined;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// Verifies parameter for being a non-empty text string;\r\nfunction isText(txt) {\r\n    return txt && typeof txt === `string` && /\\S/.test(txt);\r\n}\r\n\r\n///////////////////////////////////////////////////////////\r\n// Approximates the environment as being for development.\r\n//\r\n// Proper configuration is having NODE_ENV = 'development', but this\r\n// method only checks for 'dev' being present, and regardless of the case.\r\nfunction isDev() {\r\n    const env = global.process.env.NODE_ENV || ``;\r\n    return env.toLowerCase().indexOf(`dev`) !== -1;\r\n}\r\n\r\n///////////////////////////////////////////////////\r\n// Locks all properties in an object to read-only,\r\n// or freezes the entire object for any changes.\r\nfunction lock(obj, freeze, options) {\r\n    if (options && options.noLocking) {\r\n        return;\r\n    }\r\n    if (freeze) {\r\n        Object.freeze(obj); // freeze the entire object, permanently;\r\n    } else {\r\n        const desc = {\r\n            writable: false,\r\n            configurable: false,\r\n            enumerable: true\r\n        };\r\n        for (const p in obj) {\r\n            Object.defineProperty(obj, p, desc);\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////\r\n// Adds properties from source to the target,\r\n// making them read-only and enumerable.\r\nfunction addReadProperties(target, source) {\r\n    for (const p in source) {\r\n        addReadProp(target, p, source[p]);\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n// Adds a read-only, non-deletable enumerable property.\r\nfunction addReadProp(obj, name, value, hidden) {\r\n    Object.defineProperty(obj, name, {\r\n        value,\r\n        configurable: false,\r\n        enumerable: !hidden,\r\n        writable: false\r\n    });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////\r\n// Converts a connection string or object into its safe copy:\r\n// if password is present, it is masked with symbol '#'.\r\nfunction getSafeConnection(cn) {\r\n    const maskPassword = cs => cs.replace(/:(?![/])([^@]+)/, (_, m) => `:` + new Array(m.length + 1).join(`#`));\r\n    if (typeof cn === `object`) {\r\n        const copy = Object.assign({}, cn);\r\n        if (typeof copy.password === `string`) {\r\n            copy.password = copy.password.replace(/./g, `#`);\r\n        }\r\n        if (typeof copy.connectionString === `string`) {\r\n            copy.connectionString = maskPassword(copy.connectionString);\r\n        }\r\n        return copy;\r\n    }\r\n    return maskPassword(cn);\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output;\r\nfunction messageGap(level) {\r\n    return ` `.repeat(level * 4);\r\n}\r\n\r\n/////////////////////////////////////////\r\n// Provides platform-neutral inheritance;\r\nfunction inherits(child, parent) {\r\n    child.prototype.__proto__ = parent.prototype;\r\n}\r\n\r\n// istanbul ignore next\r\nfunction getLocalStack(startIdx, maxLines) {\r\n    // from the call stack, we take up to maximum lines,\r\n    // starting with specified line index:\r\n    startIdx = startIdx || 0;\r\n    const endIdx = maxLines > 0 ? startIdx + maxLines : undefined;\r\n    return new Error().stack\r\n        .split(`\\n`)\r\n        .filter(line => line.match(/\\(.+\\)/))\r\n        .slice(startIdx, endIdx)\r\n        .join(`\\n`);\r\n}\r\n\r\n//////////////////////////////\r\n// Internal error container;\r\nfunction InternalError(error) {\r\n    this.error = error;\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////\r\n// Parses a property name, and gets its name from the object,\r\n// if the property exists. Returns object {valid, has, target, value}:\r\n//  - valid - true/false, whether the syntax is valid\r\n//  - has - a flag that property exists; set when 'valid' = true\r\n//  - target - the target object that contains the property; set when 'has' = true\r\n//  - value - the value; set when 'has' = true\r\nfunction getIfHas(obj, prop) {\r\n    const result = {valid: true};\r\n    if (prop.indexOf(`.`) === -1) {\r\n        result.has = prop in obj;\r\n        result.target = obj;\r\n        if (result.has) {\r\n            result.value = obj[prop];\r\n        }\r\n    } else {\r\n        const names = prop.split(`.`);\r\n        let missing, target;\r\n        for (let i = 0; i < names.length; i++) {\r\n            const n = names[i];\r\n            if (!n) {\r\n                result.valid = false;\r\n                return result;\r\n            }\r\n            if (!missing && hasProperty(obj, n)) {\r\n                target = obj;\r\n                obj = obj[n];\r\n            } else {\r\n                missing = true;\r\n            }\r\n        }\r\n        result.has = !missing;\r\n        if (result.has) {\r\n            result.target = target;\r\n            result.value = obj;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Checks if the property exists in the object or value or its prototype;\r\nfunction hasProperty(value, prop) {\r\n    return (value && typeof value === `object` && prop in value) ||\r\n        value !== null && value !== undefined && value[prop] !== undefined;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// Adds prototype inspection\r\nfunction addInspection(type, cb) {\r\n    type.prototype[npm.util.inspect.custom] = cb;\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n// Identifies a general connectivity error, after which no more queries can be executed.\r\n// This is for detecting when to skip executing ROLLBACK for a failed transaction.\r\nfunction isConnectivityError(err) {\r\n    const code = err && typeof err.code === `string` && err.code;\r\n    const cls = code && code.substr(0, 2); // Error Class\r\n    // istanbul ignore next (we cannot test-cover all error cases):\r\n    return code === `ECONNRESET` || (cls === `08` && code !== `08P01`) || (cls === `57` && code !== `57014`);\r\n    // Code 'ECONNRESET' - Connectivity issue handled by the driver.\r\n    // Class 08 - Connection Exception (except for 08P01, for protocol violation).\r\n    // Class 57 - Operator Intervention (except for 57014, for cancelled queries).\r\n    //\r\n    // ERROR CODES: https://www.postgresql.org/docs/9.6/static/errcodes-appendix.html\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n// Does JSON.stringify, with support for BigInt (irreversible)\r\nfunction toJson(data) {\r\n    if (data !== undefined) {\r\n        return JSON.stringify(data, (_, v) => typeof v === `bigint` ? `${v}#bigint` : v)\r\n            .replace(/\"(-?\\d+)#bigint\"/g, (_, a) => a);\r\n    }\r\n}\r\n\r\nconst platform = npm.os.platform();\r\n\r\nconst exp = {\r\n    toJson,\r\n    getIfHas,\r\n    addInspection,\r\n    InternalError,\r\n    getLocalStack,\r\n    lock,\r\n    isText,\r\n    isNull,\r\n    isDev,\r\n    platform: {\r\n        isWindows: platform === `win32`,\r\n        isMac: platform === `darwin`\r\n    },\r\n    addReadProp,\r\n    addReadProperties,\r\n    getSafeConnection,\r\n    messageGap,\r\n    inherits,\r\n    isConnectivityError\r\n};\r\n\r\nconst mainFile = process.argv[1];\r\n\r\n// istanbul ignore next\r\nexp.startDir = mainFile ? npm.path.dirname(mainFile) : process.cwd();\r\n\r\nmodule.exports = exp;\r\n","/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {assertOptions} = require(`assert-options`);\r\n\r\nconst npm = {\r\n    fs: require(`fs`),\r\n    path: require(`path`),\r\n    utils: require(`./`),\r\n    package: require(`../../package.json`)\r\n};\r\n\r\n/**\r\n * @method utils.camelize\r\n * @description\r\n * Camelizes a text string.\r\n *\r\n * Case-changing characters include:\r\n * - _hyphen_\r\n * - _underscore_\r\n * - _period_\r\n * - _space_\r\n *\r\n * @param {string} text\r\n * Input text string.\r\n *\r\n * @returns {string}\r\n * Camelized text string.\r\n *\r\n * @see\r\n * {@link utils.camelizeVar camelizeVar}\r\n *\r\n */\r\nfunction camelize(text) {\r\n    text = text.replace(/[-_\\s.]+(.)?/g, (_, c) => c ? c.toUpperCase() : ``);\r\n    return text.substr(0, 1).toLowerCase() + text.substr(1);\r\n}\r\n\r\n/**\r\n * @method utils.camelizeVar\r\n * @description\r\n * Camelizes a text string, while making it compliant with JavaScript variable names:\r\n * - contains symbols `a-z`, `A-Z`, `0-9`, `_` and `$`\r\n * - cannot have leading digits\r\n *\r\n * First, it removes all symbols that do not meet the above criteria, except for _hyphen_, _period_ and _space_,\r\n * and then it forwards into {@link utils.camelize camelize}.\r\n *\r\n * @param {string} text\r\n * Input text string.\r\n *\r\n * If it doesn't contain any symbols to make up a valid variable name, the result will be an empty string.\r\n *\r\n * @returns {string}\r\n * Camelized text string that can be used as an open property name.\r\n *\r\n * @see\r\n * {@link utils.camelize camelize}\r\n *\r\n */\r\nfunction camelizeVar(text) {\r\n    text = text.replace(/[^a-zA-Z0-9$_\\-\\s.]/g, ``).replace(/^[0-9_\\-\\s.]+/, ``);\r\n    return camelize(text);\r\n}\r\n\r\nfunction _enumSql(dir, options, cb, namePath) {\r\n    const tree = {};\r\n    npm.fs.readdirSync(dir).forEach(file => {\r\n        let stat;\r\n        const fullPath = npm.path.join(dir, file);\r\n        try {\r\n            stat = npm.fs.statSync(fullPath);\r\n        } catch (e) {\r\n            // while it is very easy to test manually, it is very difficult to test for\r\n            // access-denied errors automatically; therefore excluding from the coverage:\r\n            // istanbul ignore next\r\n            if (options.ignoreErrors) {\r\n                return; // on to the next file/folder;\r\n            }\r\n            // istanbul ignore next\r\n            throw e;\r\n        }\r\n        if (stat.isDirectory()) {\r\n            if (options.recursive) {\r\n                const dirName = camelizeVar(file);\r\n                const np = namePath ? (namePath + `.` + dirName) : dirName;\r\n                const t = _enumSql(fullPath, options, cb, np);\r\n                if (Object.keys(t).length) {\r\n                    if (!dirName.length || dirName in tree) {\r\n                        if (!options.ignoreErrors) {\r\n                            throw new Error(`Empty or duplicate camelized folder name: ` + fullPath);\r\n                        }\r\n                    }\r\n                    tree[dirName] = t;\r\n                }\r\n            }\r\n        } else {\r\n            if (npm.path.extname(file).toLowerCase() === `.sql`) {\r\n                const name = camelizeVar(file.replace(/\\.[^/.]+$/, ``));\r\n                if (!name.length || name in tree) {\r\n                    if (!options.ignoreErrors) {\r\n                        throw new Error(`Empty or duplicate camelized file name: ` + fullPath);\r\n                    }\r\n                }\r\n                tree[name] = fullPath;\r\n                if (cb) {\r\n                    const result = cb(fullPath, name, namePath ? (namePath + `.` + name) : name);\r\n                    if (result !== undefined) {\r\n                        tree[name] = result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return tree;\r\n}\r\n\r\n/**\r\n * @method utils.enumSql\r\n * @description\r\n * Synchronously enumerates all SQL files (within a given directory) into a camelized SQL tree.\r\n *\r\n * All property names within the tree are camelized via {@link utils.camelizeVar camelizeVar},\r\n * so they can be used in the code directly, as open property names.\r\n *\r\n * @param {string} dir\r\n * Directory path where SQL files are located, either absolute or relative to the current directory.\r\n *\r\n * SQL files are identified by using `.sql` extension (case-insensitive).\r\n *\r\n * @param {{}} [options]\r\n * Search options.\r\n *\r\n * @param {boolean} [options.recursive=false]\r\n * Include sub-directories into the search.\r\n *\r\n * Sub-directories without SQL files will be skipped from the result.\r\n *\r\n * @param {boolean} [options.ignoreErrors=false]\r\n * Ignore the following types of errors:\r\n * - access errors, when there is no read access to a file or folder\r\n * - empty or duplicate camelized property names\r\n *\r\n * This flag does not affect errors related to invalid input parameters, or if you pass in a\r\n * non-existing directory.\r\n *\r\n * @param {function} [cb]\r\n * A callback function that takes three arguments:\r\n * - `file` - SQL file path, relative or absolute, according to how you specified the search directory\r\n * - `name` - name of the property that represents the SQL file\r\n * - `path` - property resolution path (full property name)\r\n *\r\n * If the function returns anything other than `undefined`, it overrides the corresponding property value in the tree.\r\n *\r\n * @returns {object}\r\n * Camelized SQL tree object, with each value being an SQL file path (unless changed via the callback).\r\n *\r\n * @example\r\n *\r\n * // simple SQL tree generation for further processing:\r\n * const tree = pgp.utils.enumSql('../sql', {recursive: true});\r\n *\r\n * @example\r\n *\r\n * // generating an SQL tree for dynamic use of names:\r\n * const sql = pgp.utils.enumSql(__dirname, {recursive: true}, file => {\r\n *     return new pgp.QueryFile(file, {minify: true});\r\n * });\r\n *\r\n * @example\r\n *\r\n * const {join: joinPath} = require('path');\r\n *\r\n * // replacing each relative path in the tree with a full one:\r\n * const tree = pgp.utils.enumSql('../sql', {recursive: true}, file => {\r\n *     return joinPath(__dirname, file);\r\n * });\r\n *\r\n */\r\nfunction enumSql(dir, options, cb) {\r\n    if (!npm.utils.isText(dir)) {\r\n        throw new TypeError(`Parameter 'dir' must be a non-empty text string.`);\r\n    }\r\n    options = assertOptions(options, [`recursive`, `ignoreErrors`]);\r\n    cb = (typeof cb === `function`) ? cb : null;\r\n    return _enumSql(dir, options, cb, ``);\r\n}\r\n\r\n/**\r\n * @method utils.taskArgs\r\n * @description\r\n * Normalizes/prepares arguments for tasks and transactions.\r\n *\r\n * Its main purpose is to simplify adding custom methods {@link Database#task task}, {@link Database#taskIf taskIf},\r\n * {@link Database#tx tx} and {@link Database#txIf txIf} within event {@link event:extend extend}, as the those methods use fairly\r\n * complex logic for parsing inputs.\r\n *\r\n * @param args {Object}\r\n * Array-like object of `arguments` that was passed into the method. It is expected that the `arguments`\r\n * are always made of two parameters - `(options, cb)`, same as all the default task/transaction methods.\r\n *\r\n * And if your custom method needs additional parameters, they should be passed in as extra properties within `options`.\r\n *\r\n * @returns {Array}\r\n * Array of arguments that can be passed into a task or transaction.\r\n *\r\n * It is extended with properties `options` and `cb` to access the corresponding array elements `[0]` and `[1]` by name.\r\n *\r\n * @example\r\n *\r\n * // Registering a custom transaction method that assigns a default Transaction Mode:\r\n *\r\n * const initOptions = {\r\n *     extend: obj => {\r\n *         obj.myTx = function(options, cb) {\r\n *             const args = pgp.utils.taskArgs(arguments); // prepare arguments\r\n *\r\n *             if (!('mode' in args.options)) {\r\n *                 // if no 'mode' was specified, set default for transaction mode:\r\n *                 args.options.mode = myTxModeObject; // of type pgp.txMode.TransactionMode\r\n *             }\r\n *\r\n *             return obj.tx.apply(this, args);\r\n *             // or explicitly, if needed:\r\n *             // return obj.tx.call(this, args.options, args.cb);\r\n *         }\r\n *     }\r\n * };\r\n *\r\n */\r\nfunction taskArgs(args) {\r\n\r\n    if (!args || typeof args.length !== `number`) {\r\n        throw new TypeError(`Parameter 'args' must be an array-like object of arguments.`);\r\n    }\r\n\r\n    let options = args[0], cb;\r\n    if (typeof options === `function`) {\r\n        cb = options;\r\n        options = {};\r\n        if (cb.name) {\r\n            options.tag = cb.name;\r\n        }\r\n    } else {\r\n        if (typeof args[1] === `function`) {\r\n            cb = args[1];\r\n        }\r\n        if (typeof options === `string` || typeof options === `number`) {\r\n            options = {tag: options};\r\n        } else {\r\n            options = (typeof options === `object` && options) || {};\r\n            if (!(`tag` in options) && cb && cb.name) {\r\n                options.tag = cb.name;\r\n            }\r\n        }\r\n    }\r\n\r\n    const res = [options, cb];\r\n\r\n    Object.defineProperty(res, `options`, {\r\n        get: function () {\r\n            return this[0];\r\n        },\r\n        set: function (newValue) {\r\n            this[0] = newValue;\r\n        },\r\n        enumerable: true\r\n    });\r\n\r\n    Object.defineProperty(res, `cb`, {\r\n        get: function () {\r\n            return this[1];\r\n        },\r\n        set: function (newValue) {\r\n            this[1] = newValue;\r\n        },\r\n        enumerable: true\r\n    });\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * @namespace utils\r\n *\r\n * @description\r\n * Namespace for general-purpose static functions, available as `pgp.utils`, before and after initializing the library.\r\n *\r\n * @property {function} camelize\r\n * {@link utils.camelize camelize} - camelizes a text string\r\n *\r\n * @property {function} camelizeVar\r\n * {@link utils.camelizeVar camelizeVar} - camelizes a text string as a variable\r\n *\r\n * @property {function} enumSql\r\n * {@link utils.enumSql enumSql} - enumerates SQL files in a directory\r\n *\r\n * @property {function} taskArgs\r\n * {@link utils.taskArgs taskArgs} - prepares arguments for tasks and transactions\r\n */\r\nmodule.exports = {\r\n    camelize,\r\n    camelizeVar,\r\n    enumSql,\r\n    taskArgs\r\n};\r\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('./utils')\nvar sasl = require('./sasl')\nvar pgPass = require('pgpass')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    // As with Password, make SSL->Key (the private key) non-enumerable.\n    // It won't show up in stack traces\n    // or if the client is console.logged\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    this.connectionTimeoutHandle\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      pgPass(this.connectionParameters, (pass) => {\n        if (undefined !== pass) {\n          this.connectionParameters.password = this.password = pass\n        }\n        cb()\n      })\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(() => {\n      const hashedPassword = utils.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n      this.connection.password(hashedPassword)\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      this.saslSession = sasl.startSession(msg.mechanisms)\n      this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n    })\n  }\n\n  _handleAuthSASLContinue(msg) {\n    sasl.continueSession(this.saslSession, this.password, msg.data)\n    this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n  }\n\n  _handleAuthSASLFinal(msg) {\n    sasl.finalizeSession(this.saslSession, msg.data)\n    this.saslSession = null\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete(msg) {\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeIdentifier(str) {\n    return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeLiteral(str) {\n    var hasBackslash = false\n    var escaped = \"'\"\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str[i]\n      if (c === \"'\") {\n        escaped += c + c\n      } else if (c === '\\\\') {\n        escaped += c + c\n        hasBackslash = true\n      } else {\n        escaped += c\n      }\n    }\n\n    escaped += \"'\"\n\n    if (hasBackslash === true) {\n      escaped = ' E' + escaped\n    }\n\n    return escaped\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  ref() {\n    this.connection.ref()\n  }\n\n  unref() {\n    this.connection.unref()\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n","'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    if (typeof this.ssl === 'string') {\n      if (this.ssl === 'true') {\n        this.ssl = true\n      }\n    }\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n","'use strict'\n\nvar net = require('net')\nvar EventEmitter = require('events').EventEmitter\n\nconst { parse, serialize } = require('pg-protocol')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n    this.stream = config.stream || new net.Socket()\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      var tls = require('tls')\n      const options = {\n        socket: self.stream,\n      }\n\n      if (self.ssl !== true) {\n        Object.assign(options, self.ssl)\n\n        if ('key' in self.ssl) {\n          options.key = self.ssl.key\n        }\n      }\n\n      if (net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = tls.connect(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    stream.on('end', () => {\n      this.emit('end')\n    })\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(flushBuffer)\n    this._send(syncBuffer)\n  }\n\n  ref() {\n    this.stream.ref()\n  }\n\n  unref() {\n    this.stream.unref()\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n","'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n","'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\nconst { DatabaseError } = require('pg-protocol')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n  this.DatabaseError = DatabaseError\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n","'use strict'\n\n// eslint-disable-next-line\nvar Native = require('pg-native')\nvar TypeOverrides = require('../type-overrides')\nvar pkg = require('../../package.json')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.ref = function () {}\nClient.prototype.unref = function () {}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n","'use strict'\nmodule.exports = require('./client')\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n","'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this.isPreparedStatement = false\n    this._canceledDueToError = false\n    this._promise = null\n  }\n\n  requiresPreparation() {\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this.types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, connection) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    // if we were using a row count which results in multiple calls to _getRows\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // since we pipeline sync immediately after execute we don't need to do anything here\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\n  handleEmptyQuery(connection) {\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      this.callback(null, this._results)\n    }\n    this.emit('end', this._results)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    // if we're not reading pages of rows send the sync command\n    // to indicate the pipeline is finished\n    if (!rows) {\n      connection.sync()\n    } else {\n      // otherwise flush the call out to read more rows\n      connection.flush()\n    }\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // prepared statements need sync to be called after each command\n    // complete or when an error is encountered\n    this.isPreparedStatement = true\n\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    // because we're mapping user supplied values to\n    // postgres wire protocol compatible values it could\n    // throw an exception, so try/catch this section\n    try {\n      connection.bind({\n        portal: this.portal,\n        statement: this.name,\n        values: this.values,\n        binary: this.binary,\n        valueMapper: utils.prepareValue,\n      })\n    } catch (err) {\n      this.handleError(err, connection)\n      return\n    }\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n","'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = {}\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      } else {\n        row[field] = null\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n  }\n}\n\nmodule.exports = Result\n","'use strict'\nconst crypto = require('crypto')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nfunction continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n  if (typeof password !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string')\n  }\n\n  const sv = parseServerFirstMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  } else if (sv.nonce.length === session.clientNonce.length) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')\n  }\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n\n  var saltedPassword = Hi(password, saltBytes, sv.iteration)\n\n  var clientKey = hmacSha256(saltedPassword, 'Client Key')\n  var storedKey = sha256(clientKey)\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var clientSignature = hmacSha256(storedKey, authMessage)\n  var clientProofBytes = xorBuffers(clientKey, clientSignature)\n  var clientProof = clientProofBytes.toString('base64')\n\n  var serverKey = hmacSha256(saltedPassword, 'Server Key')\n  var serverSignatureBytes = hmacSha256(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = serverSignatureBytes.toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string')\n  }\n\n  const { serverSignature } = parseServerFinalMessage(serverData)\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\n/**\n * printable       = %x21-2B / %x2D-7E\n *                   ;; Printable ASCII except \",\".\n *                   ;; Note that any \"printable\" is also\n *                   ;; a valid \"value\".\n */\nfunction isPrintableChars(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: text must be a string')\n  }\n  return text\n    .split('')\n    .map((_, i) => text.charCodeAt(i))\n    .every((c) => (c >= 0x21 && c <= 0x2b) || (c >= 0x2d && c <= 0x7e))\n}\n\n/**\n * base64-char     = ALPHA / DIGIT / \"/\" / \"+\"\n *\n * base64-4        = 4base64-char\n *\n * base64-3        = 3base64-char \"=\"\n *\n * base64-2        = 2base64-char \"==\"\n *\n * base64          = *base64-4 [base64-3 / base64-2]\n */\nfunction isBase64(text) {\n  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(text)\n}\n\nfunction parseAttributePairs(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: attribute pairs text must be a string')\n  }\n\n  return new Map(\n    text.split(',').map((attrValue) => {\n      if (!/^.=/.test(attrValue)) {\n        throw new Error('SASL: Invalid attribute pair entry')\n      }\n      const name = attrValue[0]\n      const value = attrValue.substring(2)\n      return [name, value]\n    })\n  )\n}\n\nfunction parseServerFirstMessage(data) {\n  const attrPairs = parseAttributePairs(data)\n\n  const nonce = attrPairs.get('r')\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  } else if (!isPrintableChars(nonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters')\n  }\n  const salt = attrPairs.get('s')\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  } else if (!isBase64(salt)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64')\n  }\n  const iterationText = attrPairs.get('i')\n  if (!iterationText) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  } else if (!/^[1-9][0-9]*$/.test(iterationText)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count')\n  }\n  const iteration = parseInt(iterationText, 10)\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction parseServerFinalMessage(serverData) {\n  const attrPairs = parseAttributePairs(serverData)\n  const serverSignature = attrPairs.get('v')\n  if (!serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing')\n  } else if (!isBase64(serverSignature)) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64')\n  }\n  return {\n    serverSignature,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    throw new TypeError('first argument must be a Buffer')\n  }\n  if (!Buffer.isBuffer(b)) {\n    throw new TypeError('second argument must be a Buffer')\n  }\n  if (a.length !== b.length) {\n    throw new Error('Buffer lengths must match')\n  }\n  if (a.length === 0) {\n    throw new Error('Buffers cannot be empty')\n  }\n  return Buffer.from(a.map((_, i) => a[i] ^ b[i]))\n}\n\nfunction sha256(text) {\n  return crypto.createHash('sha256').update(text).digest()\n}\n\nfunction hmacSha256(key, msg) {\n  return crypto.createHmac('sha256', key).update(msg).digest()\n}\n\nfunction Hi(password, saltBytes, iterations) {\n  var ui1 = hmacSha256(password, Buffer.concat([saltBytes, Buffer.from([0, 0, 0, 1])]))\n  var ui = ui1\n  for (var i = 0; i < iterations - 1; i++) {\n    ui1 = hmacSha256(password, ui1)\n    ui = xorBuffers(ui, ui1)\n  }\n\n  return ui\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n","'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n","'use strict'\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  // null and undefined are both null for postgres\n  if (val == null) {\n    return null\n  }\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5,\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BufferReader = void 0;\nconst emptyBuffer = Buffer.allocUnsafe(0);\nclass BufferReader {\n    constructor(offset = 0) {\n        this.offset = offset;\n        this.buffer = emptyBuffer;\n        // TODO(bmc): support non-utf8 encoding?\n        this.encoding = 'utf-8';\n    }\n    setBuffer(offset, buffer) {\n        this.offset = offset;\n        this.buffer = buffer;\n    }\n    int16() {\n        const result = this.buffer.readInt16BE(this.offset);\n        this.offset += 2;\n        return result;\n    }\n    byte() {\n        const result = this.buffer[this.offset];\n        this.offset++;\n        return result;\n    }\n    int32() {\n        const result = this.buffer.readInt32BE(this.offset);\n        this.offset += 4;\n        return result;\n    }\n    string(length) {\n        const result = this.buffer.toString(this.encoding, this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n    cstring() {\n        const start = this.offset;\n        let end = start;\n        while (this.buffer[end++] !== 0) { }\n        this.offset = end;\n        return this.buffer.toString(this.encoding, start, end - 1);\n    }\n    bytes(length) {\n        const result = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n}\nexports.BufferReader = BufferReader;\n//# sourceMappingURL=buffer-reader.js.map","\"use strict\";\n//binary data writer tuned for encoding binary specific to the postgres binary protocol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Writer = void 0;\nclass Writer {\n    constructor(size = 256) {\n        this.size = size;\n        this.offset = 5;\n        this.headerPosition = 0;\n        this.buffer = Buffer.allocUnsafe(size);\n    }\n    ensure(size) {\n        var remaining = this.buffer.length - this.offset;\n        if (remaining < size) {\n            var oldBuffer = this.buffer;\n            // exponential growth factor of around ~ 1.5\n            // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n            var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\n            this.buffer = Buffer.allocUnsafe(newSize);\n            oldBuffer.copy(this.buffer);\n        }\n    }\n    addInt32(num) {\n        this.ensure(4);\n        this.buffer[this.offset++] = (num >>> 24) & 0xff;\n        this.buffer[this.offset++] = (num >>> 16) & 0xff;\n        this.buffer[this.offset++] = (num >>> 8) & 0xff;\n        this.buffer[this.offset++] = (num >>> 0) & 0xff;\n        return this;\n    }\n    addInt16(num) {\n        this.ensure(2);\n        this.buffer[this.offset++] = (num >>> 8) & 0xff;\n        this.buffer[this.offset++] = (num >>> 0) & 0xff;\n        return this;\n    }\n    addCString(string) {\n        if (!string) {\n            this.ensure(1);\n        }\n        else {\n            var len = Buffer.byteLength(string);\n            this.ensure(len + 1); // +1 for null terminator\n            this.buffer.write(string, this.offset, 'utf-8');\n            this.offset += len;\n        }\n        this.buffer[this.offset++] = 0; // null terminator\n        return this;\n    }\n    addString(string = '') {\n        var len = Buffer.byteLength(string);\n        this.ensure(len);\n        this.buffer.write(string, this.offset);\n        this.offset += len;\n        return this;\n    }\n    add(otherBuffer) {\n        this.ensure(otherBuffer.length);\n        otherBuffer.copy(this.buffer, this.offset);\n        this.offset += otherBuffer.length;\n        return this;\n    }\n    join(code) {\n        if (code) {\n            this.buffer[this.headerPosition] = code;\n            //length is everything in this packet minus the code\n            const length = this.offset - (this.headerPosition + 1);\n            this.buffer.writeInt32BE(length, this.headerPosition + 1);\n        }\n        return this.buffer.slice(code ? 0 : 5, this.offset);\n    }\n    flush(code) {\n        var result = this.join(code);\n        this.offset = 5;\n        this.headerPosition = 0;\n        this.buffer = Buffer.allocUnsafe(this.size);\n        return result;\n    }\n}\nexports.Writer = Writer;\n//# sourceMappingURL=buffer-writer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseError = exports.serialize = exports.parse = void 0;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"DatabaseError\", { enumerable: true, get: function () { return messages_1.DatabaseError; } });\nconst serializer_1 = require(\"./serializer\");\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return serializer_1.serialize; } });\nconst parser_1 = require(\"./parser\");\nfunction parse(stream, callback) {\n    const parser = new parser_1.Parser();\n    stream.on('data', (buffer) => parser.parse(buffer, callback));\n    return new Promise((resolve) => stream.on('end', () => resolve()));\n}\nexports.parse = parse;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoticeMessage = exports.DataRowMessage = exports.CommandCompleteMessage = exports.ReadyForQueryMessage = exports.NotificationResponseMessage = exports.BackendKeyDataMessage = exports.AuthenticationMD5Password = exports.ParameterStatusMessage = exports.ParameterDescriptionMessage = exports.RowDescriptionMessage = exports.Field = exports.CopyResponse = exports.CopyDataMessage = exports.DatabaseError = exports.copyDone = exports.emptyQuery = exports.replicationStart = exports.portalSuspended = exports.noData = exports.closeComplete = exports.bindComplete = exports.parseComplete = void 0;\nexports.parseComplete = {\n    name: 'parseComplete',\n    length: 5,\n};\nexports.bindComplete = {\n    name: 'bindComplete',\n    length: 5,\n};\nexports.closeComplete = {\n    name: 'closeComplete',\n    length: 5,\n};\nexports.noData = {\n    name: 'noData',\n    length: 5,\n};\nexports.portalSuspended = {\n    name: 'portalSuspended',\n    length: 5,\n};\nexports.replicationStart = {\n    name: 'replicationStart',\n    length: 4,\n};\nexports.emptyQuery = {\n    name: 'emptyQuery',\n    length: 4,\n};\nexports.copyDone = {\n    name: 'copyDone',\n    length: 4,\n};\nclass DatabaseError extends Error {\n    constructor(message, length, name) {\n        super(message);\n        this.length = length;\n        this.name = name;\n    }\n}\nexports.DatabaseError = DatabaseError;\nclass CopyDataMessage {\n    constructor(length, chunk) {\n        this.length = length;\n        this.chunk = chunk;\n        this.name = 'copyData';\n    }\n}\nexports.CopyDataMessage = CopyDataMessage;\nclass CopyResponse {\n    constructor(length, name, binary, columnCount) {\n        this.length = length;\n        this.name = name;\n        this.binary = binary;\n        this.columnTypes = new Array(columnCount);\n    }\n}\nexports.CopyResponse = CopyResponse;\nclass Field {\n    constructor(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format) {\n        this.name = name;\n        this.tableID = tableID;\n        this.columnID = columnID;\n        this.dataTypeID = dataTypeID;\n        this.dataTypeSize = dataTypeSize;\n        this.dataTypeModifier = dataTypeModifier;\n        this.format = format;\n    }\n}\nexports.Field = Field;\nclass RowDescriptionMessage {\n    constructor(length, fieldCount) {\n        this.length = length;\n        this.fieldCount = fieldCount;\n        this.name = 'rowDescription';\n        this.fields = new Array(this.fieldCount);\n    }\n}\nexports.RowDescriptionMessage = RowDescriptionMessage;\nclass ParameterDescriptionMessage {\n    constructor(length, parameterCount) {\n        this.length = length;\n        this.parameterCount = parameterCount;\n        this.name = 'parameterDescription';\n        this.dataTypeIDs = new Array(this.parameterCount);\n    }\n}\nexports.ParameterDescriptionMessage = ParameterDescriptionMessage;\nclass ParameterStatusMessage {\n    constructor(length, parameterName, parameterValue) {\n        this.length = length;\n        this.parameterName = parameterName;\n        this.parameterValue = parameterValue;\n        this.name = 'parameterStatus';\n    }\n}\nexports.ParameterStatusMessage = ParameterStatusMessage;\nclass AuthenticationMD5Password {\n    constructor(length, salt) {\n        this.length = length;\n        this.salt = salt;\n        this.name = 'authenticationMD5Password';\n    }\n}\nexports.AuthenticationMD5Password = AuthenticationMD5Password;\nclass BackendKeyDataMessage {\n    constructor(length, processID, secretKey) {\n        this.length = length;\n        this.processID = processID;\n        this.secretKey = secretKey;\n        this.name = 'backendKeyData';\n    }\n}\nexports.BackendKeyDataMessage = BackendKeyDataMessage;\nclass NotificationResponseMessage {\n    constructor(length, processId, channel, payload) {\n        this.length = length;\n        this.processId = processId;\n        this.channel = channel;\n        this.payload = payload;\n        this.name = 'notification';\n    }\n}\nexports.NotificationResponseMessage = NotificationResponseMessage;\nclass ReadyForQueryMessage {\n    constructor(length, status) {\n        this.length = length;\n        this.status = status;\n        this.name = 'readyForQuery';\n    }\n}\nexports.ReadyForQueryMessage = ReadyForQueryMessage;\nclass CommandCompleteMessage {\n    constructor(length, text) {\n        this.length = length;\n        this.text = text;\n        this.name = 'commandComplete';\n    }\n}\nexports.CommandCompleteMessage = CommandCompleteMessage;\nclass DataRowMessage {\n    constructor(length, fields) {\n        this.length = length;\n        this.fields = fields;\n        this.name = 'dataRow';\n        this.fieldCount = fields.length;\n    }\n}\nexports.DataRowMessage = DataRowMessage;\nclass NoticeMessage {\n    constructor(length, message) {\n        this.length = length;\n        this.message = message;\n        this.name = 'notice';\n    }\n}\nexports.NoticeMessage = NoticeMessage;\n//# sourceMappingURL=messages.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nconst messages_1 = require(\"./messages\");\nconst buffer_reader_1 = require(\"./buffer-reader\");\nconst assert_1 = __importDefault(require(\"assert\"));\n// every message is prefixed with a single bye\nconst CODE_LENGTH = 1;\n// every message has an int32 length which includes itself but does\n// NOT include the code in the length\nconst LEN_LENGTH = 4;\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH;\nconst emptyBuffer = Buffer.allocUnsafe(0);\nclass Parser {\n    constructor(opts) {\n        this.buffer = emptyBuffer;\n        this.bufferLength = 0;\n        this.bufferOffset = 0;\n        this.reader = new buffer_reader_1.BufferReader();\n        if ((opts === null || opts === void 0 ? void 0 : opts.mode) === 'binary') {\n            throw new Error('Binary mode not supported yet');\n        }\n        this.mode = (opts === null || opts === void 0 ? void 0 : opts.mode) || 'text';\n    }\n    parse(buffer, callback) {\n        this.mergeBuffer(buffer);\n        const bufferFullLength = this.bufferOffset + this.bufferLength;\n        let offset = this.bufferOffset;\n        while (offset + HEADER_LENGTH <= bufferFullLength) {\n            // code is 1 byte long - it identifies the message type\n            const code = this.buffer[offset];\n            // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\n            const length = this.buffer.readUInt32BE(offset + CODE_LENGTH);\n            const fullMessageLength = CODE_LENGTH + length;\n            if (fullMessageLength + offset <= bufferFullLength) {\n                const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer);\n                callback(message);\n                offset += fullMessageLength;\n            }\n            else {\n                break;\n            }\n        }\n        if (offset === bufferFullLength) {\n            // No more use for the buffer\n            this.buffer = emptyBuffer;\n            this.bufferLength = 0;\n            this.bufferOffset = 0;\n        }\n        else {\n            // Adjust the cursors of remainingBuffer\n            this.bufferLength = bufferFullLength - offset;\n            this.bufferOffset = offset;\n        }\n    }\n    mergeBuffer(buffer) {\n        if (this.bufferLength > 0) {\n            const newLength = this.bufferLength + buffer.byteLength;\n            const newFullLength = newLength + this.bufferOffset;\n            if (newFullLength > this.buffer.byteLength) {\n                // We can't concat the new buffer with the remaining one\n                let newBuffer;\n                if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\n                    // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\n                    newBuffer = this.buffer;\n                }\n                else {\n                    // Allocate a new larger buffer\n                    let newBufferLength = this.buffer.byteLength * 2;\n                    while (newLength >= newBufferLength) {\n                        newBufferLength *= 2;\n                    }\n                    newBuffer = Buffer.allocUnsafe(newBufferLength);\n                }\n                // Move the remaining buffer to the new one\n                this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength);\n                this.buffer = newBuffer;\n                this.bufferOffset = 0;\n            }\n            // Concat the new buffer with the remaining one\n            buffer.copy(this.buffer, this.bufferOffset + this.bufferLength);\n            this.bufferLength = newLength;\n        }\n        else {\n            this.buffer = buffer;\n            this.bufferOffset = 0;\n            this.bufferLength = buffer.byteLength;\n        }\n    }\n    handlePacket(offset, code, length, bytes) {\n        switch (code) {\n            case 50 /* BindComplete */:\n                return messages_1.bindComplete;\n            case 49 /* ParseComplete */:\n                return messages_1.parseComplete;\n            case 51 /* CloseComplete */:\n                return messages_1.closeComplete;\n            case 110 /* NoData */:\n                return messages_1.noData;\n            case 115 /* PortalSuspended */:\n                return messages_1.portalSuspended;\n            case 99 /* CopyDone */:\n                return messages_1.copyDone;\n            case 87 /* ReplicationStart */:\n                return messages_1.replicationStart;\n            case 73 /* EmptyQuery */:\n                return messages_1.emptyQuery;\n            case 68 /* DataRow */:\n                return this.parseDataRowMessage(offset, length, bytes);\n            case 67 /* CommandComplete */:\n                return this.parseCommandCompleteMessage(offset, length, bytes);\n            case 90 /* ReadyForQuery */:\n                return this.parseReadyForQueryMessage(offset, length, bytes);\n            case 65 /* NotificationResponse */:\n                return this.parseNotificationMessage(offset, length, bytes);\n            case 82 /* AuthenticationResponse */:\n                return this.parseAuthenticationResponse(offset, length, bytes);\n            case 83 /* ParameterStatus */:\n                return this.parseParameterStatusMessage(offset, length, bytes);\n            case 75 /* BackendKeyData */:\n                return this.parseBackendKeyData(offset, length, bytes);\n            case 69 /* ErrorMessage */:\n                return this.parseErrorMessage(offset, length, bytes, 'error');\n            case 78 /* NoticeMessage */:\n                return this.parseErrorMessage(offset, length, bytes, 'notice');\n            case 84 /* RowDescriptionMessage */:\n                return this.parseRowDescriptionMessage(offset, length, bytes);\n            case 116 /* ParameterDescriptionMessage */:\n                return this.parseParameterDescriptionMessage(offset, length, bytes);\n            case 71 /* CopyIn */:\n                return this.parseCopyInMessage(offset, length, bytes);\n            case 72 /* CopyOut */:\n                return this.parseCopyOutMessage(offset, length, bytes);\n            case 100 /* CopyData */:\n                return this.parseCopyData(offset, length, bytes);\n            default:\n                assert_1.default.fail(`unknown message code: ${code.toString(16)}`);\n        }\n    }\n    parseReadyForQueryMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const status = this.reader.string(1);\n        return new messages_1.ReadyForQueryMessage(length, status);\n    }\n    parseCommandCompleteMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const text = this.reader.cstring();\n        return new messages_1.CommandCompleteMessage(length, text);\n    }\n    parseCopyData(offset, length, bytes) {\n        const chunk = bytes.slice(offset, offset + (length - 4));\n        return new messages_1.CopyDataMessage(length, chunk);\n    }\n    parseCopyInMessage(offset, length, bytes) {\n        return this.parseCopyMessage(offset, length, bytes, 'copyInResponse');\n    }\n    parseCopyOutMessage(offset, length, bytes) {\n        return this.parseCopyMessage(offset, length, bytes, 'copyOutResponse');\n    }\n    parseCopyMessage(offset, length, bytes, messageName) {\n        this.reader.setBuffer(offset, bytes);\n        const isBinary = this.reader.byte() !== 0;\n        const columnCount = this.reader.int16();\n        const message = new messages_1.CopyResponse(length, messageName, isBinary, columnCount);\n        for (let i = 0; i < columnCount; i++) {\n            message.columnTypes[i] = this.reader.int16();\n        }\n        return message;\n    }\n    parseNotificationMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const processId = this.reader.int32();\n        const channel = this.reader.cstring();\n        const payload = this.reader.cstring();\n        return new messages_1.NotificationResponseMessage(length, processId, channel, payload);\n    }\n    parseRowDescriptionMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const fieldCount = this.reader.int16();\n        const message = new messages_1.RowDescriptionMessage(length, fieldCount);\n        for (let i = 0; i < fieldCount; i++) {\n            message.fields[i] = this.parseField();\n        }\n        return message;\n    }\n    parseField() {\n        const name = this.reader.cstring();\n        const tableID = this.reader.int32();\n        const columnID = this.reader.int16();\n        const dataTypeID = this.reader.int32();\n        const dataTypeSize = this.reader.int16();\n        const dataTypeModifier = this.reader.int32();\n        const mode = this.reader.int16() === 0 ? 'text' : 'binary';\n        return new messages_1.Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode);\n    }\n    parseParameterDescriptionMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const parameterCount = this.reader.int16();\n        const message = new messages_1.ParameterDescriptionMessage(length, parameterCount);\n        for (let i = 0; i < parameterCount; i++) {\n            message.dataTypeIDs[i] = this.reader.int32();\n        }\n        return message;\n    }\n    parseDataRowMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const fieldCount = this.reader.int16();\n        const fields = new Array(fieldCount);\n        for (let i = 0; i < fieldCount; i++) {\n            const len = this.reader.int32();\n            // a -1 for length means the value of the field is null\n            fields[i] = len === -1 ? null : this.reader.string(len);\n        }\n        return new messages_1.DataRowMessage(length, fields);\n    }\n    parseParameterStatusMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const name = this.reader.cstring();\n        const value = this.reader.cstring();\n        return new messages_1.ParameterStatusMessage(length, name, value);\n    }\n    parseBackendKeyData(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const processID = this.reader.int32();\n        const secretKey = this.reader.int32();\n        return new messages_1.BackendKeyDataMessage(length, processID, secretKey);\n    }\n    parseAuthenticationResponse(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const code = this.reader.int32();\n        // TODO(bmc): maybe better types here\n        const message = {\n            name: 'authenticationOk',\n            length,\n        };\n        switch (code) {\n            case 0: // AuthenticationOk\n                break;\n            case 3: // AuthenticationCleartextPassword\n                if (message.length === 8) {\n                    message.name = 'authenticationCleartextPassword';\n                }\n                break;\n            case 5: // AuthenticationMD5Password\n                if (message.length === 12) {\n                    message.name = 'authenticationMD5Password';\n                    const salt = this.reader.bytes(4);\n                    return new messages_1.AuthenticationMD5Password(length, salt);\n                }\n                break;\n            case 10: // AuthenticationSASL\n                message.name = 'authenticationSASL';\n                message.mechanisms = [];\n                let mechanism;\n                do {\n                    mechanism = this.reader.cstring();\n                    if (mechanism) {\n                        message.mechanisms.push(mechanism);\n                    }\n                } while (mechanism);\n                break;\n            case 11: // AuthenticationSASLContinue\n                message.name = 'authenticationSASLContinue';\n                message.data = this.reader.string(length - 8);\n                break;\n            case 12: // AuthenticationSASLFinal\n                message.name = 'authenticationSASLFinal';\n                message.data = this.reader.string(length - 8);\n                break;\n            default:\n                throw new Error('Unknown authenticationOk message type ' + code);\n        }\n        return message;\n    }\n    parseErrorMessage(offset, length, bytes, name) {\n        this.reader.setBuffer(offset, bytes);\n        const fields = {};\n        let fieldType = this.reader.string(1);\n        while (fieldType !== '\\0') {\n            fields[fieldType] = this.reader.cstring();\n            fieldType = this.reader.string(1);\n        }\n        const messageValue = fields.M;\n        const message = name === 'notice' ? new messages_1.NoticeMessage(length, messageValue) : new messages_1.DatabaseError(messageValue, length, name);\n        message.severity = fields.S;\n        message.code = fields.C;\n        message.detail = fields.D;\n        message.hint = fields.H;\n        message.position = fields.P;\n        message.internalPosition = fields.p;\n        message.internalQuery = fields.q;\n        message.where = fields.W;\n        message.schema = fields.s;\n        message.table = fields.t;\n        message.column = fields.c;\n        message.dataType = fields.d;\n        message.constraint = fields.n;\n        message.file = fields.F;\n        message.line = fields.L;\n        message.routine = fields.R;\n        return message;\n    }\n}\nexports.Parser = Parser;\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = void 0;\nconst buffer_writer_1 = require(\"./buffer-writer\");\nconst writer = new buffer_writer_1.Writer();\nconst startup = (opts) => {\n    // protocol version\n    writer.addInt16(3).addInt16(0);\n    for (const key of Object.keys(opts)) {\n        writer.addCString(key).addCString(opts[key]);\n    }\n    writer.addCString('client_encoding').addCString('UTF8');\n    var bodyBuffer = writer.addCString('').flush();\n    // this message is sent without a code\n    var length = bodyBuffer.length + 4;\n    return new buffer_writer_1.Writer().addInt32(length).add(bodyBuffer).flush();\n};\nconst requestSsl = () => {\n    const response = Buffer.allocUnsafe(8);\n    response.writeInt32BE(8, 0);\n    response.writeInt32BE(80877103, 4);\n    return response;\n};\nconst password = (password) => {\n    return writer.addCString(password).flush(112 /* startup */);\n};\nconst sendSASLInitialResponseMessage = function (mechanism, initialResponse) {\n    // 0x70 = 'p'\n    writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse);\n    return writer.flush(112 /* startup */);\n};\nconst sendSCRAMClientFinalMessage = function (additionalData) {\n    return writer.addString(additionalData).flush(112 /* startup */);\n};\nconst query = (text) => {\n    return writer.addCString(text).flush(81 /* query */);\n};\nconst emptyArray = [];\nconst parse = (query) => {\n    // expect something like this:\n    // { name: 'queryName',\n    //   text: 'select * from blah',\n    //   types: ['int8', 'bool'] }\n    // normalize missing query names to allow for null\n    const name = query.name || '';\n    if (name.length > 63) {\n        /* eslint-disable no-console */\n        console.error('Warning! Postgres only supports 63 characters for query names.');\n        console.error('You supplied %s (%s)', name, name.length);\n        console.error('This can cause conflicts and silent errors executing queries');\n        /* eslint-enable no-console */\n    }\n    const types = query.types || emptyArray;\n    var len = types.length;\n    var buffer = writer\n        .addCString(name) // name of query\n        .addCString(query.text) // actual query text\n        .addInt16(len);\n    for (var i = 0; i < len; i++) {\n        buffer.addInt32(types[i]);\n    }\n    return writer.flush(80 /* parse */);\n};\nconst paramWriter = new buffer_writer_1.Writer();\nconst writeValues = function (values, valueMapper) {\n    for (let i = 0; i < values.length; i++) {\n        const mappedVal = valueMapper ? valueMapper(values[i], i) : values[i];\n        if (mappedVal == null) {\n            // add the param type (string) to the writer\n            writer.addInt16(0 /* STRING */);\n            // write -1 to the param writer to indicate null\n            paramWriter.addInt32(-1);\n        }\n        else if (mappedVal instanceof Buffer) {\n            // add the param type (binary) to the writer\n            writer.addInt16(1 /* BINARY */);\n            // add the buffer to the param writer\n            paramWriter.addInt32(mappedVal.length);\n            paramWriter.add(mappedVal);\n        }\n        else {\n            // add the param type (string) to the writer\n            writer.addInt16(0 /* STRING */);\n            paramWriter.addInt32(Buffer.byteLength(mappedVal));\n            paramWriter.addString(mappedVal);\n        }\n    }\n};\nconst bind = (config = {}) => {\n    // normalize config\n    const portal = config.portal || '';\n    const statement = config.statement || '';\n    const binary = config.binary || false;\n    const values = config.values || emptyArray;\n    const len = values.length;\n    writer.addCString(portal).addCString(statement);\n    writer.addInt16(len);\n    writeValues(values, config.valueMapper);\n    writer.addInt16(len);\n    writer.add(paramWriter.flush());\n    // format code\n    writer.addInt16(binary ? 1 /* BINARY */ : 0 /* STRING */);\n    return writer.flush(66 /* bind */);\n};\nconst emptyExecute = Buffer.from([69 /* execute */, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00]);\nconst execute = (config) => {\n    // this is the happy path for most queries\n    if (!config || (!config.portal && !config.rows)) {\n        return emptyExecute;\n    }\n    const portal = config.portal || '';\n    const rows = config.rows || 0;\n    const portalLength = Buffer.byteLength(portal);\n    const len = 4 + portalLength + 1 + 4;\n    // one extra bit for code\n    const buff = Buffer.allocUnsafe(1 + len);\n    buff[0] = 69 /* execute */;\n    buff.writeInt32BE(len, 1);\n    buff.write(portal, 5, 'utf-8');\n    buff[portalLength + 5] = 0; // null terminate portal cString\n    buff.writeUInt32BE(rows, buff.length - 4);\n    return buff;\n};\nconst cancel = (processID, secretKey) => {\n    const buffer = Buffer.allocUnsafe(16);\n    buffer.writeInt32BE(16, 0);\n    buffer.writeInt16BE(1234, 4);\n    buffer.writeInt16BE(5678, 6);\n    buffer.writeInt32BE(processID, 8);\n    buffer.writeInt32BE(secretKey, 12);\n    return buffer;\n};\nconst cstringMessage = (code, string) => {\n    const stringLen = Buffer.byteLength(string);\n    const len = 4 + stringLen + 1;\n    // one extra bit for code\n    const buffer = Buffer.allocUnsafe(1 + len);\n    buffer[0] = code;\n    buffer.writeInt32BE(len, 1);\n    buffer.write(string, 5, 'utf-8');\n    buffer[len] = 0; // null terminate cString\n    return buffer;\n};\nconst emptyDescribePortal = writer.addCString('P').flush(68 /* describe */);\nconst emptyDescribeStatement = writer.addCString('S').flush(68 /* describe */);\nconst describe = (msg) => {\n    return msg.name\n        ? cstringMessage(68 /* describe */, `${msg.type}${msg.name || ''}`)\n        : msg.type === 'P'\n            ? emptyDescribePortal\n            : emptyDescribeStatement;\n};\nconst close = (msg) => {\n    const text = `${msg.type}${msg.name || ''}`;\n    return cstringMessage(67 /* close */, text);\n};\nconst copyData = (chunk) => {\n    return writer.add(chunk).flush(100 /* copyFromChunk */);\n};\nconst copyFail = (message) => {\n    return cstringMessage(102 /* copyFail */, message);\n};\nconst codeOnlyBuffer = (code) => Buffer.from([code, 0x00, 0x00, 0x00, 0x04]);\nconst flushBuffer = codeOnlyBuffer(72 /* flush */);\nconst syncBuffer = codeOnlyBuffer(83 /* sync */);\nconst endBuffer = codeOnlyBuffer(88 /* end */);\nconst copyDoneBuffer = codeOnlyBuffer(99 /* copyDone */);\nconst serialize = {\n    startup,\n    password,\n    requestSsl,\n    sendSASLInitialResponseMessage,\n    sendSCRAMClientFinalMessage,\n    query,\n    parse,\n    bind,\n    execute,\n    describe,\n    close,\n    flush: () => flushBuffer,\n    sync: () => syncBuffer,\n    end: () => endBuffer,\n    copyData,\n    copyDone: () => copyDoneBuffer,\n    copyFail,\n    cancel,\n};\nexports.serialize = serialize;\n//# sourceMappingURL=serializer.js.map","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n","var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n","var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n","/**\n * Following query was used to generate this file:\n\n SELECT json_object_agg(UPPER(PT.typname), PT.oid::int4 ORDER BY pt.oid)\n FROM pg_type PT\n WHERE typnamespace = (SELECT pgn.oid FROM pg_namespace pgn WHERE nspname = 'pg_catalog') -- Take only builting Postgres types with stable OID (extension types are not guaranted to be stable)\n AND typtype = 'b' -- Only basic types\n AND typelem = 0 -- Ignore aliases\n AND typisdefined -- Ignore undefined types\n */\n\nmodule.exports = {\n    BOOL: 16,\n    BYTEA: 17,\n    CHAR: 18,\n    INT8: 20,\n    INT2: 21,\n    INT4: 23,\n    REGPROC: 24,\n    TEXT: 25,\n    OID: 26,\n    TID: 27,\n    XID: 28,\n    CID: 29,\n    JSON: 114,\n    XML: 142,\n    PG_NODE_TREE: 194,\n    SMGR: 210,\n    PATH: 602,\n    POLYGON: 604,\n    CIDR: 650,\n    FLOAT4: 700,\n    FLOAT8: 701,\n    ABSTIME: 702,\n    RELTIME: 703,\n    TINTERVAL: 704,\n    CIRCLE: 718,\n    MACADDR8: 774,\n    MONEY: 790,\n    MACADDR: 829,\n    INET: 869,\n    ACLITEM: 1033,\n    BPCHAR: 1042,\n    VARCHAR: 1043,\n    DATE: 1082,\n    TIME: 1083,\n    TIMESTAMP: 1114,\n    TIMESTAMPTZ: 1184,\n    INTERVAL: 1186,\n    TIMETZ: 1266,\n    BIT: 1560,\n    VARBIT: 1562,\n    NUMERIC: 1700,\n    REFCURSOR: 1790,\n    REGPROCEDURE: 2202,\n    REGOPER: 2203,\n    REGOPERATOR: 2204,\n    REGCLASS: 2205,\n    REGTYPE: 2206,\n    UUID: 2950,\n    TXID_SNAPSHOT: 2970,\n    PG_LSN: 3220,\n    PG_NDISTINCT: 3361,\n    PG_DEPENDENCIES: 3402,\n    TSVECTOR: 3614,\n    TSQUERY: 3615,\n    GTSVECTOR: 3642,\n    REGCONFIG: 3734,\n    REGDICTIONARY: 3769,\n    JSONB: 3802,\n    REGNAMESPACE: 4089,\n    REGROLE: 4096\n};\n","var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntervalArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseInterval(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(JSON.parse));\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(1187, parseIntervalArray);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('./utils')\nvar sasl = require('./sasl')\nvar pgPass = require('pgpass')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    // As with Password, make SSL->Key (the private key) non-enumerable.\n    // It won't show up in stack traces\n    // or if the client is console.logged\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    this.connectionTimeoutHandle\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      pgPass(this.connectionParameters, (pass) => {\n        if (undefined !== pass) {\n          this.connectionParameters.password = this.password = pass\n        }\n        cb()\n      })\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(() => {\n      const hashedPassword = utils.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n      this.connection.password(hashedPassword)\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      this.saslSession = sasl.startSession(msg.mechanisms)\n      this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n    })\n  }\n\n  _handleAuthSASLContinue(msg) {\n    sasl.continueSession(this.saslSession, this.password, msg.data)\n    this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n  }\n\n  _handleAuthSASLFinal(msg) {\n    sasl.finalizeSession(this.saslSession, msg.data)\n    this.saslSession = null\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete(msg) {\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeIdentifier(str) {\n    return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeLiteral(str) {\n    var hasBackslash = false\n    var escaped = \"'\"\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str[i]\n      if (c === \"'\") {\n        escaped += c + c\n      } else if (c === '\\\\') {\n        escaped += c + c\n        hasBackslash = true\n      } else {\n        escaped += c\n      }\n    }\n\n    escaped += \"'\"\n\n    if (hasBackslash === true) {\n      escaped = ' E' + escaped\n    }\n\n    return escaped\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  ref() {\n    this.connection.ref()\n  }\n\n  unref() {\n    this.connection.unref()\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n","'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    if (typeof this.ssl === 'string') {\n      if (this.ssl === 'true') {\n        this.ssl = true\n      }\n    }\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n","'use strict'\n\nvar net = require('net')\nvar EventEmitter = require('events').EventEmitter\n\nconst { parse, serialize } = require('pg-protocol')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n    this.stream = config.stream || new net.Socket()\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      var tls = require('tls')\n      const options = {\n        socket: self.stream,\n      }\n\n      if (self.ssl !== true) {\n        Object.assign(options, self.ssl)\n\n        if ('key' in self.ssl) {\n          options.key = self.ssl.key\n        }\n      }\n\n      if (net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = tls.connect(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    stream.on('end', () => {\n      this.emit('end')\n    })\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(flushBuffer)\n    this._send(syncBuffer)\n  }\n\n  ref() {\n    this.stream.ref()\n  }\n\n  unref() {\n    this.stream.unref()\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n","'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n","'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\nconst { DatabaseError } = require('pg-protocol')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n  this.DatabaseError = DatabaseError\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n","'use strict'\n\n// eslint-disable-next-line\nvar Native = require('pg-native')\nvar TypeOverrides = require('../type-overrides')\nvar pkg = require('../../package.json')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.ref = function () {}\nClient.prototype.unref = function () {}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n","'use strict'\nmodule.exports = require('./client')\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n","'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this.isPreparedStatement = false\n    this._canceledDueToError = false\n    this._promise = null\n  }\n\n  requiresPreparation() {\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this.types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, connection) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    // if we were using a row count which results in multiple calls to _getRows\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // since we pipeline sync immediately after execute we don't need to do anything here\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\n  handleEmptyQuery(connection) {\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      this.callback(null, this._results)\n    }\n    this.emit('end', this._results)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    // if we're not reading pages of rows send the sync command\n    // to indicate the pipeline is finished\n    if (!rows) {\n      connection.sync()\n    } else {\n      // otherwise flush the call out to read more rows\n      connection.flush()\n    }\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // prepared statements need sync to be called after each command\n    // complete or when an error is encountered\n    this.isPreparedStatement = true\n\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    // because we're mapping user supplied values to\n    // postgres wire protocol compatible values it could\n    // throw an exception, so try/catch this section\n    try {\n      connection.bind({\n        portal: this.portal,\n        statement: this.name,\n        values: this.values,\n        binary: this.binary,\n        valueMapper: utils.prepareValue,\n      })\n    } catch (err) {\n      this.handleError(err, connection)\n      return\n    }\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n","'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = {}\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      } else {\n        row[field] = null\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n  }\n}\n\nmodule.exports = Result\n","'use strict'\nconst crypto = require('crypto')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nfunction continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n  if (typeof password !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string')\n  }\n\n  const sv = parseServerFirstMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  } else if (sv.nonce.length === session.clientNonce.length) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')\n  }\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n\n  var saltedPassword = Hi(password, saltBytes, sv.iteration)\n\n  var clientKey = hmacSha256(saltedPassword, 'Client Key')\n  var storedKey = sha256(clientKey)\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var clientSignature = hmacSha256(storedKey, authMessage)\n  var clientProofBytes = xorBuffers(clientKey, clientSignature)\n  var clientProof = clientProofBytes.toString('base64')\n\n  var serverKey = hmacSha256(saltedPassword, 'Server Key')\n  var serverSignatureBytes = hmacSha256(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = serverSignatureBytes.toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string')\n  }\n\n  const { serverSignature } = parseServerFinalMessage(serverData)\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\n/**\n * printable       = %x21-2B / %x2D-7E\n *                   ;; Printable ASCII except \",\".\n *                   ;; Note that any \"printable\" is also\n *                   ;; a valid \"value\".\n */\nfunction isPrintableChars(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: text must be a string')\n  }\n  return text\n    .split('')\n    .map((_, i) => text.charCodeAt(i))\n    .every((c) => (c >= 0x21 && c <= 0x2b) || (c >= 0x2d && c <= 0x7e))\n}\n\n/**\n * base64-char     = ALPHA / DIGIT / \"/\" / \"+\"\n *\n * base64-4        = 4base64-char\n *\n * base64-3        = 3base64-char \"=\"\n *\n * base64-2        = 2base64-char \"==\"\n *\n * base64          = *base64-4 [base64-3 / base64-2]\n */\nfunction isBase64(text) {\n  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(text)\n}\n\nfunction parseAttributePairs(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: attribute pairs text must be a string')\n  }\n\n  return new Map(\n    text.split(',').map((attrValue) => {\n      if (!/^.=/.test(attrValue)) {\n        throw new Error('SASL: Invalid attribute pair entry')\n      }\n      const name = attrValue[0]\n      const value = attrValue.substring(2)\n      return [name, value]\n    })\n  )\n}\n\nfunction parseServerFirstMessage(data) {\n  const attrPairs = parseAttributePairs(data)\n\n  const nonce = attrPairs.get('r')\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  } else if (!isPrintableChars(nonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters')\n  }\n  const salt = attrPairs.get('s')\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  } else if (!isBase64(salt)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64')\n  }\n  const iterationText = attrPairs.get('i')\n  if (!iterationText) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  } else if (!/^[1-9][0-9]*$/.test(iterationText)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count')\n  }\n  const iteration = parseInt(iterationText, 10)\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction parseServerFinalMessage(serverData) {\n  const attrPairs = parseAttributePairs(serverData)\n  const serverSignature = attrPairs.get('v')\n  if (!serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing')\n  } else if (!isBase64(serverSignature)) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64')\n  }\n  return {\n    serverSignature,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    throw new TypeError('first argument must be a Buffer')\n  }\n  if (!Buffer.isBuffer(b)) {\n    throw new TypeError('second argument must be a Buffer')\n  }\n  if (a.length !== b.length) {\n    throw new Error('Buffer lengths must match')\n  }\n  if (a.length === 0) {\n    throw new Error('Buffers cannot be empty')\n  }\n  return Buffer.from(a.map((_, i) => a[i] ^ b[i]))\n}\n\nfunction sha256(text) {\n  return crypto.createHash('sha256').update(text).digest()\n}\n\nfunction hmacSha256(key, msg) {\n  return crypto.createHmac('sha256', key).update(msg).digest()\n}\n\nfunction Hi(password, saltBytes, iterations) {\n  var ui1 = hmacSha256(password, Buffer.concat([saltBytes, Buffer.from([0, 0, 0, 1])]))\n  var ui = ui1\n  for (var i = 0; i < iterations - 1; i++) {\n    ui1 = hmacSha256(password, ui1)\n    ui = xorBuffers(ui, ui1)\n  }\n\n  return ui\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n","'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n","'use strict'\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  // null and undefined are both null for postgres\n  if (val == null) {\n    return null\n  }\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5,\n}\n","'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , split = require('split2')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(rawEnv){\n    var env = rawEnv || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA || './' , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME || './', '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n","'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n","'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nclass ArrayParser {\n  constructor (source, transform) {\n    this.source = source\n    this.transform = transform || identity\n    this.position = 0\n    this.entries = []\n    this.recorded = []\n    this.dimension = 0\n  }\n\n  isEof () {\n    return this.position >= this.source.length\n  }\n\n  nextCharacter () {\n    var character = this.source[this.position++]\n    if (character === '\\\\') {\n      return {\n        value: this.source[this.position++],\n        escaped: true\n      }\n    }\n    return {\n      value: character,\n      escaped: false\n    }\n  }\n\n  record (character) {\n    this.recorded.push(character)\n  }\n\n  newEntry (includeEmpty) {\n    var entry\n    if (this.recorded.length > 0 || includeEmpty) {\n      entry = this.recorded.join('')\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n      if (entry !== null) entry = this.transform(entry)\n      this.entries.push(entry)\n      this.recorded = []\n    }\n  }\n\n  consumeDimensions () {\n    if (this.source[0] === '[') {\n      while (!this.isEof()) {\n        var char = this.nextCharacter()\n        if (char.value === '=') break\n      }\n    }\n  }\n\n  parse (nested) {\n    var character, parser, quote\n    this.consumeDimensions()\n    while (!this.isEof()) {\n      character = this.nextCharacter()\n      if (character.value === '{' && !quote) {\n        this.dimension++\n        if (this.dimension > 1) {\n          parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n          this.entries.push(parser.parse(true))\n          this.position += parser.position - 2\n        }\n      } else if (character.value === '}' && !quote) {\n        this.dimension--\n        if (!this.dimension) {\n          this.newEntry()\n          if (nested) return this.entries\n        }\n      } else if (character.value === '\"' && !character.escaped) {\n        if (quote) this.newEntry(true)\n        quote = !quote\n      } else if (character.value === ',' && !quote) {\n        this.newEntry()\n      } else {\n        this.record(character.value)\n      }\n    }\n    if (this.dimension !== 0) {\n      throw new Error('array dimension not balanced')\n    }\n    return this.entries\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n","'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n","'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return getDate(isoDate) || null\n  }\n\n  var isBC = !!matches[8]\n  var year = parseInt(matches[1], 10)\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, ms))\n\n    // Account for years from 0 to 99 being interpreted as 1900-1999\n    // by Date.UTC / the multi-argument form of the Date constructor\n    if (is0To99(year)) {\n      date.setUTCFullYear(year)\n    }\n\n    if (offset !== 0) {\n      date.setTime(date.getTime() - offset)\n    }\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n\n    if (is0To99(year)) {\n      date.setFullYear(year)\n    }\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  if (!matches) {\n    return\n  }\n\n  var year = parseInt(matches[1], 10)\n  var isBC = !!matches[4]\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n\n  if (is0To99(year)) {\n    date.setFullYear(year)\n  }\n\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  if (isoDate.endsWith('+00')) {\n    return 0\n  }\n\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\nfunction bcYearToNegativeYear (year) {\n  // Account for numerical difference between representations of BC years\n  // See: https://github.com/bendrucker/postgres-date/issues/5\n  return -(year - 1)\n}\n\nfunction is0To99 (num) {\n  return num >= 0 && num < 100\n}\n","'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n","/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, done)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createError(status, err, {\n      expose: false\n    }))\n  }\n\n  var res = this.res\n  var msg = statuses[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip content-* header fields.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    var header = headers[i]\n    if (header.substr(0, 8) === 'content-' && header !== 'content-location') {\n      res.removeHeader(header)\n    }\n  }\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    'etag': this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n    root = normalize(root + sep)\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: {'Content-Range': res.getHeader('Content-Range')}\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  // TODO: this is all lame, refactor meeee\n  var finished = false\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // response finished, done with the fd\n  onFinished(res, function onfinished () {\n    finished = true\n    destroy(stream)\n  })\n\n  // error handling code-smell\n  stream.on('error', function onerror (err) {\n    // request already finished\n    if (finished) return\n\n    // clean up stream\n    finished = true\n    destroy(stream)\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n /**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n","module.exports = Object.setPrototypeOf || ({__proto__:[]} instanceof Array ? setProtoOf : mixinProperties);\n\nfunction setProtoOf(obj, proto) {\n\tobj.__proto__ = proto;\n\treturn obj;\n}\n\nfunction mixinProperties(obj, proto) {\n\tfor (var prop in proto) {\n\t\tif (!obj.hasOwnProperty(prop)) {\n\t\t\tobj[prop] = proto[prop];\n\t\t}\n\t}\n\treturn obj;\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","require('./').install();\n","var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction globalProcessVersion() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.version;\n  } else {\n    return '';\n  }\n}\n\nfunction globalProcessStderr() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.stderr;\n  }\n}\n\nfunction globalProcessExit(code) {\n  if ((typeof process === 'object') && (process !== null) && (typeof process.exit === 'function')) {\n    return process.exit(code);\n  }\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  var stderr = globalProcessStderr();\n  if (stderr && stderr._handle && stderr._handle.setBlocking) {\n    stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  globalProcessExit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n","/**\r\n * @class PromiseAdapter\r\n * @description\r\n * Adapter for the primary promise operations.\r\n *\r\n * Provides compatibility with promise libraries that cannot be recognized automatically,\r\n * via functions that implement the primary operations with promises:\r\n *\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * #### Example\r\n *\r\n * Below is an example of setting up a [client-side]{@tutorial client} adapter for AngularJS $q.\r\n *\r\n * ```js\r\n * const spexLib = require('spex'); // or include client-side spex.js\r\n *\r\n * const adapter = new spexLib.PromiseAdapter(\r\n *    cb => $q(cb), // creating a new promise;\r\n *    data => $q.when(data), // resolving a promise;\r\n *    reason => $q.reject(reason) // rejecting a promise;\r\n *    );\r\n *\r\n * const spex = spexLib(adapter);\r\n * ```\r\n *\r\n * @param {Function} create\r\n * A function that takes a callback parameter and returns a new promise object.\r\n * The callback parameter is expected to be `function(resolve, reject)`.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to create a promise.`\r\n *\r\n * @param {Function} resolve\r\n * A function that takes an optional data parameter and resolves a promise with it.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to resolve a promise.`\r\n *\r\n * @param {Function} reject\r\n * A function that takes an optional error parameter and rejects a promise with it.\r\n *\r\n * Passing in anything other than a function will throw `Adapter requires a function to reject a promise.`\r\n *\r\n * @see {@tutorial client}\r\n *\r\n */\r\nclass PromiseAdapter {\r\n    constructor(create, resolve, reject) {\r\n        this.create = create;\r\n        this.resolve = resolve;\r\n        this.reject = reject;\r\n\r\n        if (typeof create !== 'function') {\r\n            throw new TypeError('Adapter requires a function to create a promise.');\r\n        }\r\n\r\n        if (typeof resolve !== 'function') {\r\n            throw new TypeError('Adapter requires a function to resolve a promise.');\r\n        }\r\n\r\n        if (typeof reject !== 'function') {\r\n            throw new TypeError('Adapter requires a function to reject a promise.');\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = PromiseAdapter;\r\n","const npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\n/**\r\n * @class errors.BatchError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link batch}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `BatchError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * It represents the message of the first error encountered in the batch, and is a safe\r\n * version of using `first.message`.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {array} data\r\n * Array of objects `{success, result, [origin]}`:\r\n * - `success` = true/false, indicates whether the corresponding value in the input array was resolved.\r\n * - `result` = resolved data, if `success`=`true`, or else the rejection reason.\r\n * - `origin` - set only when failed as a result of an unsuccessful call into the notification callback\r\n *    (parameter `cb` of method {@link batch})\r\n *\r\n * The array has the same size as the input one that was passed into method {@link batch}, providing direct mapping.\r\n *\r\n * @property {} stat\r\n * Resolution Statistics.\r\n *\r\n * @property {number} stat.total\r\n * Total number of elements in the batch.\r\n *\r\n * @property {number} stat.succeeded\r\n * Number of resolved values in the batch.\r\n *\r\n * @property {number} stat.failed\r\n * Number of rejected values in the batch.\r\n *\r\n * @property {number} stat.duration\r\n * Time in milliseconds it took to settle all values.\r\n *\r\n * @property {} first\r\n * The very first error within the batch, with support for nested batch results, it is also the same error\r\n * as $[promise.all] would provide.\r\n *\r\n * @see {@link batch}\r\n *\r\n */\r\nclass BatchError extends Error {\r\n\r\n    constructor(result, errors, duration) {\r\n\r\n        function getErrors() {\r\n            const err = new Array(errors.length);\r\n            for (let i = 0; i < errors.length; i++) {\r\n                err[i] = result[errors[i]].result;\r\n                if (err[i] instanceof BatchError) {\r\n                    err[i] = err[i].getErrors();\r\n                }\r\n            }\r\n            npm.utils.extend(err, '$isErrorList', true);\r\n            return err;\r\n        }\r\n\r\n        const e = getErrors();\r\n\r\n        let first = e[0];\r\n\r\n        while (first && first.$isErrorList) {\r\n            first = first[0];\r\n        }\r\n\r\n        let message;\r\n\r\n        if (first instanceof Error) {\r\n            message = first.message;\r\n        } else {\r\n            if (typeof first !== 'string') {\r\n                first = npm.u.inspect(first);\r\n            }\r\n            message = first;\r\n        }\r\n\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n\r\n        this.data = result;\r\n\r\n        // we do not show it within the inspect, because when the error\r\n        // happens for a nested result, the output becomes a mess.\r\n        this.first = first;\r\n\r\n        this.stat = {\r\n            total: result.length,\r\n            succeeded: result.length - e.length,\r\n            failed: e.length,\r\n            duration: duration\r\n        };\r\n\r\n        this.getErrors = getErrors;\r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n\r\n    /**\r\n     * @method errors.BatchError.getErrors\r\n     * @description\r\n     * Returns the complete list of errors only.\r\n     *\r\n     * It supports nested batch results, presented as a sub-array.\r\n     *\r\n     * @returns {array}\r\n     */\r\n}\r\n\r\n/**\r\n * @method errors.BatchError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * The output is an abbreviated version of the error, because the complete error\r\n * is often too much for displaying or even logging, as a batch can be of any size.\r\n * Therefore, only errors are rendered from the `data` property, alongside their indexes,\r\n * and only up to the first 5, to avoid polluting the screen or the log file.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nBatchError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        gap2 = npm.utils.messageGap(level + 2),\r\n        lines = [\r\n            'BatchError {',\r\n            gap1 + 'stat: { total: ' + this.stat.total + ', succeeded: ' + this.stat.succeeded +\r\n            ', failed: ' + this.stat.failed + ', duration: ' + this.stat.duration + ' }',\r\n            gap1 + 'errors: ['\r\n        ];\r\n\r\n    // In order to avoid polluting the error log or the console, \r\n    // we limit the log output to the top 5 errors:\r\n    const maxErrors = 5;\r\n    let counter = 0;\r\n    this.data.forEach((d, index) => {\r\n        if (!d.success && counter < maxErrors) {\r\n            lines.push(gap2 + index + ': ' + npm.utils.formatError(d.result, level + 2));\r\n            counter++;\r\n        }\r\n    });\r\n    lines.push(gap1 + ']');\r\n    lines.push(gap0 + '}');\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(BatchError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {BatchError};\r\n\r\n","const {BatchError} = require('./batch');\r\nconst {PageError} = require('./page');\r\nconst {SequenceError} = require('./sequence');\r\n\r\n\r\n/**\r\n * @namespace errors\r\n * @description\r\n * Namespace for all custom error types supported by the library.\r\n *\r\n * In addition to the custom error type used by each method (regular error), they can also reject with\r\n * {@link external:TypeError TypeError} when receiving invalid input parameters.\r\n *\r\n * @property {function} BatchError\r\n * {@link errors.BatchError BatchError} class.\r\n *\r\n * Represents regular errors that can be reported by method {@link batch}.\r\n *\r\n * @property {function} PageError\r\n * {@link errors.PageError PageError} class.\r\n *\r\n * Represents regular errors that can be reported by method {@link page}.\r\n *\r\n * @property {function} SequenceError\r\n * {@link errors.SequenceError SequenceError} class.\r\n *\r\n * Represents regular errors that can be reported by method {@link sequence}.\r\n *\r\n */\r\nmodule.exports = {\r\n    BatchError,\r\n    PageError,\r\n    SequenceError\r\n};\r\n\r\nObject.freeze(module.exports);\r\n","const npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\nconst errorReasons = {\r\n    0: 'Page with index %d rejected.',\r\n    1: 'Source %s returned a rejection at index %d.',\r\n    2: 'Source %s threw an error at index %d.',\r\n    3: 'Destination %s returned a rejection at index %d.',\r\n    4: 'Destination %s threw an error at index %d.',\r\n    5: 'Source %s returned a non-array value at index %d.'\r\n};\r\n\r\n/**\r\n * @class errors.PageError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link page}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `PageError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {} error\r\n * The error that was thrown, or the rejection reason.\r\n *\r\n * @property {number} index\r\n * Index of the element in the sequence for which the error/rejection occurred.\r\n *\r\n * @property {number} duration\r\n * Duration (in milliseconds) of processing until the error/rejection occurred.\r\n *\r\n * @property {string} reason\r\n * Textual explanation of why the method failed.\r\n *\r\n * @property {} source\r\n * Resolved `data` parameter that was passed into the `source` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `source` function.\r\n *\r\n * @property {} dest\r\n * Resolved `data` parameter that was passed into the `dest` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `dest` function.\r\n *\r\n * @see\r\n * {@link page},\r\n * {@link batch}\r\n *\r\n */\r\nclass PageError extends Error {\r\n\r\n    constructor(e, code, cbName, duration) {\r\n\r\n        let message;\r\n        if (e.error instanceof Error) {\r\n            message = e.error.message;\r\n        } else {\r\n            message = e.error;\r\n            if (typeof message !== 'string') {\r\n                message = npm.u.inspect(message);\r\n            }\r\n        }\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n\r\n        this.index = e.index;\r\n        this.duration = duration;\r\n        this.error = e.error;\r\n\r\n        if ('source' in e) {\r\n            this.source = e.source;\r\n        }\r\n\r\n        if ('dest' in e) {\r\n            this.dest = e.dest;\r\n        }\r\n\r\n        if (code) {\r\n            cbName = cbName ? ('\\'' + cbName + '\\'') : '<anonymous>';\r\n            this.reason = npm.u.format(errorReasons[code], cbName, e.index);\r\n        } else {\r\n            this.reason = npm.u.format(errorReasons[code], e.index);\r\n        }\r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @method errors.PageError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPageError.prototype.toString = function (level) {\r\n\r\n    level = level > 0 ? parseInt(level) : 0;\r\n\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'PageError {',\r\n            gap1 + 'message: ' + JSON.stringify(this.message),\r\n            gap1 + 'reason: ' + this.reason,\r\n            gap1 + 'index: ' + this.index,\r\n            gap1 + 'duration: ' + this.duration\r\n        ];\r\n\r\n    lines.push(gap1 + 'error: ' + npm.utils.formatError(this.error, level + 1));\r\n    lines.push(gap0 + '}');\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(PageError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {PageError};\r\n\r\n","const npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\nconst errorReasons = {\r\n    0: 'Source %s returned a rejection at index %d.',\r\n    1: 'Source %s threw an error at index %d.',\r\n    2: 'Destination %s returned a rejection at index %d.',\r\n    3: 'Destination %s threw an error at index %d.'\r\n};\r\n\r\n/**\r\n * @class errors.SequenceError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link sequence}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `SequenceError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {} error\r\n * The error that was thrown or the rejection reason.\r\n *\r\n * @property {number} index\r\n * Index of the element in the sequence for which the error/rejection occurred.\r\n *\r\n * @property {number} duration\r\n * Duration (in milliseconds) of processing until the error/rejection occurred.\r\n *\r\n * @property {string} reason\r\n * Textual explanation of why the method failed.\r\n *\r\n * @property {} source\r\n * Resolved `data` parameter that was passed into the `source` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `source` function.\r\n *\r\n * @property {} dest\r\n * Resolved `data` parameter that was passed into the `dest` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `dest` function.\r\n *\r\n * @see {@link sequence}\r\n *\r\n */\r\nclass SequenceError extends Error {\r\n\r\n    constructor(e, code, cbName, duration) {\r\n\r\n        let message;\r\n        if (e.error instanceof Error) {\r\n            message = e.error.message;\r\n        } else {\r\n            message = e.error;\r\n            if (typeof message !== 'string') {\r\n                message = npm.u.inspect(message);\r\n            }\r\n        }\r\n\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n\r\n        this.index = e.index;\r\n        this.duration = duration;\r\n        this.error = e.error;\r\n\r\n        if ('source' in e) {\r\n            this.source = e.source;\r\n        } else {\r\n            this.dest = e.dest;\r\n        }\r\n\r\n        cbName = cbName ? ('\\'' + cbName + '\\'') : '<anonymous>';\r\n        this.reason = npm.u.format(errorReasons[code], cbName, e.index);\r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\n/**\r\n * @method errors.SequenceError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nSequenceError.prototype.toString = function (level) {\r\n\r\n    level = level > 0 ? parseInt(level) : 0;\r\n\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'SequenceError {',\r\n            gap1 + 'message: ' + JSON.stringify(this.message),\r\n            gap1 + 'reason: ' + this.reason,\r\n            gap1 + 'index: ' + this.index,\r\n            gap1 + 'duration: ' + this.duration\r\n        ];\r\n\r\n    lines.push(gap1 + 'error: ' + npm.utils.formatError(this.error, level + 1));\r\n    lines.push(gap0 + '}');\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(SequenceError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {SequenceError};\r\n\r\n","const {BatchError} = require('../errors/batch');\r\n\r\n/**\r\n * @method batch\r\n * @description\r\n * Settles (resolves or rejects) every [mixed value]{@tutorial mixed} in the input array.\r\n *\r\n * The method resolves with an array of results, the same as the standard $[promise.all],\r\n * while providing comprehensive error details in case of a reject, in the form of\r\n * type {@link errors.BatchError BatchError}.\r\n *\r\n * @param {Array} values\r\n * Array of [mixed values]{@tutorial mixed} (it can be empty), to be resolved asynchronously, in no particular order.\r\n *\r\n * Passing in anything other than an array will reject with {@link external:TypeError TypeError} =\r\n * `Method 'batch' requires an array of values.`\r\n *\r\n * @param {Object} [options]\r\n * Optional Parameters.\r\n *\r\n * @param {Function|generator} [options.cb]\r\n * Optional callback (or generator) to receive the result for each settled value.\r\n *\r\n * Callback Parameters:\r\n *  - `index` = index of the value in the source array\r\n *  - `success` - indicates whether the value was resolved (`true`), or rejected (`false`)\r\n *  - `result` = resolved data, if `success`=`true`, or else the rejection reason\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * It can optionally return a promise to indicate that notifications are handled asynchronously.\r\n * And if the returned promise resolves, it signals a successful handling, while any resolved\r\n * data is ignored.\r\n *\r\n * If the function returns a rejected promise or throws an error, the entire method rejects\r\n * with {@link errors.BatchError BatchError} where the corresponding value in property `data`\r\n * is set to `{success, result, origin}`:\r\n *  - `success` = `false`\r\n *  - `result` = the rejection reason or the error thrown by the notification callback\r\n *  - `origin` = the original data passed into the callback as object `{success, result}`\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * The method resolves with an array of individual resolved results, the same as the standard $[promise.all].\r\n * In addition, the array is extended with a hidden read-only property `duration` - number of milliseconds\r\n * spent resolving all the data.\r\n *\r\n * The method rejects with {@link errors.BatchError BatchError} when any of the following occurs:\r\n *  - one or more values rejected or threw an error while being resolved as a [mixed value]{@tutorial mixed}\r\n *  - notification callback `cb` returned a rejected promise or threw an error\r\n *\r\n */\r\nfunction batch(values, options, config) {\r\n\r\n    const $p = config.promise, utils = config.utils;\r\n\r\n    if (!Array.isArray(values)) {\r\n        return $p.reject(new TypeError('Method \\'batch\\' requires an array of values.'));\r\n    }\r\n\r\n    if (!values.length) {\r\n        const empty = [];\r\n        utils.extend(empty, 'duration', 0);\r\n        return $p.resolve(empty);\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    const cb = utils.wrap(options.cb),\r\n        self = this, start = Date.now();\r\n\r\n    return $p((resolve, reject) => {\r\n        let cbTime, remaining = values.length;\r\n        const errors = [], result = new Array(remaining);\r\n        values.forEach((item, i) => {\r\n            utils.resolve.call(self, item, null, data => {\r\n                result[i] = data;\r\n                step(i, true, data);\r\n            }, reason => {\r\n                result[i] = {success: false, result: reason};\r\n                errors.push(i);\r\n                step(i, false, reason);\r\n            });\r\n        });\r\n\r\n        function step(idx, pass, data) {\r\n            if (cb) {\r\n                const cbNow = Date.now(),\r\n                    cbDelay = idx ? (cbNow - cbTime) : undefined;\r\n                let cbResult;\r\n                cbTime = cbNow;\r\n                try {\r\n                    cbResult = cb.call(self, idx, pass, data, cbDelay);\r\n                } catch (e) {\r\n                    setError(e);\r\n                }\r\n                if (utils.isPromise(cbResult)) {\r\n                    cbResult\r\n                        .then(check)\r\n                        .catch(error => {\r\n                            setError(error);\r\n                            check();\r\n                        });\r\n                } else {\r\n                    check();\r\n                }\r\n            } else {\r\n                check();\r\n            }\r\n\r\n            function setError(e) {\r\n                const r = pass ? {success: false} : result[idx];\r\n                if (pass) {\r\n                    result[idx] = r;\r\n                    errors.push(idx);\r\n                }\r\n                r.result = e;\r\n                r.origin = {success: pass, result: data};\r\n            }\r\n\r\n            function check() {\r\n                if (!--remaining) {\r\n                    if (errors.length) {\r\n                        errors.sort();\r\n                        if (errors.length < result.length) {\r\n                            for (let i = 0, k = 0; i < result.length; i++) {\r\n                                if (i === errors[k]) {\r\n                                    k++;\r\n                                } else {\r\n                                    result[i] = {success: true, result: result[i]};\r\n                                }\r\n                            }\r\n                        }\r\n                        reject(new BatchError(result, errors, Date.now() - start));\r\n                    } else {\r\n                        utils.extend(result, 'duration', Date.now() - start);\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                return null; // this dummy return is just to prevent Bluebird warnings;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (values, options) {\r\n        return batch.call(this, values, options, config);\r\n    };\r\n};\r\n","const {PageError} = require('../errors/page');\r\n\r\n/**\r\n * @method page\r\n * @description\r\n * Resolves a dynamic sequence of pages/arrays with [mixed values]{@tutorial mixed}.\r\n *\r\n * The method acquires pages (arrays of [mixed values]{@tutorial mixed}) from the `source` function, one by one,\r\n * and resolves each page as a {@link batch}, till no more pages left or an error/reject occurs.\r\n *\r\n * @param {Function|generator} source\r\n * Expected to return a [mixed value]{@tutorial mixed} that resolves with the next page of data (array of [mixed values]{@tutorial mixed}).\r\n * Returning or resolving with `undefined` ends the sequence, and the method resolves.\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * Parameters:\r\n *  - `index` = index of the page being requested\r\n *  - `data` = previously returned page, resolved as a {@link batch} (`undefined` when `index=0`)\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * If the function throws an error or returns a rejected promise, the method rejects with\r\n * {@link errors.PageError PageError}, which will have property `source` set.\r\n *\r\n * And if the function returns or resolves with anything other than an array or `undefined`,\r\n * the method rejects with the same {@link errors.PageError PageError}, but with `error` set to\r\n * `Unexpected data returned from the source.`\r\n *\r\n * Passing in anything other than a function will reject with {@link external:TypeError TypeError} = `Parameter 'source' must be a function.`\r\n *\r\n * @param {Object} [options]\r\n * Optional Parameters.\r\n *\r\n * @param {Function|generator} [options.dest]\r\n * Optional destination function (or generator), to receive a resolved {@link batch} of data\r\n * for each page, process it and respond as required.\r\n *\r\n * Parameters:\r\n *  - `index` = page index in the sequence\r\n *  - `data` = page data resolved as a {@link batch}\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * It can optionally return a promise object, if notifications are handled asynchronously.\r\n * And if a promise is returned, the method will not request another page from the `source`\r\n * function until the promise has been resolved.\r\n *\r\n * If the function throws an error or returns a rejected promise, the sequence terminates,\r\n * and the method rejects with {@link errors.PageError PageError}, which will have property `dest` set.\r\n *\r\n * @param {Number} [options.limit=0]\r\n * Limits the maximum number of pages to be requested from the `source`. If the value is greater\r\n * than 0, the method will successfully resolve once the specified limit has been reached.\r\n *\r\n * When `limit` isn't specified (default), the sequence is unlimited, and it will continue\r\n * till one of the following occurs:\r\n *  - `source` returns or resolves with `undefined` or an invalid value (non-array)\r\n *  - either `source` or `dest` functions throw an error or return a rejected promise\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * When successful, the method resolves with object `{pages, total, duration}`:\r\n *  - `pages` = number of pages resolved\r\n *  - `total` = the sum of all page sizes (total number of values resolved)\r\n *  - `duration` = number of milliseconds consumed by the method\r\n *\r\n * When the method fails, it rejects with {@link errors.PageError PageError}.\r\n *\r\n */\r\nfunction page(source, options, config) {\r\n\r\n    const $p = config.promise, spex = config.spex, utils = config.utils;\r\n\r\n    if (typeof source !== 'function') {\r\n        return $p.reject(new TypeError('Parameter \\'source\\' must be a function.'));\r\n    }\r\n\r\n    options = options || {};\r\n    source = utils.wrap(source);\r\n\r\n    const limit = (options.limit > 0) ? parseInt(options.limit) : 0,\r\n        dest = utils.wrap(options.dest), self = this, start = Date.now();\r\n    let request, srcTime, destTime, total = 0;\r\n\r\n    return $p((resolve, reject) => {\r\n\r\n        function loop(idx) {\r\n            const srcNow = Date.now(),\r\n                srcDelay = idx ? (srcNow - srcTime) : undefined;\r\n            srcTime = srcNow;\r\n            utils.resolve.call(self, source, [idx, request, srcDelay], value => {\r\n                if (value === undefined) {\r\n                    success();\r\n                } else {\r\n                    if (value instanceof Array) {\r\n                        spex.batch(value)\r\n                            .then(data => {\r\n                                request = data;\r\n                                total += data.length;\r\n                                if (dest) {\r\n                                    const destNow = Date.now(),\r\n                                        destDelay = idx ? (destNow - destTime) : undefined;\r\n                                    let destResult;\r\n                                    destTime = destNow;\r\n                                    try {\r\n                                        destResult = dest.call(self, idx, data, destDelay);\r\n                                    } catch (err) {\r\n                                        fail({\r\n                                            error: err,\r\n                                            dest: data\r\n                                        }, 4, dest.name);\r\n                                        return;\r\n                                    }\r\n                                    if (utils.isPromise(destResult)) {\r\n                                        destResult\r\n                                            .then(next)\r\n                                            .catch(error => {\r\n                                                fail({\r\n                                                    error: error,\r\n                                                    dest: data\r\n                                                }, 3, dest.name);\r\n                                            });\r\n                                    } else {\r\n                                        next();\r\n                                    }\r\n                                } else {\r\n                                    next();\r\n                                }\r\n                                return null; // this dummy return is just to prevent Bluebird warnings;\r\n                            })\r\n                            .catch(error => {\r\n                                fail({\r\n                                    error: error\r\n                                }, 0);\r\n                            });\r\n                    } else {\r\n                        fail({\r\n                            error: new Error('Unexpected data returned from the source.'),\r\n                            source: request\r\n                        }, 5, source.name);\r\n                    }\r\n                }\r\n            }, (reason, isRej) => {\r\n                fail({\r\n                    error: reason,\r\n                    source: request\r\n                }, isRej ? 1 : 2, source.name);\r\n            });\r\n\r\n            function next() {\r\n                if (limit === ++idx) {\r\n                    success();\r\n                } else {\r\n                    loop(idx);\r\n                }\r\n                return null; // this dummy return is just to prevent Bluebird warnings;\r\n            }\r\n\r\n            function success() {\r\n                resolve({\r\n                    pages: idx,\r\n                    total: total,\r\n                    duration: Date.now() - start\r\n                });\r\n            }\r\n\r\n            function fail(reason, code, cbName) {\r\n                reason.index = idx;\r\n                reject(new PageError(reason, code, cbName, Date.now() - start));\r\n            }\r\n        }\r\n\r\n        loop(0);\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (source, options) {\r\n        return page.call(this, source, options, config);\r\n    };\r\n};\r\n","const {SequenceError} = require('../errors/sequence');\r\n\r\n/**\r\n * @method sequence\r\n * @description\r\n * Resolves a dynamic sequence of [mixed values]{@tutorial mixed}.\r\n *\r\n * The method acquires [mixed values]{@tutorial mixed} from the `source` function, one at a time, and resolves them,\r\n * till either no more values left in the sequence or an error/reject occurs.\r\n *\r\n * It supports both [linked and detached sequencing]{@tutorial sequencing}.\r\n *\r\n * @param {Function|generator} source\r\n * Expected to return the next [mixed value]{@tutorial mixed} to be resolved. Returning or resolving\r\n * with `undefined` ends the sequence, and the method resolves.\r\n *\r\n * Parameters:\r\n *  - `index` = current request index in the sequence\r\n *  - `data` = resolved data from the previous call (`undefined` when `index=0`)\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * If the function throws an error or returns a rejected promise, the sequence terminates,\r\n * and the method rejects with {@link errors.SequenceError SequenceError}, which will have property `source` set.\r\n *\r\n * Passing in anything other than a function will reject with {@link external:TypeError TypeError} = `Parameter 'source' must be a function.`\r\n *\r\n * @param {Object} [options]\r\n * Optional Parameters.\r\n *\r\n * @param {Function|generator} [options.dest=null]\r\n * Optional destination function (or generator), to receive resolved data for each index,\r\n * process it and respond as required.\r\n *\r\n * Parameters:\r\n *  - `index` = index of the resolved data in the sequence\r\n *  - `data` = the data resolved\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function inherits `this` context from the calling method.\r\n *\r\n * It can optionally return a promise object, if data processing is done asynchronously.\r\n * If a promise is returned, the method will not request another value from the `source` function,\r\n * until the promise has been resolved (the resolved value is ignored).\r\n *\r\n * If the function throws an error or returns a rejected promise, the sequence terminates,\r\n * and the method rejects with {@link errors.SequenceError SequenceError}, which will have property `dest` set.\r\n *\r\n * @param {Number} [options.limit=0]\r\n * Limits the maximum size of the sequence. If the value is greater than 0, the method will\r\n * successfully resolve once the specified limit has been reached.\r\n *\r\n * When `limit` isn't specified (default), the sequence is unlimited, and it will continue\r\n * till one of the following occurs:\r\n *  - `source` either returns or resolves with `undefined`\r\n *  - either `source` or `dest` functions throw an error or return a rejected promise\r\n *\r\n * @param {Boolean} [options.track=false]\r\n * Changes the type of data to be resolved by this method. By default, it is `false`\r\n * (see the return result). When set to be `true`, the method tracks/collects all resolved data\r\n * into an array internally, and resolves with that array once the method has finished successfully.\r\n *\r\n * It must be used with caution, as to the size of the sequence, because accumulating data for\r\n * a very large sequence can result in consuming too much memory.\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * When successful, the resolved data depends on parameter `track`. When `track` is `false`\r\n * (default), the method resolves with object `{total, duration}`:\r\n *  - `total` = number of values resolved by the sequence\r\n *  - `duration` = number of milliseconds consumed by the method\r\n *\r\n * When `track` is `true`, the method resolves with an array of all the data that has been resolved,\r\n * the same way that the standard $[promise.all] resolves. In addition, the array comes extended with\r\n * a hidden read-only property `duration` - number of milliseconds consumed by the method.\r\n *\r\n * When the method fails, it rejects with {@link errors.SequenceError SequenceError}.\r\n */\r\nfunction sequence(source, options, config) {\r\n\r\n    const $p = config.promise, utils = config.utils;\r\n\r\n    if (typeof source !== 'function') {\r\n        return $p.reject(new TypeError('Parameter \\'source\\' must be a function.'));\r\n    }\r\n\r\n    source = utils.wrap(source);\r\n\r\n    options = options || {};\r\n\r\n    const limit = (options.limit > 0) ? parseInt(options.limit) : 0,\r\n        dest = utils.wrap(options.dest),\r\n        self = this, start = Date.now();\r\n    let data, srcTime, destTime, result = [];\r\n\r\n    return $p((resolve, reject) => {\r\n\r\n        function loop(idx) {\r\n            const srcNow = Date.now(),\r\n                srcDelay = idx ? (srcNow - srcTime) : undefined;\r\n            srcTime = srcNow;\r\n            utils.resolve.call(self, source, [idx, data, srcDelay], (value, delayed) => {\r\n                data = value;\r\n                if (data === undefined) {\r\n                    success();\r\n                } else {\r\n                    if (options.track) {\r\n                        result.push(data);\r\n                    }\r\n                    if (dest) {\r\n                        const destNow = Date.now(),\r\n                            destDelay = idx ? (destNow - destTime) : undefined;\r\n                        let destResult;\r\n                        destTime = destNow;\r\n                        try {\r\n                            destResult = dest.call(self, idx, data, destDelay);\r\n                        } catch (e) {\r\n                            fail({\r\n                                error: e,\r\n                                dest: data\r\n                            }, 3, dest.name);\r\n                            return;\r\n                        }\r\n                        if (utils.isPromise(destResult)) {\r\n                            destResult\r\n                                .then(() => {\r\n                                    next(true);\r\n                                    return null; // this dummy return is just to prevent Bluebird warnings;\r\n                                })\r\n                                .catch(error => {\r\n                                    fail({\r\n                                        error: error,\r\n                                        dest: data\r\n                                    }, 2, dest.name);\r\n                                });\r\n                        } else {\r\n                            next(delayed);\r\n                        }\r\n                    } else {\r\n                        next(delayed);\r\n                    }\r\n                }\r\n            }, (reason, isRej) => {\r\n                fail({\r\n                    error: reason,\r\n                    source: data\r\n                }, isRej ? 0 : 1, source.name);\r\n            });\r\n\r\n            function next(delayed) {\r\n                if (limit === ++idx) {\r\n                    success();\r\n                } else {\r\n                    if (delayed) {\r\n                        loop(idx);\r\n                    } else {\r\n                        $p.resolve()\r\n                            .then(() => {\r\n                                loop(idx);\r\n                                return null; // this dummy return is just to prevent Bluebird warnings;\r\n                            });\r\n                    }\r\n                }\r\n            }\r\n\r\n            function success() {\r\n                const length = Date.now() - start;\r\n                if (options.track) {\r\n                    utils.extend(result, 'duration', length);\r\n                } else {\r\n                    result = {\r\n                        total: idx,\r\n                        duration: length\r\n                    };\r\n                }\r\n                resolve(result);\r\n            }\r\n\r\n            function fail(reason, code, cbName) {\r\n                reason.index = idx;\r\n                reject(new SequenceError(reason, code, cbName, Date.now() - start));\r\n            }\r\n        }\r\n\r\n        loop(0);\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (source, options) {\r\n        return sequence.call(this, source, options, config);\r\n    };\r\n};\r\n","const npm = {\r\n    read: require('./read')\r\n};\r\n\r\n/**\r\n * @namespace stream\r\n * @description\r\n * Namespace with methods that implement stream operations, and {@link stream.read read} is the only method currently supported.\r\n *\r\n * **Synchronous Stream Processing**\r\n *\r\n * ```js\r\n * const stream = require('spex')(Promise).stream;\r\n * const fs = require('fs');\r\n *\r\n * const rs = fs.createReadStream('values.txt');\r\n *\r\n * function receiver(index, data, delay) {\r\n *    console.log('RECEIVED:', index, data, delay);\r\n * }\r\n *\r\n * stream.read(rs, receiver)\r\n *     .then(data => {\r\n *         console.log('DATA:', data);\r\n *     })\r\n *     .catch(error => {\r\n *         console.log('ERROR:', error);\r\n *     });\r\n * ```\r\n *\r\n * **Asynchronous Stream Processing**\r\n *\r\n * ```js\r\n * const stream = require('spex')(Promise).stream;\r\n * const fs = require('fs');\r\n *\r\n * const rs = fs.createReadStream('values.txt');\r\n *\r\n * function receiver(index, data, delay) {\r\n *    return new Promise(resolve => {\r\n *        console.log('RECEIVED:', index, data, delay);\r\n *        resolve();\r\n *    });\r\n * }\r\n *\r\n * stream.read(rs, receiver)\r\n *     .then(data => {\r\n *         console.log('DATA:', data);\r\n *     })\r\n *     .catch(error => {\r\n *         console.log('ERROR:', error);\r\n *    });\r\n * ```\r\n *\r\n * @property {function} stream.read\r\n * Consumes and processes data from a $[Readable] stream.\r\n *\r\n */\r\nmodule.exports = function (config) {\r\n    const res = {\r\n        read: npm.read(config)\r\n    };\r\n    Object.freeze(res);\r\n    return res;\r\n};\r\n","/**\r\n * @method stream.read\r\n * @description\r\n * Consumes and processes data from a $[Readable] stream.\r\n *\r\n * It reads the entire stream, using either **paused mode** (default), or in chunks (see `options.readChunks`)\r\n * with support for both synchronous and asynchronous data processing.\r\n *\r\n * **NOTE:** Once the method has finished, the onus is on the caller to release the stream\r\n * according to its protocol.\r\n *\r\n * @param {Object} stream\r\n * $[Readable] stream object.\r\n *\r\n * Passing in anything else will throw `Readable stream is required.`\r\n *\r\n * @param {Function|generator} receiver\r\n * Data processing callback (or generator).\r\n *\r\n * Passing in anything else will throw `Invalid stream receiver.`\r\n *\r\n * Parameters:\r\n *  - `index` = index of the call made to the function\r\n *  - `data` = array of all data reads from the stream's buffer\r\n *  - `delay` = number of milliseconds since the last call (`undefined` when `index=0`)\r\n *\r\n * The function is called with the same `this` context as the calling method.\r\n *\r\n * It can optionally return a promise object, if data processing is asynchronous.\r\n * And if a promise is returned, the method will not read data from the stream again,\r\n * until the promise has been resolved.\r\n *\r\n * If the function throws an error or returns a rejected promise, the method rejects\r\n * with the same error / rejection reason.\r\n *\r\n * @param {Object} [options]\r\n * Optional Parameters.\r\n *\r\n * @param {Boolean} [options.closable=false]\r\n * Instructs the method to resolve on event `close` supported by the stream, as opposed to event\r\n * `end` that's used by default.\r\n *\r\n * @param {Boolean} [options.readChunks=false]\r\n * By default, the method handles event `readable` of the stream to consume data in a simplified form,\r\n * item by item. If you enable this option, the method will instead handle event `data` of the stream,\r\n * to consume chunks of data.\r\n *\r\n * @param {Number} [options.readSize]\r\n * When the value is greater than 0, it sets the read size from the stream's buffer\r\n * when the next data is available. By default, the method uses as few reads as possible\r\n * to get all the data currently available in the buffer.\r\n *\r\n * NOTE: This option is ignored when option `readChunks` is enabled.\r\n *\r\n * @returns {external:Promise}\r\n *\r\n * When finished successfully, resolves with object `{calls, reads, length, duration}`:\r\n *  - `calls` = number of calls made into the `receiver`\r\n *  - `reads` = number of successful reads from the stream\r\n *  - `length` = total length for all the data reads from the stream\r\n *  - `duration` = number of milliseconds consumed by the method\r\n *\r\n * When it fails, the method rejects with the error/reject specified,\r\n * which can happen as a result of:\r\n *  - event `error` emitted by the stream\r\n *  - receiver throws an error or returns a rejected promise\r\n */\r\nfunction read(stream, receiver, options, config) {\r\n\r\n    const $p = config.promise, utils = config.utils;\r\n\r\n    if (!utils.isReadableStream(stream)) {\r\n        return $p.reject(new TypeError('Readable stream is required.'));\r\n    }\r\n\r\n    if (typeof receiver !== 'function') {\r\n        return $p.reject(new TypeError('Invalid stream receiver.'));\r\n    }\r\n\r\n    receiver = utils.wrap(receiver);\r\n\r\n    options = options || {};\r\n\r\n    const readSize = (options.readSize > 0) ? parseInt(options.readSize) : null,\r\n        self = this, start = Date.now(), receiveEvent = options.readChunks ? 'data' : 'readable';\r\n    let cbTime, ready, waiting, stop, reads = 0, length = 0, index = 0;\r\n\r\n    return $p((resolve, reject) => {\r\n\r\n        function onReceive(data) {\r\n            ready = true;\r\n            process(data);\r\n        }\r\n\r\n        function onEnd() {\r\n            if (!options.closable) {\r\n                success();\r\n            }\r\n        }\r\n\r\n        function onClose() {\r\n            success();\r\n        }\r\n\r\n        function onError(error) {\r\n            fail(error);\r\n        }\r\n\r\n        stream.on(receiveEvent, onReceive);\r\n        stream.on('end', onEnd);\r\n        stream.on('close', onClose);\r\n        stream.on('error', onError);\r\n\r\n        function process(data) {\r\n            if (!ready || stop || waiting) {\r\n                return;\r\n            }\r\n            ready = false;\r\n            let cache;\r\n            if (options.readChunks) {\r\n                cache = data;\r\n                // istanbul ignore else;\r\n                // we cannot test the else condition, as it requires a special broken stream interface.\r\n                if (!Array.isArray(cache)) {\r\n                    cache = [cache];\r\n                }\r\n                length += cache.length;\r\n                reads++;\r\n            } else {\r\n                cache = [];\r\n                waiting = true;\r\n                let page;\r\n                do {\r\n                    page = stream.read(readSize);\r\n                    if (page) {\r\n                        cache.push(page);\r\n                        // istanbul ignore next: requires a unique stream that\r\n                        // creates objects without property `length` defined.\r\n                        length += page.length || 0;\r\n                        reads++;\r\n                    }\r\n                } while (page);\r\n\r\n                if (!cache.length) {\r\n                    waiting = false;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const cbNow = Date.now(),\r\n                cbDelay = index ? (cbNow - cbTime) : undefined;\r\n            let result;\r\n            cbTime = cbNow;\r\n            try {\r\n                result = receiver.call(self, index++, cache, cbDelay);\r\n            } catch (e) {\r\n                fail(e);\r\n                return;\r\n            }\r\n\r\n            if (utils.isPromise(result)) {\r\n                result\r\n                    .then(() => {\r\n                        waiting = false;\r\n                        process();\r\n                        return null; // this dummy return is just to prevent Bluebird warnings;\r\n                    })\r\n                    .catch(error => {\r\n                        fail(error);\r\n                    });\r\n            } else {\r\n                waiting = false;\r\n                process();\r\n            }\r\n        }\r\n\r\n        function success() {\r\n            cleanup();\r\n            resolve({\r\n                calls: index,\r\n                reads: reads,\r\n                length: length,\r\n                duration: Date.now() - start\r\n            });\r\n        }\r\n\r\n        function fail(error) {\r\n            stop = true;\r\n            cleanup();\r\n            reject(error);\r\n        }\r\n\r\n        function cleanup() {\r\n            stream.removeListener(receiveEvent, onReceive);\r\n            stream.removeListener('close', onClose);\r\n            stream.removeListener('error', onError);\r\n            stream.removeListener('end', onEnd);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = function (config) {\r\n    return function (stream, receiver, options) {\r\n        return read.call(this, stream, receiver, options, config);\r\n    };\r\n};\r\n","const npm = {\r\n    utils: require('./utils'),\r\n    batch: require('./ext/batch'),\r\n    page: require('./ext/page'),\r\n    sequence: require('./ext/sequence'),\r\n    stream: require('./ext/stream'),\r\n    errors: require('./errors')\r\n};\r\n\r\n/**\r\n * @module spex\r\n * @summary Specialized Promise Extensions\r\n * @author Vitaly Tomilov\r\n *\r\n * @description\r\n * Attaches to an external promise library and provides additional methods built solely\r\n * on the basic promise operations:\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * ### usage\r\n * For any third-party promise library:\r\n * ```js\r\n * const promise = require('bluebird');\r\n * const spex = require('spex')(promise);\r\n * ```\r\n * For ES6 promises:\r\n * ```js\r\n * const spex = require('spex')(Promise);\r\n * ```\r\n *\r\n * @param {Object|Function} promiseLib\r\n * Instance of a promise library to be used by this module.\r\n *\r\n * Some implementations use `Promise` constructor to create a new promise, while\r\n * others use the module's function for it. Both types are supported the same.\r\n *\r\n * Alternatively, an object of type {@link PromiseAdapter} can be passed in, which provides\r\n * compatibility with any promise library outside of the standard.\r\n *\r\n * Passing in a promise library that cannot be recognized will throw\r\n * `Invalid promise library specified.`\r\n *\r\n * @returns {Object}\r\n * Namespace with all supported methods.\r\n *\r\n * @see {@link PromiseAdapter}, {@link batch}, {@link page}, {@link sequence}, {@link stream}\r\n */\r\nfunction main(promiseLib) {\r\n\r\n    const spex = {}, // library instance;\r\n        promise = parsePromiseLib(promiseLib); // promise library parsing;\r\n\r\n    const config = {\r\n        spex: spex,\r\n        promise: promise,\r\n        utils: npm.utils(promise)\r\n    };\r\n\r\n    spex.errors = npm.errors;\r\n    spex.batch = npm.batch(config);\r\n    spex.page = npm.page(config);\r\n    spex.sequence = npm.sequence(config);\r\n    spex.stream = npm.stream(config);\r\n\r\n    config.utils.extend(spex, '$p', promise);\r\n\r\n    Object.freeze(spex);\r\n\r\n    return spex;\r\n}\r\n\r\n//////////////////////////////////////////\r\n// Parses and validates a promise library;\r\nfunction parsePromiseLib(lib) {\r\n    if (lib) {\r\n        let promise;\r\n        if (lib instanceof main.PromiseAdapter) {\r\n            promise = function (func) {\r\n                return lib.create(func);\r\n            };\r\n            promise.resolve = lib.resolve;\r\n            promise.reject = lib.reject;\r\n            return promise;\r\n        }\r\n        const t = typeof lib;\r\n        if (t === 'function' || t === 'object') {\r\n            const Root = typeof lib.Promise === 'function' ? lib.Promise : lib;\r\n            promise = function (func) {\r\n                return new Root(func);\r\n            };\r\n            promise.resolve = Root.resolve;\r\n            promise.reject = Root.reject;\r\n            if (typeof promise.resolve === 'function' && typeof promise.reject === 'function') {\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    throw new TypeError('Invalid promise library specified.');\r\n}\r\n\r\nmain.PromiseAdapter = require('./adapter');\r\nmain.errors = npm.errors;\r\n\r\nObject.freeze(main);\r\n\r\nmodule.exports = main;\r\n\r\n/**\r\n * @external Error\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n */\r\n\r\n/**\r\n * @external TypeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n */\r\n\r\n/**\r\n * @external Promise\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n */\r\n","const npm = {\r\n    stat: require('./static')\r\n};\r\n\r\nmodule.exports = function ($p) {\r\n\r\n    const exp = {\r\n        formatError: npm.stat.formatError,\r\n        isPromise: npm.stat.isPromise,\r\n        isReadableStream: npm.stat.isReadableStream,\r\n        messageGap: npm.stat.messageGap,\r\n        extend: npm.stat.extend,\r\n        resolve: resolve,\r\n        wrap: wrap\r\n    };\r\n\r\n    return exp;\r\n\r\n    //////////////////////////////////////////\r\n    // Checks if the function is a generator,\r\n    // and if so - wraps it up into a promise;\r\n    function wrap(func) {\r\n        if (typeof func === 'function') {\r\n            if (func.constructor.name === 'GeneratorFunction') {\r\n                return asyncAdapter(func);\r\n            }\r\n            return func;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /////////////////////////////////////////////////////\r\n    // Resolves a mixed value into the actual value,\r\n    // consistent with the way mixed values are defined:\r\n    // https://github.com/vitaly-t/spex/wiki/Mixed-Values\r\n    function resolve(value, params, onSuccess, onError) {\r\n\r\n        const self = this;\r\n        let delayed = false;\r\n\r\n        function loop() {\r\n            while (typeof value === 'function') {\r\n                if (value.constructor.name === 'GeneratorFunction') {\r\n                    value = asyncAdapter(value);\r\n                }\r\n                try {\r\n                    value = params ? value.apply(self, params) : value.call(self);\r\n                } catch (e) {\r\n                    onError(e, false); // false means 'threw an error'\r\n                    return;\r\n                }\r\n            }\r\n            if (exp.isPromise(value)) {\r\n                value\r\n                    .then(data => {\r\n                        delayed = true;\r\n                        value = data;\r\n                        loop();\r\n                        return null; // this dummy return is just to prevent Bluebird warnings;\r\n                    })\r\n                    .catch(error => {\r\n                        onError(error, true); // true means 'rejected'\r\n                    });\r\n            } else {\r\n                onSuccess(value, delayed);\r\n            }\r\n        }\r\n\r\n        loop();\r\n    }\r\n\r\n    // Generator-to-Promise adapter;\r\n    // Based on: https://www.promisejs.org/generators/#both\r\n    function asyncAdapter(generator) {\r\n        return function () {\r\n            const g = generator.apply(this, arguments);\r\n\r\n            function handle(result) {\r\n                if (result.done) {\r\n                    return $p.resolve(result.value);\r\n                }\r\n                return $p.resolve(result.value)\r\n                    .then(res => {\r\n                        return handle(g.next(res));\r\n                    }, err => {\r\n                        return handle(g.throw(err));\r\n                    });\r\n            }\r\n\r\n            return handle(g.next());\r\n        };\r\n    }\r\n\r\n};\r\n","const npm = {\r\n    stream: require('stream'),\r\n    util: require('util')\r\n};\r\n\r\n/////////////////////////////////////\r\n// Checks if the value is a promise;\r\nfunction isPromise(value) {\r\n    return value && typeof value.then === 'function';\r\n}\r\n\r\n////////////////////////////////////////////\r\n// Checks object for being a readable stream;\r\n\r\nfunction isReadableStream(obj) {\r\n    return obj instanceof npm.stream.Stream &&\r\n        typeof obj._read === 'function' &&\r\n        typeof obj._readableState === 'object';\r\n}\r\n\r\n////////////////////////////////////////////////////////////\r\n// Sets an object property as read-only and non-enumerable.\r\nfunction extend(obj, name, value) {\r\n    Object.defineProperty(obj, name, {\r\n        value: value,\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false\r\n    });\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output;\r\nfunction messageGap(level) {\r\n    return ' '.repeat(level * 4);\r\n}\r\n\r\nfunction formatError(error, level) {\r\n    const names = ['BatchError', 'PageError', 'SequenceError'];\r\n    let msg = npm.util.inspect(error);\r\n    if (error instanceof Error) {\r\n        if (names.indexOf(error.name) === -1) {\r\n            const gap = messageGap(level);\r\n            msg = msg.split('\\n').map((line, index) => {\r\n                return (index ? gap : '') + line;\r\n            }).join('\\n');\r\n        } else {\r\n            msg = error.toString(level);\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// Adds prototype inspection, with support of the newer\r\n// Custom Inspection, which was added in Node.js 6.x\r\nfunction addInspection(type, cb) {\r\n    // istanbul ignore next;\r\n    if (npm.util.inspect.custom) {\r\n        // Custom inspection is supported:\r\n        type.prototype[npm.util.inspect.custom] = cb;\r\n    } else {\r\n        // Use classic inspection:\r\n        type.prototype.inspect = cb;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    addInspection: addInspection,\r\n    formatError: formatError,\r\n    isPromise: isPromise,\r\n    isReadableStream: isReadableStream,\r\n    messageGap: messageGap,\r\n    extend: extend\r\n};\r\n","/*\nCopyright (c) 2014-2021, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  let list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    const buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (let i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) {\n    cb(new Error('maximum buffer reached'))\n    return\n  }\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.autoDestroy = true\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow || false\n  stream.overflow = false\n  stream._destroy = function (err, cb) {\n    // Weird Node v12 bug that we need to work around\n    this._writableState.errorEmitted = false\n    cb(err)\n  }\n\n  return stream\n}\n\nmodule.exports = split\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n","const { v4: uuidv4 } = require('uuid');\r\n\r\nvar express = require('express');\r\nvar router = express.Router();\r\n// const { todo: sql } = require('../sql/queryFile'); // sql for todo.js;\r\n// DB設定を読み込み\r\nconst { db, execute, sql } = require('../db/config');\r\n\r\ntry {\r\n  router.get('/', async (req, res, next) => {\r\n    console.log(`GET /todo ToDoデータ全取得開始`);\r\n\r\n    // SQL結果取得用\r\n    let results;\r\n    // todoのリスト取得\r\n    results = await execute(db, sql('todo', 'getList'));\r\n    console.log(results);\r\n    let todoList = [];\r\n    todoList = results;\r\n    // タスクリスト取得\r\n    results = await execute(db, sql('todo', 'getTask'));\r\n    let taskList = results;\r\n    // タブのヘッダー情報取得\r\n    results = await execute(db, sql('todo', 'getTabsHeader'));\r\n    let tabsID = results;\r\n\r\n    // 表示用にデータを整形\r\n    // リストにタスクを紐づけ\r\n    let todoData = todoList.map((list) => {\r\n      list.tasks = [];\r\n      let found = taskList.filter((task) => task.list_id === list.id);\r\n      list.tasks = found;\r\n      // タスクにタブヘッダー情報を紐づけ\r\n      list.tasks.map((task) => {\r\n        task.tabsData = [];\r\n        let found = tabsID.filter((tab) => tab.task_id === task.id);\r\n        task.tabsData = found;\r\n        return task;\r\n      });\r\n      return list;\r\n    });\r\n    console.log(todoData);\r\n\r\n    res.status(200).json({\r\n      todoData,\r\n    });\r\n    console.log(`GET /todo ToDoデータ全取得終了`);\r\n  });\r\n\r\n  // タスク名変更\r\n  router.put('/task/:id', async (req, res, next) => {\r\n    console.log(`PUT /todo/task タスク名変更開始`);\r\n    const param = {\r\n      task_id: req.params.id,\r\n      task_title: req.body.data.task_title,\r\n    };\r\n    console.log(param);\r\n    // タスク名変更\r\n    // results = await execute(db, sql.updateTaskTitle, param);\r\n    results = await execute(db, sql('todo', 'updateTaskTitle'), param);\r\n    res.status(200).json();\r\n    console.log(`PUT /todo/task タスク名変更終了`);\r\n  });\r\n\r\n  // リスト名変更\r\n  router.put('/listName/:listId', async (req, res, next) => {\r\n    console.log(`PUT /todo/listName リスト名変更開始`);\r\n    // console.log(req.params);\r\n    // console.log(req.body.data);\r\n    const param = {\r\n      listId: req.params.listId,\r\n      listTitle: req.body.data.listTitle,\r\n    };\r\n    // リスト名変更\r\n    // results = await execute(db, sql.updateListName, param);\r\n    results = await execute(db, sql('todo', 'updateListName'), param);\r\n    console.log(`リスト名を${param.listTitle}にUPDATE`);\r\n    res.status(200).json();\r\n    console.log(`PUT /todo/listName リスト名変更終了`);\r\n  });\r\n\r\n  // 新規タスク追加\r\n  router.post('/task', async (req, res, next) => {\r\n    console.log(`POST /todo/task 新規タスク追加`);\r\n    const list_id = req.body.data.list_id;\r\n    // 既存タスクのインデックスを1つ後ろにずらす\r\n    results = await execute(\r\n      db,\r\n      'update tasks set task_index = task_index + 1 where list_id = $/list_id/ returning *;',\r\n      { list_id: list_id }\r\n    );\r\n    console.log(`既存タスクのインデックスをずらす:${results.length}行`);\r\n\r\n    // 新規タスク追加\r\n    task_id = uuidv4();\r\n    let param = {\r\n      task_id: task_id,\r\n      list_id: list_id,\r\n    };\r\n    // results = await execute(db, sql.createNewTask, param);\r\n    results = await execute(db, sql('todo', 'createNewTask'), param);\r\n    console.log(`新規タスク追加：${task_id}`);\r\n\r\n    // デフォルトのノートデータ作成\r\n    const note_id = uuidv4();\r\n    param = {\r\n      note_id: note_id,\r\n      task_id: task_id,\r\n      note_title: '概要',\r\n    };\r\n    // results = await execute(db, sql.createNewNote, param);\r\n    results = await execute(db, sql('todo', 'createNewNote'), param);\r\n    console.log(`新規ノート作成:`, results[0]);\r\n\r\n    // データ取得\r\n    res.status(200).json({\r\n      id: results[0].id,\r\n      task_title: results[0].task_title,\r\n    });\r\n    console.log(`POST /todo/task 新規タスク追加終了`);\r\n  });\r\n\r\n  // 新規リスト追加\r\n  router.post('/list', async (req, res, next) => {\r\n    console.log(`POST /todo/list 新規リスト追加`);\r\n    listId = uuidv4();\r\n    const param = {\r\n      list_id: listId,\r\n    };\r\n    // 新規リスト追加\r\n    // results = await execute(db, sql.createNewNote, param);\r\n    results = await execute(db, sql('todo', 'createNewList'), param);\r\n    console.log(results);\r\n    console.log(`新規リスト追加：${results[0].id}`);\r\n    res.status(200).json({\r\n      id: results[0].id,\r\n      list_title: results[0].list_title,\r\n      tasks: [],\r\n    });\r\n    console.log(`POST /todo/list 新規リスト終了`);\r\n  });\r\n\r\n  // ノートデータ取得\r\n  router.get('/note/:tab_id', async (req, res, next) => {\r\n    console.log(`GET /todo/note ノートデータ取得開始`);\r\n    const param = {\r\n      note_id: req.params.tab_id,\r\n    };\r\n    // results = await execute(db, sql.getNoteContents, param);\r\n    results = await execute(db, sql('todo', 'getNoteContents'), param);\r\n    console.log(results);\r\n    res.status(200).json({\r\n      noteContents: results[0],\r\n    });\r\n    console.log(`GET /todo/note ノートデータ取得終了`);\r\n  });\r\n\r\n  // ノートの中身更新\r\n  router.put('/note/:note_id', async (req, res, next) => {\r\n    console.log(`PUT /todo/note ノートの中身更新開始`);\r\n    const param = {\r\n      note_id: req.params.note_id,\r\n      content_json: req.body.data.content_json,\r\n    };\r\n    // リスト名変更\r\n    // results = await execute(db, sql.updateNoteContent, param);\r\n    results = await execute(db, sql('todo', 'updateNoteContent'), param);\r\n    // console.log(`リスト名を${param.listTitle}にUPDATE`);\r\n    res.status(200).json();\r\n    console.log(`PUT /todo/note ノートの中身更新終了`);\r\n  });\r\n\r\n  // 新規ノート作成\r\n  router.post('/note', async (req, res, next) => {\r\n    console.log(`POST /todo/note 新規ノート作成`);\r\n    note_id = uuidv4();\r\n    console.log(req.body);\r\n    const param = {\r\n      task_id: req.body.data.task_id,\r\n      note_id: note_id,\r\n      note_title: '新規ノート',\r\n    };\r\n    // 新規ノート登録\r\n    // results = await execute(db, sql.createNewNote, param);\r\n    results = await execute(db, sql('todo', 'createNewNote'), param);\r\n    console.log(`新規ノート登録：${results[0].id}`);\r\n    res.status(200).json({\r\n      task_id: results[0].task_id,\r\n      id: results[0].id,\r\n      note_title: results[0].note_title,\r\n      type: 'note',\r\n    });\r\n    console.log(`POST /todo/note 新規ノート作成終了`);\r\n  });\r\n\r\n  // タブ名更新\r\n  router.put('/tabName/:tab_id', async (req, res, next) => {\r\n    console.log(`PUT /todo/tab タブ名更新開始`);\r\n    const param = {\r\n      note_id: req.params.tab_id,\r\n      note_title: req.body.data.tab_title,\r\n      type: req.body.data.type,\r\n    };\r\n    let results = [];\r\n    if (param.type === 'note') {\r\n      // ノートの名称更新\r\n      // results = await execute(db, sql.updateNoteTitle, param);\r\n      results = await execute(db, sql('todo', 'updateNoteTitle'), param);\r\n    }\r\n    console.log(results);\r\n    console.log(`ノート名を${results[0].note_title}にUPDATE`);\r\n    res.status(200).json();\r\n    console.log(`PUT /todo/tabName タブ名更新終了`);\r\n  });\r\n\r\n  // リスト削除\r\n  router.delete('/list/:list_id', async (req, res, next) => {\r\n    console.log(`DELETE /todo/list リスト削除開始`);\r\n    const param = {\r\n      list_id: req.params.list_id,\r\n    };\r\n    // let results = await execute(db, sql.deleteList, param);\r\n    let results = await execute(db, sql('todo', 'deleteList'), param);\r\n    console.log(`リスト削除：${results.length}件`);\r\n    res.status(200).json();\r\n    console.log(`DELETE /todo/list リスト削除終了`);\r\n  });\r\n\r\n  // タブ削除\r\n  router.delete('/tab/:tab_id', async (req, res, next) => {\r\n    console.log(`DELETE /todo/tab タブ削除開始`);\r\n    const param = {\r\n      note_id: req.params.tab_id,\r\n      type: req.body.data.type,\r\n    };\r\n    let results = [];\r\n    if (param.type === 'note') {\r\n      // ノート削除\r\n      // results = await execute(db, sql.deleteNote, param);\r\n      results = await execute(db, sql('todo', 'deleteNote'), param);\r\n    }\r\n    console.log(`ノート削除：${results.length}件`);\r\n    res.status(200).json();\r\n    console.log(`DELETE /todo/tab タブ削除終了`);\r\n  });\r\n\r\n  // カード削除\r\n  router.delete('/task/:task_id', async (req, res, next) => {\r\n    console.log(`DELETE /todo/task カード削除開始`);\r\n    const param = {\r\n      task_id: req.params.task_id,\r\n    };\r\n    // let results = await execute(db, sql.deleteTask, param);\r\n    let results = await execute(db, sql('todo', 'deleteTask'), param);\r\n    console.log(`カード削除：${results.length}件`);\r\n    res.status(200).json();\r\n    console.log(`DELETE /todo/task カード削除終了`);\r\n  });\r\n} catch (error) {\r\n  console.log(error);\r\n}\r\n\r\nmodule.exports = router;\r\n","var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('../routes/index');\nvar todoRouter = require('../routes/todo');\n// const ejs = require('ejs').__express;\n\nvar app = express();\n\n// // view engine setup\n// app.set('views', path.join(__dirname, 'views'));\n// // app.set('view engine', 'jade');\n\n// app.set('view engine', 'ejs');\n// app.engine('.ejs', ejs);\n\napp.use(logger('dev'));\n\n\n// jsonオブジェクトを認識できるようになる。\napp.use(express.json());\n// 配列や入れ子構造が認識できるようになる。\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n// CORS許可設定\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS'); // ← コレがないとPUTできない\n  next();\n});\n// OPTIONSメソッド実装\napp.options('*', function (req, res) {\n  res.sendStatus(200);\n});\n\napp.use('/', indexRouter);\napp.use('/todo', todoRouter);\n// app.use(\"/todo/listName/?\", todoRouter);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n// app.listen(3001);\n// console.info(`listening on http://localhost:3001`);\n\nmodule.exports = app;\n","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","require('source-map-support/register');\nconst serverlessExpress = require('@vendia/serverless-express');\nconst app = require('./app');\n\nexports.handler = serverlessExpress({ app });\n"],"names":["join","joinPath","pgp","cn","host","process","env","DB_HOST","port","DB_PORT","database","DB_DATABASE","user","DB_USER","password","DB_PASSWORD","allowExitOnIdle","console","log","db","module","exports","sql","filename","sqlid","fullPath","fs","yaml","yamlText","readFileSync","load","execute","async","param","results","any","JSON","parse","stringify","util","logger","setCurrentInvoke","getEventSource","getEventSourceNameBasedOnEvent","getFramework","makeResolver","forwardRequestToNodeServer","respondToEventSourceWithError","DEFAULT_BINARY_ENCODINGS","DEFAULT_BINARY_CONTENT_TYPES","getDefaultBinarySettings","deprecatedBinaryMimeTypes","contentTypes","contentEncodings","app","configureApp","logSettings","configureLog","framework","configureFramework","binaryMimeTypes","configureBinaryMimeTypes","binarySettings","configureBinarySettings","resolutionMode","configureResolutionMode","eventSourceName","configureEventSourceName","eventSource","configureEventFns","eventSourceRoutes","configureEventSourceRoutes","respondWithErrors","configureRespondWithErrors","proxy","event","context","callback","debug","inspect","depth","warn","Promise","resolve","reject","resolver","promise","error","handler","params","currentInvoke","getCurrentInvoke","url","getRequestValuesFromEvent","getMultiValueHeaders","getPathWithQueryStringUseUnescapeParams","path","pathParameters","stripBasePath","replaceRegex","RegExp","query","multiValueQueryStringParameters","key","decodeURIComponent","map","value","queryStringParameters","format","pathname","replace","getRequest","getResponse","statusCode","body","headers","responseHeaders","isBase64Encoded","multiValueHeaders","undefined","Object","entries","reduce","acc","k","v","Array","isArray","transferEncodingHeader","includes","filter","headerValue","getEventBody","getCommaDelimitedHeaders","requestContext","requestPath","rawPath","rawQueryString","cookies","method","http","requestPathOrRawPath","stripBasePathRegex","search","cookie","forEach","headerKey","toLowerCase","Buffer","byteLength","remoteAddress","sourceIp","response","chunkedEncoding","Error","responseToApiGateway","headersMap","emptyResponseMapper","RESPONSE_HEADERS_DENY_LIST","cloudFrontRequest","Records","cf","request","uri","querystring","requestBodyObject","clientIp","header","data","encoding","hostname","headerKeyLowerCase","push","headersArray","status","bodyEncoding","parseCookie","req","urlObject","URL","rawBody","responseToHttpFunction","from","headerCookies","concat","length","headerCookie","parsedCookie","nameValueTuple","split","name","httpOnly","secure","maxAge","samesite","sameSite","expires","Date","domain","awsApiGatewayV1EventSource","awsApiGatewayV2EventSource","awsAlbEventSource","awsLambdaEdgeEventSource","awsSnsEventSource","awsSqsEventSource","awsDynamoDbEventSource","azureHttpFunctionV3EventSource","azureHttpFunctionV4EventSource","awsEventBridgeEventSource","awsKinesisEventSource","getPathWithQueryStringParams","separator","lowerCaseKey","commaDelimitedHeaders","newKey","httpMethod","identity","headerArray","String","elb","EventSource","version","traceContext","functionsExtensionVersion","FUNCTIONS_EXTENSION_VERSION","id","source","startsWith","account","time","region","resources","detail","str","trim","sendRequest","handle","express","koa","hapi","_onRequest","router","route","_core","_dispatch","main","configure","createServer","serverListenCallback","configureOptions","se","isBinary","binaryEncodingTypes","binaryContentTypes","contentEncoding","some","binaryEncoding","isContentEncodingBinary","binaryContentTypesRegexes","binaryContentType","contentType","getContentType","test","isContentTypeBinary","level","message","additional","info","verbose","succeed","fail","IncomingMessage","constructor","super","encrypted","readable","address","end","Function","prototype","destroy","assign","this","ip","complete","httpVersion","httpVersionMajor","httpVersionMinor","_read","headerEnd","BODY","Symbol","HEADERS","addData","stream","isBuffer","Uint8Array","ServerlessResponse","ServerResponse","static","res","getHeaders","_headers","setHeader","_wroteHeader","writeHead","reason","obj","useChunkedEncodingByDefault","_header","assignSocket","_writableState","writable","on","removeListener","cork","uncork","write","cb","string","toString","TextDecoder","decode","getString","index","indexOf","remainder","slice","ServerlessRequest","Response","forwardResponse","logBody","successResponse","getRequestResponse","waitForStreamComplete","writableEnded","once","isComplete","err","stack","errorResponse","requestValues","Negotiator","mime","Accepts","negotiator","extToMime","type","lookup","validMime","types","types_","arguments","i","mediaTypes","accept","mimes","accepts","first","encodings","encodings_","charset","charsets","charsets_","lang","langs","language","languages","languages_","flattenWithDepth","array","result","flattenForever","defineProperty","assertOptions","options","defaults","TypeError","_i","_a","keys","a","defs","_b","_c","d","authorization","getAuthorization","CREDENTIALS_REGEXP","USER_PASS_REGEXP","match","exec","userPass","Credentials","pass","deprecate","parsers","create","createParserGetter","parserName","parser","loadParser","function","opts","prop","_urlencoded","urlencoded","_json","json","next","configurable","enumerable","get","createError","getBody","iconv","onFinished","zlib","_body","verify","inflate","createInflate","pipe","createGunzip","contentstream","encodingExists","toUpperCase","_error","resume","bytes","read","typeis","limit","reviver","strict","shouldParse","Boolean","typeChecker","FIRST_CHAR_REGEXP","char","partial","substring","SyntaxError","e","normalizeJsonSyntaxError","createStrictSyntaxError","hasBody","parameters","getCharset","substr","getOwnPropertyNames","buf","defaultCharset","extended","queryparse","parameterLimit","isNaN","isFinite","paramCount","parameterCount","arrayLimit","Math","max","allowPrototypes","Infinity","extendedparser","maxKeys","simpleparser","count","mod","isModern","alloc","allocUnsafe","encodingOrOffset","input","call","byteOffset","maxLength","RangeError","fromArrayBuffer","isEncoding","fromString","formatThousandsRegExp","formatDecimalsRegExp","b","kb","mb","gb","tb","parseRegExp","Number","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","toFixed","val","floatValue","parseFloat","parseInt","floor","fallback","NON_LATIN1_REGEXP","basename","isQuotedString","TEXT_REGEXP","fallbackName","getlatin1","hasFallback","HEX_ESCAPE_REGEXP","createparams","TOKEN_REGEXP","sort","ustring","qstring","ContentDisposition","DISPOSITION_TYPE_REGEXP","names","PARAM_REGEXP","lastIndex","QESC_REGEXP","decodefield","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REPLACE_REGEXP","QUOTE_REGEXP","EXT_VALUE_REGEXP","binary","pdecode","hex","fromCharCode","pencode","charCodeAt","encodeURIComponent","TYPE_REGEXP","ContentType","getHeader","getcontenttype","signature","JSONCookie","JSONCookies","signedCookie","secret","secrets","unsign","signedCookies","dec","ret","crypto","sha1","createHash","update","digest","sign","createHmac","lastIndexOf","opt","pairs","pairSplitRegExp","pair","eq_idx","tryDecode","serialize","enc","encode","fieldContentRegExp","toUTCString","r","storage","DEBUG","apply","formatArgs","args","useColors","namespace","humanize","diff","c","color","splice","lastC","save","namespaces","removeItem","window","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","$1","chrome","local","localStorage","localstorage","colors","formatters","j","enable","prevTime","createDebug","enabled","self","curr","ms","prev","coerce","unshift","formatter","logFn","bind","hash","selectColor","init","disable","skips","len","tty","inspectOpts","prefix","isatty","fd","_","DEBUG_FD","stdout","stderr","binding","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","Socket","_isStdio","createWritableStdioStream","o","O","callSiteToString","eventListenerCount","relative","depd","basePath","cwd","containsNamespace","vals","ns","convertDataDescriptorToAccessor","descriptor","getOwnPropertyDescriptor","set","createArgumentsString","arity","createStackString","file","callSiteLocation","getStack","_file","_ignored","isignored","_namespace","_traced","istraced","_warned","wrapfunction","property","wrapproperty","noDeprecation","NO_DEPRECATION","traceDeprecation","TRACE_DEPRECATION","site","haslisteners","caller","callFile","callSite","depSite","seen","msg","defaultMessage","DeprecationError","emit","output","isTTY","formatColor","formatPlain","getFileName","line","getLineNumber","colm","getColumnNumber","isEval","getEvalOrigin","getFunctionName","funcName","formatLocation","getThis","typeName","getTypeName","getMethodName","formatted","stackTraceLimit","prep","prepareStackTrace","prepareObjectStackTrace","captureStackTrace","fn","deprecatedfn","eval","stackString","receiver","addSuffix","fileLocation","fileName","isNative","getScriptNameOrSourceURL","lineNumber","columnNumber","callSiteFileLocation","functionName","isConstructor","isToplevel","methodName","emitter","listeners","EventEmitter","lazyProperty","getter","listenerCount","ReadStream","Stream","onOpenClose","close","destroyReadStream","os","LINE","_log","DotenvModule","config","dotenvPath","override","envPath","homedir","parsed","hasOwnProperty","src","lines","maybeQuote","listener","done","arg1","ee","stuff","cleanups","arr","cleanup","x","thunk","cancel","UNMATCHED_SURROGATE_PAIR_REGEXP","ENCODE_CHARS_REGEXP","encodeURI","matchHtmlRegExp","escape","html","entity","isStats","Stats","ctime","mtime","ino","size","weak","stat","tag","getTime","entitytag","finalhandler","Router","methods","middleware","View","compileETag","compileQueryParser","compileTrust","flatten","merge","setPrototypeOf","trustProxyDefaultSymbol","logerror","cache","engines","settings","defaultConfiguration","parent","locals","mountpath","lazyrouter","_router","caseSensitive","use","onerror","offset","arg","fns","orig","engine","ext","extension","setting","disabled","all","del","delete","render","view","renderOptions","_locals","defaultEngine","root","dirs","tryRender","listen","server","bodyParser","mixin","proto","Route","application","parseUrl","qs","isIP","fresh","parseRange","proxyaddr","defineGetter","lc","referrer","referer","acceptsEncodings","acceptsEncoding","acceptsCharsets","acceptsCharset","acceptsLanguages","acceptsLanguage","range","defaultValue","is","connection","trust","protocol","addrs","reverse","pop","contentDisposition","encodeUrl","escapeHtml","isAbsolute","statuses","normalizeType","normalizeTypes","setCharset","send","extname","vary","charsetRegExp","sendfile","streaming","onaborted","code","setImmediate","replacer","spaces","links","link","rel","chunk","etag","etagFn","generateETag","removeHeader","jsonp","sendStatus","sendFile","syscall","download","ct","default","attachment","append","field","clearCookie","signed","now","location","loc","redirect","text","u","Layer","objectRegExp","_params","mergeParams","appendMethods","list","addition","gettype","matchLayer","layer","out","old","idx","protohost","searchIndex","pathLength","fqdnIndex","getProtohost","removed","slashAdded","paramcalled","parentParams","parentUrl","baseUrl","props","restore","layerError","getPathname","has_method","_handles_method","_options","layerPath","process_params","handle_request","originalUrl","handle_error","trim_prefix","sendOptionsResponse","called","paramVal","paramCallbacks","paramCalled","paramIndex","paramCallback","callbacks","sensitive","dispatch","pathRegexp","regexp","fast_star","fast_slash","decode_param","URIError","_all","head","handles","createETagGenerator","parseExtendedQueryString","newObject","wetag","parts","quality","originalIndex","acceptParams","pms","compile","dirname","__express","tryStat","statSync","roots","dir","isFile","webpackEmptyContext","unpipe","DOUBLE_SPACE_REGEXP","NEWLINE_REGEXP","defer","nextTick","isFinished","headersSent","getErrorStatusCode","getResponseStatusCode","getErrorHeaders","getErrorMessage","original","getResourceName","socket","createHtmlDocument","statusMessage","setHeaders","getSocketAddr","proxyAddrs","start","CACHE_CONTROL_NO_CACHE_REGEXP","parseHttpDate","date","timestamp","NaN","reqHeaders","resHeaders","modifiedSince","noneMatch","cacheControl","etagStale","matches","parseTokenList","lastModified","codes","HttpError","inherits","codeClass","charAt","expose","createHttpErrorConstructor","CodeError","token","className","ClientError","createClientErrorConstructor","ServerError","createServerErrorConstructor","ImATeapot","_dbcs","DBCSCodec","UNASSIGNED","SEQ_START","NODE_START","UNASSIGNED_NODE","codecOptions","encodingName","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","defaultCharUnicode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","to","_fillEncodeTable","encodeAdd","uChar","_setEncodeChar","defCharSB","defaultCharSingleByte","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","codec","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","l","mid","encoder","decoder","_getDecodeTrieNode","addr","node","curAddr","writeTable","part","codeTrail","seq","m","charCode","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","mbCode","newBuf","nextChar","resCode","subtable","uChars","gbChars","prevBufOffset","seqStart","curByte","curSeq","ptr","uCodeLead","modules","InternalCodec","bomAware","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","base64","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","contBytes","accBytes","completeQuads","bufIdx","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","idx1","idx2","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","addBOM","getEncoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","min","utf16be","tmp","buf2","utf16","getDecoder","trail","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","base64IMAPChars","PrependBOMWrapper","StripBOMWrapper","PrependBOM","StripBOM","stripBOM","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","isNativeEncoding","SlowBuffer","SlowBufferToString","SlowBufferWrite","swap","remaining","copy","BufferIsEncoding","BufferByteLength","BufferToString","BufferWrite","_offset","_length","_encoding","supportsStreams","Readable","ReadableSetEncoding","setEncoding","_readableState","collect","_collect","undoExtendNodeEncodings","bomHandling","skipDecodeWarning","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","nodeVer","versions","nodeVerArr","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","_transform","_flush","chunks","ctor","superCtor","super_","TempCtor","expandIPv6","ipaddr","ipv4Part","ipv4Regexes","ipv6Part","ipv6Regexes","matchCIDR","zoneIndex","second","partSize","cidrBits","shift","subnetMatch","rangeList","defaultName","rangeName","rangeSubnets","subnet","kind","IPv4","octets","octet","toNormalizedString","toByteArray","other","cidrRange","ref","SpecialRanges","unspecified","broadcast","multicast","linkLocal","loopback","carrierGradeNat","reserved","toIPv4MappedAddress","IPv6","prefixLengthFromSubnetMask","cidr","stop","zeros","zerotable","fourOctet","longValue","parseIntAuto","zoneId","toRFC5952String","bestMatchIndex","bestMatchLength","regex","suffix","toFixedLengthString","padStart","uniqueLocal","ipv4Mapped","rfc6145","rfc6052","teredo","isIPv4MappedAddress","toIPv4Address","transitional","colonCount","lastColon","replacement","replacementCount","isIPv4","isIPv6","isValid","error1","isValidFourPartDecimal","parseCIDR","maskLength","subnetMaskFromPrefixLength","filledOctetCount","pow","broadcastAddressFromCIDR","ipInterfaceOctets","subnetMaskOctets","networkAddressFromCIDR","fromByteArray","loader","dumper","renamed","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","loadAll","dump","YAMLException","float","null","bool","int","omap","safeLoad","safeLoadAll","safeDump","isNothing","subject","isObject","toArray","sequence","repeat","cycle","isNegativeZero","number","NEGATIVE_INFINITY","extend","target","sourceKeys","common","_toString","_hasOwnProperty","CHAR_BOM","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","State","schema","indent","noArrayIndent","skipInvalid","flowLevel","styleMap","compiledTypeMap","styleAliases","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","implicitTypes","compiledImplicit","explicitTypes","compiledExplicit","duplicates","usedDuplicates","indentString","ind","position","generateNextLine","state","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","pos","needIndentIndicator","writeScalar","iskey","singleLineOnly","indentPerLevel","testAmbiguousType","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","chooseScalarStyle","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","nextLF","lineRe","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","clip","breakRe","writeBlockSequence","object","compact","_result","_tag","writeNode","detectType","explicit","typeList","instanceOf","predicate","multi","representName","represent","defaultStyle","block","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","writeBlockMapping","writeFlowMapping","writeFlowSequence","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","formatError","where","mark","column","snippet","makeSnippet","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","onWarning","legacy","typeMap","lineStart","lineIndent","firstTabInLine","documents","generateError","buffer","throwError","throwWarning","directiveHandlers","YAML","major","minor","checkLineBreaks","TAG","tagMap","captureSegment","checkJson","_position","_character","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","readLineBreak","ch","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_anchor","anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","alias","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","construct","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","iterator","compileList","currentType","newIndex","previousType","previousIndex","definition","implicit","loadKind","scalar","mapping","collectType","compileMap","getLine","lineEnd","maxLineLength","tail","maxHalfLength","linesBefore","linesAfter","re","lineStarts","lineEnds","foundLineNo","lineNoLength","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","BASE64_MAP","bitlen","tailbits","bits","lowercase","uppercase","camelcase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","POSITIVE_INFINITY","isOctCode","isDecCode","hasDigits","octal","decimal","hexadecimal","canonical","empty","pairKey","pairHasKey","objectKeys","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","year","month","day","hour","minute","fraction","delta","UTC","setTime","toISOString","paramRegExp","textRegExp","tokenRegExp","qescRegExp","quoteRegExp","subtypeNameRegExp","typeNameRegExp","typeRegExp","subtype","splitType","dest","redefine","METHODS","extensions","preference","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","exts","Mime","define","DEBUG_MIME","_loading","fields","default_type","mimeType","morgan","fmt","auth","onHeaders","CLF_MONTH","immediate","skip","formatLine","getFormatFunction","interval","timer","flush","setTimeout","createBufferStream","logRequest","_startAt","_startTime","_remoteAddress","getip","recordStartTime","js","tokenArguments","tokenFunction","pad2","num","hrtime","developmentFormatLine","tokens","digits","dateTime","getUTCDate","getUTCHours","mins","getUTCMinutes","secs","getUTCSeconds","getUTCFullYear","getUTCMonth","clfdate","credentials","s","h","plural","n","ceil","long","round","fmtShort","preferredCharsets","preferredEncodings","preferredLanguages","preferredMediaTypes","available","mediaType","preferredCharset","preferredEncoding","preferredLanguage","preferredMediaType","simpleCharsetRegExp","parseCharset","q","p","specify","spec","provided","parseAcceptCharset","isQuality","compareSpecs","getFullCharset","priorities","accepted","priority","getCharsetPriority","simpleEncodingRegExp","parseEncoding","hasIdentity","minQuality","parseAcceptEncoding","getFullEncoding","getEncodingPriority","simpleLanguageRegExp","parseLanguage","full","parseAcceptLanguage","getFullLanguage","getLanguagePriority","simpleMediaTypeRegExp","parseMediaType","kvps","quoteCount","splitParameters","splitKeyValuePair","every","splitMediaTypes","parseAccept","getFullType","getMediaTypePriority","attached","__onFinished","queue","createListener","eeMsg","eeSocket","finished","onFinish","onSocket","patchAssignSocket","attachFinishedListener","attachListener","upgrade","setHeadersFromArray","setHeadersFromObject","setWriteHeadHeaders","headerIndex","prevWriteHead","fired","createWriteHead","Url","parseurl","_parsedUrl","fastparse","_raw","href","parsedUrl","_parsedOriginalUrl","pathtoRegexp","flags","extraOffset","keysOffset","MATCHING_GROUP_REGEXP","optional","slash","capture","star","escapeCount","decodeURI","client_encoding","pathnameSplit","ssl","sslcert","sslkey","sslrootcert","sslmode","cert","ca","rejectUnauthorized","BASE","readInt32BE","readUInt32BE","carry","t","pad","EOL","addInspection","messageGap","parsingErrorCode","unclosedMLC","unclosedText","unclosedQI","multiLineQI","freeze","errorMessages","SQLParsingError","gap","getIndexPos","compressors","isGap","space","s1","lb","skipGaps","lastOpen","lastClose","open","removeAll","compress","addSpace","closeIdx","step","hasLB","hasTabs","lineIdx","colIdx","custom","NOOP","removeWhere","findIndex","IdleItem","client","idleListener","timeoutId","PendingItem","promisify","rej","Client","poolSize","maxUses","maxLifetimeSeconds","global","idleTimeoutMillis","_clients","_idle","_expired","WeakSet","_pendingQueue","_endCallback","ending","ended","_isFull","_pulseQueue","item","_remove","pendingItem","idleItem","clearTimeout","_acquireClient","newClient","connect","connectionTimeoutMillis","queueCallback","tid","timedOut","pool","makeIdleListener","timeoutHit","add","clientRelease","isNew","release","_releaseOnce","released","throwOnDoubleRelease","_release","_poolUseCount","_queryable","_ending","has","values","clientReleased","onError","promised","waitingCount","idleCount","expiredCount","totalCount","Events","ColorConsole","npm","utils","formatting","ctx","$ctx","getSafeConnection","dc","cnOptions","onLost","notified","lockClientEnd","doNotCall","clientEnd","getLocalStack","setCtx","setSchema","as","$pool","$destroy","poolDestroyed","$useCount","MAX_SAFE_INTEGER","useCount","kill","$connectionError","disconnect","poolConnect","direct","pg","then","catch","directConnect","ConnectionContext","cc","txLevel","parentCtx","taskCtx","txCount","clone","nextTxCount","txCurrent","txTop","isTX","DatabasePool","instance","for","scope","dbMap","dbs","cnKey","createContextKey","addReadProp","$config","noWarnings","$cnKey","$cn","toJson","$dc","resultQuery","multiResultQuery","streamQuery","queryResult","pubUtils","task","Database","dbThis","$p","poolConnection","connectionString","Pool","endMethod","destroyed","createContext","transform","thisArg","taskProcessor","reusable","$npm","inTransaction","mode","tsk","Task","addServerVersion","serverVersion","none","one","many","oneOrNone","manyOrNone","multiResult","rows","func","qrm","proc","procName","each","taskArgs","taskIf","cnd","tx","txIf","lock","queryDisconnected","looseQuery","batch","spex","page","unregister","register","npmLocal","QueryResultError","queryResultErrorCode","PreparedStatementError","ParameterizedQueryError","QueryFileError","pq","isQueryFileError","gap0","gap1","gap2","ps","minify","qf","isSqlError","noData","notEmpty","multiple","received","unexpected","InternalError","receive","transact","suppressErrors","pgUtils","patterns","fmMap","ctfSymbols","toPostgres","rawType","formatValue","fm","resolveFunc","ctf","getCTF","isRaw","$as","$to","csv","isNull","throwIfRaw","formatCSV","formatAs","raw","namedParameters","stripName","getIfHas","valid","def","multipleValues","singleValue","hasValidModifier","wrapText","safeText","formatQuery","formatSqlName","f","loop","capSQL","formatArray","prepareValue","formatEntity","InnerState","TableName","Column","ColumnSet","columns","colNames","col","inherit","extendState","variables","updates","isSimple","_inner","escapedName","variable","castText","colDesc","exists","hasPrefix","dynamic","hasSource","assignColumns","cs","cols","prepare","validColumn","parseColumn","isText","isValidVariable","validModifiers","cast","parseCast","validVariable","insert","queries","sets","QueryFile","clean","fmOptions","lowCase","capCase","useEmptyUpdate","tableAlias","valueAlias","actualColumns","checkColumns","emptyUpdate","checkTable","targetCols","initialState","PromiseAdapter","PreparedStatement","ParameterizedQuery","parsePromise","helpers","errors","package","originalClientConnect","$main","promiseLib","pgNative","native","nativeError","parameterName","parameterValue","inst","addReadProperties","rootNameSpace","shutDown","txMode","api","pl","Root","file$query","filePath","isDev","startDir","usedPath","ready","modTime","throwErrors","lastMod","$query","ServerFormatting","SpecialQuery","qrec","badMask","special","isStream","entityType","pgFormatting","invalidQuery","errTxt","invalidFunction","invalidProc","qp","invalidMask","notifyReject","getContext","lastResult","isConnectivityError","duration","isMultiResult","isResult","initCB","nativeStreaming","invalidStream","_reading","_closed","invalidStreamState","invalidStreamCB","getError","onData","onEnd","nRows","processed","cursor","success","finish","cbData","cbReason","spName","TransactionMode","begin","top","nested","streamVersion","isolationLevel","serializable","repeatableRead","readCommitted","readOnly","deferrable","accessMode","deferrableMode","tiLevel","capBegin","cap","changed","currentError","rowMode","setValues","writeNormal","writeError","bright","hidden","hasProperty","platform","exp","missing","startIdx","maxLines","endIdx","noLocking","desc","txt","NODE_ENV","isWindows","isMac","maskPassword","child","__proto__","cls","mainFile","argv","camelize","camelizeVar","_enumSql","namePath","tree","readdirSync","ignoreErrors","isDirectory","recursive","dirName","enumSql","newValue","sasl","pgPass","TypeOverrides","ConnectionParameters","Query","Connection","connectionParameters","replication","_Promise","_types","_connecting","_connected","_connectionError","keepAlive","keepAliveInitialDelayMillis","queryQueue","processID","secretKey","_connectionTimeoutMillis","_errorAllQueries","enqueueError","handleError","activeQuery","_connect","con","_connectionCallback","connectionTimeoutHandle","requestSsl","startup","getStartupConf","_attachListeners","_handleErrorEvent","_handleAuthCleartextPassword","_handleAuthMD5Password","_handleAuthSASL","_handleAuthSASLContinue","_handleAuthSASLFinal","_handleBackendKeyData","_handleErrorMessage","_handleReadyForQuery","_handleNotice","_handleRowDescription","_handleDataRow","_handlePortalSuspended","_handleEmptyQuery","_handleCommandComplete","_handleParseComplete","_handleCopyInResponse","_handleCopyData","_handleNotification","_checkPgPass","hashedPassword","postgresMd5PasswordHash","salt","saslSession","startSession","mechanisms","sendSASLInitialResponseMessage","mechanism","continueSession","sendSCRAMClientFinalMessage","finalizeSession","readyForQuery","handleReadyForQuery","_pulseQueryQueue","_handleErrorWhileConnecting","handleRowDescription","handleDataRow","handlePortalSuspended","handleEmptyQuery","handleCommandComplete","parsedStatements","handleCopyInResponse","handleCopyData","appName","application_name","fallback_application_name","statement_timeout","idle_in_transaction_session_timeout","setTypeParser","oid","parseFn","getTypeParser","escapeIdentifier","escapeLiteral","hasBackslash","escaped","hasExecuted","queryError","submit","readTimeout","readTimeoutTimer","queryCallback","query_timeout","dns","envVar","quoteParamValue","paramName","PGSSLMODE","readSSLConfigFromEnvironment","isDomainSocket","connect_timeout","PGCONNECT_TIMEOUT","keepalives","keepalives_idle","getLibpqConnectionString","net","flushBuffer","syncBuffer","sync","endBuffer","_keepAlive","_keepAliveInitialDelayMillis","lastBuffer","_emitMessage","eventName","setNoDelay","setKeepAlive","reportStreamError","attachListeners","tls","servername","_send","initialResponse","additionalData","describe","sendCopyFromChunk","copyData","endCopyFrom","copyDone","sendCopyFail","copyFail","USERNAME","USER","parseInputDatesAsUTC","pgTypes","parseBigInteger","parseBigIntegerArray","__defineSetter__","DatabaseError","poolFactory","PG","clientConstructor","_pools","NODE_PG_FORCE_NATIVE","Native","NativeQuery","_queryQueue","cp","namedQueries","_hasActiveQuery","_activeQuery","conString","channel","relname","payload","extra","resolveOut","rejectOut","initialConnection","normalizeQueryConfig","_arrayMode","_emitRowEvents","errorFieldMap","sqlState","statementPosition","messagePrimary","schemaName","tableName","columnName","dataTypeName","constraintName","sourceFile","sourceLine","sourceFunction","resultErrorFields","onSuccess","onFailure","_getPromise","_promise","_once","arrayMode","after","rowOfRows","row","Result","portal","_rowMode","_results","isPreparedStatement","_canceledDueToError","requiresPreparation","_checkForMultirow","command","addFields","_accumulateRows","parseRow","addRow","addCommandComplete","previous","hasBeenParsed","_getRows","statement","valueMapper","matchRegexp","rowCount","_parsers","RowCtor","rowAsArray","_parseRowAsArray","rowData","rawValue","fieldDescriptions","dataTypeID","isBase64","parseAttributePairs","Map","attrValue","xorBuffers","hmacSha256","clientNonce","randomBytes","session","serverData","sv","attrPairs","nonce","isPrintableChars","iterationText","iteration","parseServerFirstMessage","saltedPassword","saltBytes","iterations","ui1","ui","Hi","clientKey","storedKey","clientFirstMessageBare","serverFirstMessage","clientFinalMessageWithoutProof","authMessage","clientProof","serverKey","serverSignatureBytes","serverSignature","parseServerFinalMessage","userTypes","getOverrides","arrayString","ArrayBuffer","isView","isBCYear","getUTCMilliseconds","dateToStringUTC","getTimezoneOffset","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","dateToString","prepareObject","md5","inner","BufferReader","emptyBuffer","setBuffer","int16","readInt16BE","byte","int32","cstring","Writer","headerPosition","ensure","oldBuffer","newSize","addInt32","addInt16","addCString","addString","otherBuffer","writeInt32BE","messages_1","serializer_1","parser_1","Parser","NoticeMessage","DataRowMessage","CommandCompleteMessage","ReadyForQueryMessage","NotificationResponseMessage","BackendKeyDataMessage","AuthenticationMD5Password","ParameterStatusMessage","ParameterDescriptionMessage","RowDescriptionMessage","Field","CopyResponse","CopyDataMessage","emptyQuery","replicationStart","portalSuspended","closeComplete","bindComplete","parseComplete","columnCount","columnTypes","tableID","columnID","dataTypeSize","dataTypeModifier","fieldCount","dataTypeIDs","processId","__importDefault","__esModule","buffer_reader_1","assert_1","bufferLength","bufferOffset","reader","mergeBuffer","bufferFullLength","CODE_LENGTH","fullMessageLength","handlePacket","newLength","newBuffer","newBufferLength","parseDataRowMessage","parseCommandCompleteMessage","parseReadyForQueryMessage","parseNotificationMessage","parseAuthenticationResponse","parseParameterStatusMessage","parseBackendKeyData","parseErrorMessage","parseRowDescriptionMessage","parseParameterDescriptionMessage","parseCopyInMessage","parseCopyOutMessage","parseCopyData","parseCopyMessage","messageName","parseField","fieldType","messageValue","M","severity","S","C","D","hint","H","P","internalPosition","internalQuery","W","dataType","constraint","F","L","routine","R","buffer_writer_1","writer","emptyArray","paramWriter","emptyExecute","cstringMessage","emptyDescribePortal","emptyDescribeStatement","codeOnlyBuffer","copyDoneBuffer","bodyBuffer","mappedVal","writeValues","portalLength","buff","writeUInt32BE","writeInt16BE","textParsers","binaryParsers","arrayParser","builtinTypes","typeParsers","noParse","builtins","converter","parseInt64","parseBits","invert","lastValue","offsetBytes","inv","mask","firstBits","lastBits","parseFloatFromBits","precisionBits","exponentBits","bias","exponent","precisionBitsCounter","mantissa","parseInt16","parseInt32","parseFloat32","parseFloat64","parseNumeric","weight","ndigits","scale","parseDate","isUTC","usec","getMicroSeconds","setMicroSeconds","getUTCMicroSeconds","parseArray","dim","elementType","dims","parseElement","dimension","parseText","parseBool","BOOL","BYTEA","CHAR","INT8","INT2","INT4","REGPROC","TEXT","OID","TID","XID","CID","XML","PG_NODE_TREE","SMGR","PATH","POLYGON","CIDR","FLOAT4","FLOAT8","ABSTIME","RELTIME","TINTERVAL","CIRCLE","MACADDR8","MONEY","MACADDR","INET","ACLITEM","BPCHAR","VARCHAR","DATE","TIME","TIMESTAMP","TIMESTAMPTZ","INTERVAL","TIMETZ","BIT","VARBIT","NUMERIC","REFCURSOR","REGPROCEDURE","REGOPER","REGOPERATOR","REGCLASS","REGTYPE","UUID","TXID_SNAPSHOT","PG_LSN","PG_NDISTINCT","PG_DEPENDENCIES","TSVECTOR","TSQUERY","GTSVECTOR","REGCONFIG","REGDICTIONARY","JSONB","REGNAMESPACE","REGROLE","parseInterval","parseByteA","allowNull","parseBoolArray","parseBaseTenInt","parseIntegerArray","entry","parsePointArray","parsePoint","parseFloatArray","parseStringArray","parseDateArray","parseIntervalArray","parseByteAArray","parseInteger","valStr","parseJsonArray","y","parseCircle","point","radius","pointParsed","isWin","warnStream","fieldNames","nrOfFields","passKey","isWritable","warnTo","rawEnv","PGPASSFILE","APPDATA","HOME","usePgPass","stats","fname","matcher","connInfo","getPassword","lineStream","onErr","parseLine","isValidEntry","curChar","fieldIdx","addToObj","i0","i1","rules","rule","helper","st","createReadStream","ArrayParser","recorded","isEof","nextCharacter","record","newEntry","includeEmpty","consumeDimensions","quote","backslashes","DATE_TIME","TIME_ZONE","INFINITY","bcYearToNegativeYear","is0To99","isoDate","setFullYear","isBC","endsWith","zone","timeZoneOffset","setUTCFullYear","PostgresInterval","isNegative","positions","microseconds","negatives","properties","filtered","milliseconds","propertiesISOEquivalent","years","months","days","hours","minutes","seconds","dateProperties","timeProperties","toISO","buildProperty","NUMBER","regexString","alladdrs","forwarded","DIGIT_REGEXP","isip","parseip","IP_RANGES","linklocal","uniquelocal","subnets","subnetip","subnetkind","subnetisipv4","subnetrange","parseipNotation","compileRangeSubnets","trustNone","ipconv","trusted","note","netmask","parseNetmask","percentTwenties","RFC1738","RFC3986","formats","allowDots","delimiter","plainObjects","strictNullHandling","parseKeys","givenKey","segment","chain","leaf","cleanRoot","parseArrays","parseObject","ignoreQueryPrefix","isRegExp","tempObj","cleanStr","bracketEqualsPos","parseValues","newObj","arrayPrefixGenerators","brackets","indices","encodeValuesOnly","serializeDate","skipNulls","generateArrayPrefix","objKeys","arrayFormat","joined","addQueryPrefix","hexTable","arrayToObject","refs","compacted","compactQueue","mergeTarget","mapWithIndex","mapWithoutIndex","sortByRangeIndex","sortByRangeStart","ranges","combine","ordered","current","combined","combineRanges","readStream","ICONV_ENCODING_MESSAGE_REGEXP","halt","pause","expected","_decoder","invokeCallback","onAborted","copyProps","dst","SafeBuffer","allocUnsafeSlow","fill","safer","Safer","kStringMaxLength","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","normalize","sep","BYTES_RANGE_REGEXP","MAX_MAXAGE","UP_PATH_REGEXP","SendStream","_acceptRanges","acceptRanges","_cacheControl","_etag","_dotfiles","dotfiles","_hidden","_extensions","normalizeList","_immutable","immutable","_index","_lastModified","_maxage","maxage","_root","contentRange","title","getHeaderNames","hasListeners","paths","doc","clearHeaders","hasTrailingSlash","isConditionalGET","isPreconditionFailure","unmodifiedSince","removeContentHeaderFields","notModified","headersAlreadySent","isCachable","onStatError","isFresh","isRangeFresh","ifRange","collapseLeadingSlashes","containsDotFile","access","sendIndex","modified","fallthrough","onDirectory","forwardError","hasNativeMap","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","aStr","sStr","toSetString","isDuplicate","at","aIdx","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","aIndex","aOutParam","continuation","shifted","strLen","rest","intToCharMap","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","cmp","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","ary","temp","doQuickSort","comparator","random","pivot","binarySearch","base64VLQ","quickSort","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","parseSourceMapInput","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","getArg","sources","sourceRoot","sourcesContent","mappings","_version","_names","_sources","_absoluteSources","computeSourceURL","_mappings","_sourceMapURL","Mapping","originalLine","originalColumn","lastOffset","_sections","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","_generatedMappings","_originalMappings","allGeneratedPositionsFor","aArgs","needle","_findSourceIndex","_findMapping","compareByOriginalPositions","lastColumn","aSource","relativeSource","smc","_sourceRoot","_generateSourcesContent","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","originalPositionFor","hasContentsOfAllSources","sc","sourceContentFor","nullOnMissing","urlParse","fileUriAbsPath","scheme","generatedPositionFor","sectionIndex","section","content","generatedPosition","sectionMappings","adjustedMapping","SourceMapGenerator","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","addMapping","sourceRelative","setSourceContent","_validateMapping","aSourceFile","aSourceContent","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aName","_serializeMappings","nameIdx","sourceIdx","previousGeneratedLine","aSources","toJSON","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","nextLine","addMappingWithCode","aChunk","prepend","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","urlGenerate","aParsedUrl","aPath","up","aRoot","aPathUrl","aRootUrl","supportsNullProto","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated","sourceURL","sourceMapURL","existsSync","bufferFrom","dynamicRequire","require","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","XMLHttpRequest","handlerExec","retrieveFile","supportRelativeURL","startPath","drive","contents","xhr","readyState","responseText","er","retrieveSourceMap","mapSourcePosition","urlAndMap","originalPosition","mapEvalOrigin","origin","CallSiteToString","cloneCallSite","frame","getPrototypeOf","wrapCallSite","nextPosition","curPosition","headerLength","originalFunctionName","errorString","processedStack","getErrorSource","printErrorAndExit","globalProcessStderr","setBlocking","exit","sourceMapData","sourceMappingURL","fileData","sourceMapHeader","getResponseHeader","lastMatch","retrieveSourceMapURL","rawData","originalRetrieveFileHandlers","originalRetrieveMapHandlers","install","overrideRetrieveFile","overrideRetrieveSourceMap","hookRequire","Module","$compile","_compile","__sourceMapSupport","installHandler","handleUncaughtExceptions","isMainThread","origEmit","hasStack","resetRetrieveHandlers","BatchError","getErrors","$isErrorList","total","succeeded","failed","counter","PageError","SequenceError","errorReasons","cbName","wrap","cbTime","cbNow","cbDelay","cbResult","setError","isPromise","check","srcTime","destTime","srcNow","srcDelay","pages","destNow","destDelay","destResult","isRej","delayed","track","isReadableStream","readSize","receiveEvent","readChunks","waiting","reads","onReceive","closable","onClose","calls","lib","parsePromiseLib","asyncAdapter","g","throw","kLast","kDecoder","overflow","mapper","skipOverflow","noop","incoming","autoDestroy","readableObjectMode","_destroy","errorEmitted","STATUS_CODES","populateStatusesMap","retry","typer","tryNormalizeType","mimeMatch","hasbody","actual","actualParts","expectedParts","hasPipeDataListeners","rnds8Pool","poolPtr","rng","uuid","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","hashfunc","generateUUID","unescape","stringToBytes","DNS","v35","rnds","FIELD_NAME_REGEXP","fld","v4","uuidv4","todoList","taskList","tabsID","todoData","tasks","found","list_id","tabsData","tab","task_id","put","task_title","listId","listTitle","post","note_id","note_title","list_title","tab_id","noteContents","content_json","tab_title","cookieParser","indexRouter","todoRouter","__dirname","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","toStringTag","nmd","serverlessExpress"],"sourceRoot":""}